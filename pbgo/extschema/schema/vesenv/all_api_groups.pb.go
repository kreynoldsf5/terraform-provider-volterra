// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ves.io/schema/vesenv/all_api_groups.proto

package vesenv

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// APIGroupChoice enumerates all the well-known api_group.Objects in a VES environment
type APIGroupChoice struct {
	// Types that are valid to be assigned to Choice:
	//	*APIGroupChoice_InfrastructureDemoAccessRead
	//	*APIGroupChoice_VesIoBillingRead
	//	*APIGroupChoice_VesIoBillingWrite
	//	*APIGroupChoice_VesIoGeneralRead
	//	*APIGroupChoice_VesIoGeneralWrite
	//	*APIGroupChoice_VesIoIaasCaasRead
	//	*APIGroupChoice_VesIoIaasCaasWrite
	//	*APIGroupChoice_VesIoInfraMonitorRead
	//	*APIGroupChoice_VesIoInfraMonitorWrite
	//	*APIGroupChoice_VesIoInfrastructureRead
	//	*APIGroupChoice_VesIoInfrastructureWrite
	//	*APIGroupChoice_VesIoInternalRead
	//	*APIGroupChoice_VesIoInternalWrite
	//	*APIGroupChoice_VesIoK8SRead
	//	*APIGroupChoice_VesIoK8SWrite
	//	*APIGroupChoice_VesIoLabelsRead
	//	*APIGroupChoice_VesIoLabelsWrite
	//	*APIGroupChoice_VesIoLocalK8SWrite
	//	*APIGroupChoice_VesIoMonitorRead
	//	*APIGroupChoice_VesIoMonitorWrite
	//	*APIGroupChoice_VesIoNetworkRead
	//	*APIGroupChoice_VesIoNetworkWrite
	//	*APIGroupChoice_VesIoProxyMonitorRead
	//	*APIGroupChoice_VesIoProxyMonitorWrite
	//	*APIGroupChoice_VesIoProxyRead
	//	*APIGroupChoice_VesIoProxySecurityRead
	//	*APIGroupChoice_VesIoProxySecurityWrite
	//	*APIGroupChoice_VesIoProxyWafRead
	//	*APIGroupChoice_VesIoProxyWafWrite
	//	*APIGroupChoice_VesIoProxyWrite
	//	*APIGroupChoice_VesIoSecretsRead
	//	*APIGroupChoice_VesIoSecretsWrite
	//	*APIGroupChoice_VesIoUamAdminRead
	//	*APIGroupChoice_VesIoUamAdminWrite
	//	*APIGroupChoice_VesIoUamRead
	//	*APIGroupChoice_VesIoUamWrite
	//	*APIGroupChoice_VesIoVirtualSitesRead
	//	*APIGroupChoice_VesIoVirtualSitesWrite
	//	*APIGroupChoice_VesIoVoltShareRead
	//	*APIGroupChoice_VesIoVoltShareWrite
	//	*APIGroupChoice_VesIoWebAccessRead
	//	*APIGroupChoice_VesIoWebAccessWrite
	//	*APIGroupChoice_VesIoTenantOwnerRead
	//	*APIGroupChoice_VesIoTenantOwnerWrite
	//	*APIGroupChoice_VesIoStoredObjectRead
	//	*APIGroupChoice_VesIoStoredObjectWrite
	//	*APIGroupChoice_VoltconsoleShapeBotRead
	//	*APIGroupChoice_VoltconsoleShapeBotWrite
	//	*APIGroupChoice_VoltconsoleShapeBotAdmin
	//	*APIGroupChoice_VoltconsoleShapeBotSubscriptionMgmt
	//	*APIGroupChoice_VoltconsoleShapeRecognizeRead
	//	*APIGroupChoice_VoltconsoleShapeRecognizeWrite
	//	*APIGroupChoice_VoltconsoleShapeRecognizeAdmin
	//	*APIGroupChoice_VoltconsoleShapeRecognizeSubscriptionMgmt
	//	*APIGroupChoice_VoltconsoleAidataBfdpRead
	//	*APIGroupChoice_VoltconsoleAidataBfdpWrite
	//	*APIGroupChoice_VoltconsoleAidataBfdpAdmin
	//	*APIGroupChoice_VoltconsoleAidataBfdpSubscriptionMgmt
	//	*APIGroupChoice_VoltconsoleSyntheticMonitorRead
	//	*APIGroupChoice_VoltconsoleSyntheticMonitorWrite
	//	*APIGroupChoice_VoltconsoleTenantMgmtRead
	//	*APIGroupChoice_VoltconsoleTenantMgmtWrite
	//	*APIGroupChoice_VoltconsoleTenantMgmtAdmin
	//	*APIGroupChoice_VoltconsoleTenantMgmtSubscriptionMgmt
	//	*APIGroupChoice_VoltconsoleScimClientWrite
	//	*APIGroupChoice_VoltconsoleScimClientRead
	//	*APIGroupChoice_VoltconsoleScimAdmin
	//	*APIGroupChoice_VoltconsoleScimSubscriptionMgmt
	//	*APIGroupChoice_VoltconsoleNginxMgmtSuiteRead
	//	*APIGroupChoice_VoltconsoleNginxMgmtSuiteWrite
	//	*APIGroupChoice_VoltconsoleNginxMgmtSuiteAdmin
	//	*APIGroupChoice_VoltconsoleNginxMgmtSuiteSubscriptionMgmt
	//	*APIGroupChoice_VoltconsoleCdnRead
	//	*APIGroupChoice_VoltconsoleCdnWrite
	//	*APIGroupChoice_VoltconsoleCdnAdmin
	//	*APIGroupChoice_VoltconsoleCdnSubscriptionMgmt
	Choice isAPIGroupChoice_Choice `protobuf_oneof:"choice"`
}

func (m *APIGroupChoice) Reset()      { *m = APIGroupChoice{} }
func (*APIGroupChoice) ProtoMessage() {}
func (*APIGroupChoice) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb1a2f3ff9afca20, []int{0}
}
func (m *APIGroupChoice) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *APIGroupChoice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_APIGroupChoice.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *APIGroupChoice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_APIGroupChoice.Merge(m, src)
}
func (m *APIGroupChoice) XXX_Size() int {
	return m.Size()
}
func (m *APIGroupChoice) XXX_DiscardUnknown() {
	xxx_messageInfo_APIGroupChoice.DiscardUnknown(m)
}

var xxx_messageInfo_APIGroupChoice proto.InternalMessageInfo

type isAPIGroupChoice_Choice interface {
	isAPIGroupChoice_Choice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type APIGroupChoice_InfrastructureDemoAccessRead struct {
	InfrastructureDemoAccessRead bool `protobuf:"varint,1,opt,name=infrastructure_demo_access_read,json=infrastructureDemoAccessRead,proto3,oneof" json:"infrastructure_demo_access_read,omitempty"`
}
type APIGroupChoice_VesIoBillingRead struct {
	VesIoBillingRead bool `protobuf:"varint,2,opt,name=ves_io_billing_read,json=vesIoBillingRead,proto3,oneof" json:"ves_io_billing_read,omitempty"`
}
type APIGroupChoice_VesIoBillingWrite struct {
	VesIoBillingWrite bool `protobuf:"varint,3,opt,name=ves_io_billing_write,json=vesIoBillingWrite,proto3,oneof" json:"ves_io_billing_write,omitempty"`
}
type APIGroupChoice_VesIoGeneralRead struct {
	VesIoGeneralRead bool `protobuf:"varint,4,opt,name=ves_io_general_read,json=vesIoGeneralRead,proto3,oneof" json:"ves_io_general_read,omitempty"`
}
type APIGroupChoice_VesIoGeneralWrite struct {
	VesIoGeneralWrite bool `protobuf:"varint,5,opt,name=ves_io_general_write,json=vesIoGeneralWrite,proto3,oneof" json:"ves_io_general_write,omitempty"`
}
type APIGroupChoice_VesIoIaasCaasRead struct {
	VesIoIaasCaasRead bool `protobuf:"varint,6,opt,name=ves_io_iaas_caas_read,json=vesIoIaasCaasRead,proto3,oneof" json:"ves_io_iaas_caas_read,omitempty"`
}
type APIGroupChoice_VesIoIaasCaasWrite struct {
	VesIoIaasCaasWrite bool `protobuf:"varint,7,opt,name=ves_io_iaas_caas_write,json=vesIoIaasCaasWrite,proto3,oneof" json:"ves_io_iaas_caas_write,omitempty"`
}
type APIGroupChoice_VesIoInfraMonitorRead struct {
	VesIoInfraMonitorRead bool `protobuf:"varint,8,opt,name=ves_io_infra_monitor_read,json=vesIoInfraMonitorRead,proto3,oneof" json:"ves_io_infra_monitor_read,omitempty"`
}
type APIGroupChoice_VesIoInfraMonitorWrite struct {
	VesIoInfraMonitorWrite bool `protobuf:"varint,9,opt,name=ves_io_infra_monitor_write,json=vesIoInfraMonitorWrite,proto3,oneof" json:"ves_io_infra_monitor_write,omitempty"`
}
type APIGroupChoice_VesIoInfrastructureRead struct {
	VesIoInfrastructureRead bool `protobuf:"varint,10,opt,name=ves_io_infrastructure_read,json=vesIoInfrastructureRead,proto3,oneof" json:"ves_io_infrastructure_read,omitempty"`
}
type APIGroupChoice_VesIoInfrastructureWrite struct {
	VesIoInfrastructureWrite bool `protobuf:"varint,11,opt,name=ves_io_infrastructure_write,json=vesIoInfrastructureWrite,proto3,oneof" json:"ves_io_infrastructure_write,omitempty"`
}
type APIGroupChoice_VesIoInternalRead struct {
	VesIoInternalRead bool `protobuf:"varint,12,opt,name=ves_io_internal_read,json=vesIoInternalRead,proto3,oneof" json:"ves_io_internal_read,omitempty"`
}
type APIGroupChoice_VesIoInternalWrite struct {
	VesIoInternalWrite bool `protobuf:"varint,13,opt,name=ves_io_internal_write,json=vesIoInternalWrite,proto3,oneof" json:"ves_io_internal_write,omitempty"`
}
type APIGroupChoice_VesIoK8SRead struct {
	VesIoK8SRead bool `protobuf:"varint,14,opt,name=ves_io_k8s_read,json=vesIoK8sRead,proto3,oneof" json:"ves_io_k8s_read,omitempty"`
}
type APIGroupChoice_VesIoK8SWrite struct {
	VesIoK8SWrite bool `protobuf:"varint,15,opt,name=ves_io_k8s_write,json=vesIoK8sWrite,proto3,oneof" json:"ves_io_k8s_write,omitempty"`
}
type APIGroupChoice_VesIoLabelsRead struct {
	VesIoLabelsRead bool `protobuf:"varint,16,opt,name=ves_io_labels_read,json=vesIoLabelsRead,proto3,oneof" json:"ves_io_labels_read,omitempty"`
}
type APIGroupChoice_VesIoLabelsWrite struct {
	VesIoLabelsWrite bool `protobuf:"varint,17,opt,name=ves_io_labels_write,json=vesIoLabelsWrite,proto3,oneof" json:"ves_io_labels_write,omitempty"`
}
type APIGroupChoice_VesIoLocalK8SWrite struct {
	VesIoLocalK8SWrite bool `protobuf:"varint,18,opt,name=ves_io_local_k8s_write,json=vesIoLocalK8sWrite,proto3,oneof" json:"ves_io_local_k8s_write,omitempty"`
}
type APIGroupChoice_VesIoMonitorRead struct {
	VesIoMonitorRead bool `protobuf:"varint,19,opt,name=ves_io_monitor_read,json=vesIoMonitorRead,proto3,oneof" json:"ves_io_monitor_read,omitempty"`
}
type APIGroupChoice_VesIoMonitorWrite struct {
	VesIoMonitorWrite bool `protobuf:"varint,20,opt,name=ves_io_monitor_write,json=vesIoMonitorWrite,proto3,oneof" json:"ves_io_monitor_write,omitempty"`
}
type APIGroupChoice_VesIoNetworkRead struct {
	VesIoNetworkRead bool `protobuf:"varint,21,opt,name=ves_io_network_read,json=vesIoNetworkRead,proto3,oneof" json:"ves_io_network_read,omitempty"`
}
type APIGroupChoice_VesIoNetworkWrite struct {
	VesIoNetworkWrite bool `protobuf:"varint,22,opt,name=ves_io_network_write,json=vesIoNetworkWrite,proto3,oneof" json:"ves_io_network_write,omitempty"`
}
type APIGroupChoice_VesIoProxyMonitorRead struct {
	VesIoProxyMonitorRead bool `protobuf:"varint,23,opt,name=ves_io_proxy_monitor_read,json=vesIoProxyMonitorRead,proto3,oneof" json:"ves_io_proxy_monitor_read,omitempty"`
}
type APIGroupChoice_VesIoProxyMonitorWrite struct {
	VesIoProxyMonitorWrite bool `protobuf:"varint,24,opt,name=ves_io_proxy_monitor_write,json=vesIoProxyMonitorWrite,proto3,oneof" json:"ves_io_proxy_monitor_write,omitempty"`
}
type APIGroupChoice_VesIoProxyRead struct {
	VesIoProxyRead bool `protobuf:"varint,25,opt,name=ves_io_proxy_read,json=vesIoProxyRead,proto3,oneof" json:"ves_io_proxy_read,omitempty"`
}
type APIGroupChoice_VesIoProxySecurityRead struct {
	VesIoProxySecurityRead bool `protobuf:"varint,26,opt,name=ves_io_proxy_security_read,json=vesIoProxySecurityRead,proto3,oneof" json:"ves_io_proxy_security_read,omitempty"`
}
type APIGroupChoice_VesIoProxySecurityWrite struct {
	VesIoProxySecurityWrite bool `protobuf:"varint,27,opt,name=ves_io_proxy_security_write,json=vesIoProxySecurityWrite,proto3,oneof" json:"ves_io_proxy_security_write,omitempty"`
}
type APIGroupChoice_VesIoProxyWafRead struct {
	VesIoProxyWafRead bool `protobuf:"varint,28,opt,name=ves_io_proxy_waf_read,json=vesIoProxyWafRead,proto3,oneof" json:"ves_io_proxy_waf_read,omitempty"`
}
type APIGroupChoice_VesIoProxyWafWrite struct {
	VesIoProxyWafWrite bool `protobuf:"varint,29,opt,name=ves_io_proxy_waf_write,json=vesIoProxyWafWrite,proto3,oneof" json:"ves_io_proxy_waf_write,omitempty"`
}
type APIGroupChoice_VesIoProxyWrite struct {
	VesIoProxyWrite bool `protobuf:"varint,30,opt,name=ves_io_proxy_write,json=vesIoProxyWrite,proto3,oneof" json:"ves_io_proxy_write,omitempty"`
}
type APIGroupChoice_VesIoSecretsRead struct {
	VesIoSecretsRead bool `protobuf:"varint,31,opt,name=ves_io_secrets_read,json=vesIoSecretsRead,proto3,oneof" json:"ves_io_secrets_read,omitempty"`
}
type APIGroupChoice_VesIoSecretsWrite struct {
	VesIoSecretsWrite bool `protobuf:"varint,32,opt,name=ves_io_secrets_write,json=vesIoSecretsWrite,proto3,oneof" json:"ves_io_secrets_write,omitempty"`
}
type APIGroupChoice_VesIoUamAdminRead struct {
	VesIoUamAdminRead bool `protobuf:"varint,35,opt,name=ves_io_uam_admin_read,json=vesIoUamAdminRead,proto3,oneof" json:"ves_io_uam_admin_read,omitempty"`
}
type APIGroupChoice_VesIoUamAdminWrite struct {
	VesIoUamAdminWrite bool `protobuf:"varint,36,opt,name=ves_io_uam_admin_write,json=vesIoUamAdminWrite,proto3,oneof" json:"ves_io_uam_admin_write,omitempty"`
}
type APIGroupChoice_VesIoUamRead struct {
	VesIoUamRead bool `protobuf:"varint,37,opt,name=ves_io_uam_read,json=vesIoUamRead,proto3,oneof" json:"ves_io_uam_read,omitempty"`
}
type APIGroupChoice_VesIoUamWrite struct {
	VesIoUamWrite bool `protobuf:"varint,38,opt,name=ves_io_uam_write,json=vesIoUamWrite,proto3,oneof" json:"ves_io_uam_write,omitempty"`
}
type APIGroupChoice_VesIoVirtualSitesRead struct {
	VesIoVirtualSitesRead bool `protobuf:"varint,39,opt,name=ves_io_virtual_sites_read,json=vesIoVirtualSitesRead,proto3,oneof" json:"ves_io_virtual_sites_read,omitempty"`
}
type APIGroupChoice_VesIoVirtualSitesWrite struct {
	VesIoVirtualSitesWrite bool `protobuf:"varint,40,opt,name=ves_io_virtual_sites_write,json=vesIoVirtualSitesWrite,proto3,oneof" json:"ves_io_virtual_sites_write,omitempty"`
}
type APIGroupChoice_VesIoVoltShareRead struct {
	VesIoVoltShareRead bool `protobuf:"varint,41,opt,name=ves_io_volt_share_read,json=vesIoVoltShareRead,proto3,oneof" json:"ves_io_volt_share_read,omitempty"`
}
type APIGroupChoice_VesIoVoltShareWrite struct {
	VesIoVoltShareWrite bool `protobuf:"varint,42,opt,name=ves_io_volt_share_write,json=vesIoVoltShareWrite,proto3,oneof" json:"ves_io_volt_share_write,omitempty"`
}
type APIGroupChoice_VesIoWebAccessRead struct {
	VesIoWebAccessRead bool `protobuf:"varint,43,opt,name=ves_io_web_access_read,json=vesIoWebAccessRead,proto3,oneof" json:"ves_io_web_access_read,omitempty"`
}
type APIGroupChoice_VesIoWebAccessWrite struct {
	VesIoWebAccessWrite bool `protobuf:"varint,44,opt,name=ves_io_web_access_write,json=vesIoWebAccessWrite,proto3,oneof" json:"ves_io_web_access_write,omitempty"`
}
type APIGroupChoice_VesIoTenantOwnerRead struct {
	VesIoTenantOwnerRead bool `protobuf:"varint,45,opt,name=ves_io_tenant_owner_read,json=vesIoTenantOwnerRead,proto3,oneof" json:"ves_io_tenant_owner_read,omitempty"`
}
type APIGroupChoice_VesIoTenantOwnerWrite struct {
	VesIoTenantOwnerWrite bool `protobuf:"varint,46,opt,name=ves_io_tenant_owner_write,json=vesIoTenantOwnerWrite,proto3,oneof" json:"ves_io_tenant_owner_write,omitempty"`
}
type APIGroupChoice_VesIoStoredObjectRead struct {
	VesIoStoredObjectRead bool `protobuf:"varint,47,opt,name=ves_io_stored_object_read,json=vesIoStoredObjectRead,proto3,oneof" json:"ves_io_stored_object_read,omitempty"`
}
type APIGroupChoice_VesIoStoredObjectWrite struct {
	VesIoStoredObjectWrite bool `protobuf:"varint,48,opt,name=ves_io_stored_object_write,json=vesIoStoredObjectWrite,proto3,oneof" json:"ves_io_stored_object_write,omitempty"`
}
type APIGroupChoice_VoltconsoleShapeBotRead struct {
	VoltconsoleShapeBotRead bool `protobuf:"varint,49,opt,name=voltconsole_shape_bot_read,json=voltconsoleShapeBotRead,proto3,oneof" json:"voltconsole_shape_bot_read,omitempty"`
}
type APIGroupChoice_VoltconsoleShapeBotWrite struct {
	VoltconsoleShapeBotWrite bool `protobuf:"varint,50,opt,name=voltconsole_shape_bot_write,json=voltconsoleShapeBotWrite,proto3,oneof" json:"voltconsole_shape_bot_write,omitempty"`
}
type APIGroupChoice_VoltconsoleShapeBotAdmin struct {
	VoltconsoleShapeBotAdmin bool `protobuf:"varint,51,opt,name=voltconsole_shape_bot_admin,json=voltconsoleShapeBotAdmin,proto3,oneof" json:"voltconsole_shape_bot_admin,omitempty"`
}
type APIGroupChoice_VoltconsoleShapeBotSubscriptionMgmt struct {
	VoltconsoleShapeBotSubscriptionMgmt bool `protobuf:"varint,52,opt,name=voltconsole_shape_bot_subscription_mgmt,json=voltconsoleShapeBotSubscriptionMgmt,proto3,oneof" json:"voltconsole_shape_bot_subscription_mgmt,omitempty"`
}
type APIGroupChoice_VoltconsoleShapeRecognizeRead struct {
	VoltconsoleShapeRecognizeRead bool `protobuf:"varint,53,opt,name=voltconsole_shape_recognize_read,json=voltconsoleShapeRecognizeRead,proto3,oneof" json:"voltconsole_shape_recognize_read,omitempty"`
}
type APIGroupChoice_VoltconsoleShapeRecognizeWrite struct {
	VoltconsoleShapeRecognizeWrite bool `protobuf:"varint,54,opt,name=voltconsole_shape_recognize_write,json=voltconsoleShapeRecognizeWrite,proto3,oneof" json:"voltconsole_shape_recognize_write,omitempty"`
}
type APIGroupChoice_VoltconsoleShapeRecognizeAdmin struct {
	VoltconsoleShapeRecognizeAdmin bool `protobuf:"varint,55,opt,name=voltconsole_shape_recognize_admin,json=voltconsoleShapeRecognizeAdmin,proto3,oneof" json:"voltconsole_shape_recognize_admin,omitempty"`
}
type APIGroupChoice_VoltconsoleShapeRecognizeSubscriptionMgmt struct {
	VoltconsoleShapeRecognizeSubscriptionMgmt bool `protobuf:"varint,56,opt,name=voltconsole_shape_recognize_subscription_mgmt,json=voltconsoleShapeRecognizeSubscriptionMgmt,proto3,oneof" json:"voltconsole_shape_recognize_subscription_mgmt,omitempty"`
}
type APIGroupChoice_VoltconsoleAidataBfdpRead struct {
	VoltconsoleAidataBfdpRead bool `protobuf:"varint,57,opt,name=voltconsole_aidata_bfdp_read,json=voltconsoleAidataBfdpRead,proto3,oneof" json:"voltconsole_aidata_bfdp_read,omitempty"`
}
type APIGroupChoice_VoltconsoleAidataBfdpWrite struct {
	VoltconsoleAidataBfdpWrite bool `protobuf:"varint,58,opt,name=voltconsole_aidata_bfdp_write,json=voltconsoleAidataBfdpWrite,proto3,oneof" json:"voltconsole_aidata_bfdp_write,omitempty"`
}
type APIGroupChoice_VoltconsoleAidataBfdpAdmin struct {
	VoltconsoleAidataBfdpAdmin bool `protobuf:"varint,59,opt,name=voltconsole_aidata_bfdp_admin,json=voltconsoleAidataBfdpAdmin,proto3,oneof" json:"voltconsole_aidata_bfdp_admin,omitempty"`
}
type APIGroupChoice_VoltconsoleAidataBfdpSubscriptionMgmt struct {
	VoltconsoleAidataBfdpSubscriptionMgmt bool `protobuf:"varint,60,opt,name=voltconsole_aidata_bfdp_subscription_mgmt,json=voltconsoleAidataBfdpSubscriptionMgmt,proto3,oneof" json:"voltconsole_aidata_bfdp_subscription_mgmt,omitempty"`
}
type APIGroupChoice_VoltconsoleSyntheticMonitorRead struct {
	VoltconsoleSyntheticMonitorRead bool `protobuf:"varint,61,opt,name=voltconsole_synthetic_monitor_read,json=voltconsoleSyntheticMonitorRead,proto3,oneof" json:"voltconsole_synthetic_monitor_read,omitempty"`
}
type APIGroupChoice_VoltconsoleSyntheticMonitorWrite struct {
	VoltconsoleSyntheticMonitorWrite bool `protobuf:"varint,62,opt,name=voltconsole_synthetic_monitor_write,json=voltconsoleSyntheticMonitorWrite,proto3,oneof" json:"voltconsole_synthetic_monitor_write,omitempty"`
}
type APIGroupChoice_VoltconsoleTenantMgmtRead struct {
	VoltconsoleTenantMgmtRead bool `protobuf:"varint,65,opt,name=voltconsole_tenant_mgmt_read,json=voltconsoleTenantMgmtRead,proto3,oneof" json:"voltconsole_tenant_mgmt_read,omitempty"`
}
type APIGroupChoice_VoltconsoleTenantMgmtWrite struct {
	VoltconsoleTenantMgmtWrite bool `protobuf:"varint,66,opt,name=voltconsole_tenant_mgmt_write,json=voltconsoleTenantMgmtWrite,proto3,oneof" json:"voltconsole_tenant_mgmt_write,omitempty"`
}
type APIGroupChoice_VoltconsoleTenantMgmtAdmin struct {
	VoltconsoleTenantMgmtAdmin bool `protobuf:"varint,67,opt,name=voltconsole_tenant_mgmt_admin,json=voltconsoleTenantMgmtAdmin,proto3,oneof" json:"voltconsole_tenant_mgmt_admin,omitempty"`
}
type APIGroupChoice_VoltconsoleTenantMgmtSubscriptionMgmt struct {
	VoltconsoleTenantMgmtSubscriptionMgmt bool `protobuf:"varint,68,opt,name=voltconsole_tenant_mgmt_subscription_mgmt,json=voltconsoleTenantMgmtSubscriptionMgmt,proto3,oneof" json:"voltconsole_tenant_mgmt_subscription_mgmt,omitempty"`
}
type APIGroupChoice_VoltconsoleScimClientWrite struct {
	VoltconsoleScimClientWrite bool `protobuf:"varint,69,opt,name=voltconsole_scim_client_write,json=voltconsoleScimClientWrite,proto3,oneof" json:"voltconsole_scim_client_write,omitempty"`
}
type APIGroupChoice_VoltconsoleScimClientRead struct {
	VoltconsoleScimClientRead bool `protobuf:"varint,70,opt,name=voltconsole_scim_client_read,json=voltconsoleScimClientRead,proto3,oneof" json:"voltconsole_scim_client_read,omitempty"`
}
type APIGroupChoice_VoltconsoleScimAdmin struct {
	VoltconsoleScimAdmin bool `protobuf:"varint,71,opt,name=voltconsole_scim_admin,json=voltconsoleScimAdmin,proto3,oneof" json:"voltconsole_scim_admin,omitempty"`
}
type APIGroupChoice_VoltconsoleScimSubscriptionMgmt struct {
	VoltconsoleScimSubscriptionMgmt bool `protobuf:"varint,72,opt,name=voltconsole_scim_subscription_mgmt,json=voltconsoleScimSubscriptionMgmt,proto3,oneof" json:"voltconsole_scim_subscription_mgmt,omitempty"`
}
type APIGroupChoice_VoltconsoleNginxMgmtSuiteRead struct {
	VoltconsoleNginxMgmtSuiteRead bool `protobuf:"varint,73,opt,name=voltconsole_nginx_mgmt_suite_read,json=voltconsoleNginxMgmtSuiteRead,proto3,oneof" json:"voltconsole_nginx_mgmt_suite_read,omitempty"`
}
type APIGroupChoice_VoltconsoleNginxMgmtSuiteWrite struct {
	VoltconsoleNginxMgmtSuiteWrite bool `protobuf:"varint,74,opt,name=voltconsole_nginx_mgmt_suite_write,json=voltconsoleNginxMgmtSuiteWrite,proto3,oneof" json:"voltconsole_nginx_mgmt_suite_write,omitempty"`
}
type APIGroupChoice_VoltconsoleNginxMgmtSuiteAdmin struct {
	VoltconsoleNginxMgmtSuiteAdmin bool `protobuf:"varint,79,opt,name=voltconsole_nginx_mgmt_suite_admin,json=voltconsoleNginxMgmtSuiteAdmin,proto3,oneof" json:"voltconsole_nginx_mgmt_suite_admin,omitempty"`
}
type APIGroupChoice_VoltconsoleNginxMgmtSuiteSubscriptionMgmt struct {
	VoltconsoleNginxMgmtSuiteSubscriptionMgmt bool `protobuf:"varint,80,opt,name=voltconsole_nginx_mgmt_suite_subscription_mgmt,json=voltconsoleNginxMgmtSuiteSubscriptionMgmt,proto3,oneof" json:"voltconsole_nginx_mgmt_suite_subscription_mgmt,omitempty"`
}
type APIGroupChoice_VoltconsoleCdnRead struct {
	VoltconsoleCdnRead bool `protobuf:"varint,85,opt,name=voltconsole_cdn_read,json=voltconsoleCdnRead,proto3,oneof" json:"voltconsole_cdn_read,omitempty"`
}
type APIGroupChoice_VoltconsoleCdnWrite struct {
	VoltconsoleCdnWrite bool `protobuf:"varint,86,opt,name=voltconsole_cdn_write,json=voltconsoleCdnWrite,proto3,oneof" json:"voltconsole_cdn_write,omitempty"`
}
type APIGroupChoice_VoltconsoleCdnAdmin struct {
	VoltconsoleCdnAdmin bool `protobuf:"varint,87,opt,name=voltconsole_cdn_admin,json=voltconsoleCdnAdmin,proto3,oneof" json:"voltconsole_cdn_admin,omitempty"`
}
type APIGroupChoice_VoltconsoleCdnSubscriptionMgmt struct {
	VoltconsoleCdnSubscriptionMgmt bool `protobuf:"varint,88,opt,name=voltconsole_cdn_subscription_mgmt,json=voltconsoleCdnSubscriptionMgmt,proto3,oneof" json:"voltconsole_cdn_subscription_mgmt,omitempty"`
}

func (*APIGroupChoice_InfrastructureDemoAccessRead) isAPIGroupChoice_Choice()              {}
func (*APIGroupChoice_VesIoBillingRead) isAPIGroupChoice_Choice()                          {}
func (*APIGroupChoice_VesIoBillingWrite) isAPIGroupChoice_Choice()                         {}
func (*APIGroupChoice_VesIoGeneralRead) isAPIGroupChoice_Choice()                          {}
func (*APIGroupChoice_VesIoGeneralWrite) isAPIGroupChoice_Choice()                         {}
func (*APIGroupChoice_VesIoIaasCaasRead) isAPIGroupChoice_Choice()                         {}
func (*APIGroupChoice_VesIoIaasCaasWrite) isAPIGroupChoice_Choice()                        {}
func (*APIGroupChoice_VesIoInfraMonitorRead) isAPIGroupChoice_Choice()                     {}
func (*APIGroupChoice_VesIoInfraMonitorWrite) isAPIGroupChoice_Choice()                    {}
func (*APIGroupChoice_VesIoInfrastructureRead) isAPIGroupChoice_Choice()                   {}
func (*APIGroupChoice_VesIoInfrastructureWrite) isAPIGroupChoice_Choice()                  {}
func (*APIGroupChoice_VesIoInternalRead) isAPIGroupChoice_Choice()                         {}
func (*APIGroupChoice_VesIoInternalWrite) isAPIGroupChoice_Choice()                        {}
func (*APIGroupChoice_VesIoK8SRead) isAPIGroupChoice_Choice()                              {}
func (*APIGroupChoice_VesIoK8SWrite) isAPIGroupChoice_Choice()                             {}
func (*APIGroupChoice_VesIoLabelsRead) isAPIGroupChoice_Choice()                           {}
func (*APIGroupChoice_VesIoLabelsWrite) isAPIGroupChoice_Choice()                          {}
func (*APIGroupChoice_VesIoLocalK8SWrite) isAPIGroupChoice_Choice()                        {}
func (*APIGroupChoice_VesIoMonitorRead) isAPIGroupChoice_Choice()                          {}
func (*APIGroupChoice_VesIoMonitorWrite) isAPIGroupChoice_Choice()                         {}
func (*APIGroupChoice_VesIoNetworkRead) isAPIGroupChoice_Choice()                          {}
func (*APIGroupChoice_VesIoNetworkWrite) isAPIGroupChoice_Choice()                         {}
func (*APIGroupChoice_VesIoProxyMonitorRead) isAPIGroupChoice_Choice()                     {}
func (*APIGroupChoice_VesIoProxyMonitorWrite) isAPIGroupChoice_Choice()                    {}
func (*APIGroupChoice_VesIoProxyRead) isAPIGroupChoice_Choice()                            {}
func (*APIGroupChoice_VesIoProxySecurityRead) isAPIGroupChoice_Choice()                    {}
func (*APIGroupChoice_VesIoProxySecurityWrite) isAPIGroupChoice_Choice()                   {}
func (*APIGroupChoice_VesIoProxyWafRead) isAPIGroupChoice_Choice()                         {}
func (*APIGroupChoice_VesIoProxyWafWrite) isAPIGroupChoice_Choice()                        {}
func (*APIGroupChoice_VesIoProxyWrite) isAPIGroupChoice_Choice()                           {}
func (*APIGroupChoice_VesIoSecretsRead) isAPIGroupChoice_Choice()                          {}
func (*APIGroupChoice_VesIoSecretsWrite) isAPIGroupChoice_Choice()                         {}
func (*APIGroupChoice_VesIoUamAdminRead) isAPIGroupChoice_Choice()                         {}
func (*APIGroupChoice_VesIoUamAdminWrite) isAPIGroupChoice_Choice()                        {}
func (*APIGroupChoice_VesIoUamRead) isAPIGroupChoice_Choice()                              {}
func (*APIGroupChoice_VesIoUamWrite) isAPIGroupChoice_Choice()                             {}
func (*APIGroupChoice_VesIoVirtualSitesRead) isAPIGroupChoice_Choice()                     {}
func (*APIGroupChoice_VesIoVirtualSitesWrite) isAPIGroupChoice_Choice()                    {}
func (*APIGroupChoice_VesIoVoltShareRead) isAPIGroupChoice_Choice()                        {}
func (*APIGroupChoice_VesIoVoltShareWrite) isAPIGroupChoice_Choice()                       {}
func (*APIGroupChoice_VesIoWebAccessRead) isAPIGroupChoice_Choice()                        {}
func (*APIGroupChoice_VesIoWebAccessWrite) isAPIGroupChoice_Choice()                       {}
func (*APIGroupChoice_VesIoTenantOwnerRead) isAPIGroupChoice_Choice()                      {}
func (*APIGroupChoice_VesIoTenantOwnerWrite) isAPIGroupChoice_Choice()                     {}
func (*APIGroupChoice_VesIoStoredObjectRead) isAPIGroupChoice_Choice()                     {}
func (*APIGroupChoice_VesIoStoredObjectWrite) isAPIGroupChoice_Choice()                    {}
func (*APIGroupChoice_VoltconsoleShapeBotRead) isAPIGroupChoice_Choice()                   {}
func (*APIGroupChoice_VoltconsoleShapeBotWrite) isAPIGroupChoice_Choice()                  {}
func (*APIGroupChoice_VoltconsoleShapeBotAdmin) isAPIGroupChoice_Choice()                  {}
func (*APIGroupChoice_VoltconsoleShapeBotSubscriptionMgmt) isAPIGroupChoice_Choice()       {}
func (*APIGroupChoice_VoltconsoleShapeRecognizeRead) isAPIGroupChoice_Choice()             {}
func (*APIGroupChoice_VoltconsoleShapeRecognizeWrite) isAPIGroupChoice_Choice()            {}
func (*APIGroupChoice_VoltconsoleShapeRecognizeAdmin) isAPIGroupChoice_Choice()            {}
func (*APIGroupChoice_VoltconsoleShapeRecognizeSubscriptionMgmt) isAPIGroupChoice_Choice() {}
func (*APIGroupChoice_VoltconsoleAidataBfdpRead) isAPIGroupChoice_Choice()                 {}
func (*APIGroupChoice_VoltconsoleAidataBfdpWrite) isAPIGroupChoice_Choice()                {}
func (*APIGroupChoice_VoltconsoleAidataBfdpAdmin) isAPIGroupChoice_Choice()                {}
func (*APIGroupChoice_VoltconsoleAidataBfdpSubscriptionMgmt) isAPIGroupChoice_Choice()     {}
func (*APIGroupChoice_VoltconsoleSyntheticMonitorRead) isAPIGroupChoice_Choice()           {}
func (*APIGroupChoice_VoltconsoleSyntheticMonitorWrite) isAPIGroupChoice_Choice()          {}
func (*APIGroupChoice_VoltconsoleTenantMgmtRead) isAPIGroupChoice_Choice()                 {}
func (*APIGroupChoice_VoltconsoleTenantMgmtWrite) isAPIGroupChoice_Choice()                {}
func (*APIGroupChoice_VoltconsoleTenantMgmtAdmin) isAPIGroupChoice_Choice()                {}
func (*APIGroupChoice_VoltconsoleTenantMgmtSubscriptionMgmt) isAPIGroupChoice_Choice()     {}
func (*APIGroupChoice_VoltconsoleScimClientWrite) isAPIGroupChoice_Choice()                {}
func (*APIGroupChoice_VoltconsoleScimClientRead) isAPIGroupChoice_Choice()                 {}
func (*APIGroupChoice_VoltconsoleScimAdmin) isAPIGroupChoice_Choice()                      {}
func (*APIGroupChoice_VoltconsoleScimSubscriptionMgmt) isAPIGroupChoice_Choice()           {}
func (*APIGroupChoice_VoltconsoleNginxMgmtSuiteRead) isAPIGroupChoice_Choice()             {}
func (*APIGroupChoice_VoltconsoleNginxMgmtSuiteWrite) isAPIGroupChoice_Choice()            {}
func (*APIGroupChoice_VoltconsoleNginxMgmtSuiteAdmin) isAPIGroupChoice_Choice()            {}
func (*APIGroupChoice_VoltconsoleNginxMgmtSuiteSubscriptionMgmt) isAPIGroupChoice_Choice() {}
func (*APIGroupChoice_VoltconsoleCdnRead) isAPIGroupChoice_Choice()                        {}
func (*APIGroupChoice_VoltconsoleCdnWrite) isAPIGroupChoice_Choice()                       {}
func (*APIGroupChoice_VoltconsoleCdnAdmin) isAPIGroupChoice_Choice()                       {}
func (*APIGroupChoice_VoltconsoleCdnSubscriptionMgmt) isAPIGroupChoice_Choice()            {}

func (m *APIGroupChoice) GetChoice() isAPIGroupChoice_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (m *APIGroupChoice) GetInfrastructureDemoAccessRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_InfrastructureDemoAccessRead); ok {
		return x.InfrastructureDemoAccessRead
	}
	return false
}

func (m *APIGroupChoice) GetVesIoBillingRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoBillingRead); ok {
		return x.VesIoBillingRead
	}
	return false
}

func (m *APIGroupChoice) GetVesIoBillingWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoBillingWrite); ok {
		return x.VesIoBillingWrite
	}
	return false
}

func (m *APIGroupChoice) GetVesIoGeneralRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoGeneralRead); ok {
		return x.VesIoGeneralRead
	}
	return false
}

func (m *APIGroupChoice) GetVesIoGeneralWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoGeneralWrite); ok {
		return x.VesIoGeneralWrite
	}
	return false
}

func (m *APIGroupChoice) GetVesIoIaasCaasRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoIaasCaasRead); ok {
		return x.VesIoIaasCaasRead
	}
	return false
}

func (m *APIGroupChoice) GetVesIoIaasCaasWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoIaasCaasWrite); ok {
		return x.VesIoIaasCaasWrite
	}
	return false
}

func (m *APIGroupChoice) GetVesIoInfraMonitorRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoInfraMonitorRead); ok {
		return x.VesIoInfraMonitorRead
	}
	return false
}

func (m *APIGroupChoice) GetVesIoInfraMonitorWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoInfraMonitorWrite); ok {
		return x.VesIoInfraMonitorWrite
	}
	return false
}

func (m *APIGroupChoice) GetVesIoInfrastructureRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoInfrastructureRead); ok {
		return x.VesIoInfrastructureRead
	}
	return false
}

func (m *APIGroupChoice) GetVesIoInfrastructureWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoInfrastructureWrite); ok {
		return x.VesIoInfrastructureWrite
	}
	return false
}

func (m *APIGroupChoice) GetVesIoInternalRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoInternalRead); ok {
		return x.VesIoInternalRead
	}
	return false
}

func (m *APIGroupChoice) GetVesIoInternalWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoInternalWrite); ok {
		return x.VesIoInternalWrite
	}
	return false
}

func (m *APIGroupChoice) GetVesIoK8SRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoK8SRead); ok {
		return x.VesIoK8SRead
	}
	return false
}

func (m *APIGroupChoice) GetVesIoK8SWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoK8SWrite); ok {
		return x.VesIoK8SWrite
	}
	return false
}

func (m *APIGroupChoice) GetVesIoLabelsRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoLabelsRead); ok {
		return x.VesIoLabelsRead
	}
	return false
}

func (m *APIGroupChoice) GetVesIoLabelsWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoLabelsWrite); ok {
		return x.VesIoLabelsWrite
	}
	return false
}

func (m *APIGroupChoice) GetVesIoLocalK8SWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoLocalK8SWrite); ok {
		return x.VesIoLocalK8SWrite
	}
	return false
}

func (m *APIGroupChoice) GetVesIoMonitorRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoMonitorRead); ok {
		return x.VesIoMonitorRead
	}
	return false
}

func (m *APIGroupChoice) GetVesIoMonitorWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoMonitorWrite); ok {
		return x.VesIoMonitorWrite
	}
	return false
}

func (m *APIGroupChoice) GetVesIoNetworkRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoNetworkRead); ok {
		return x.VesIoNetworkRead
	}
	return false
}

func (m *APIGroupChoice) GetVesIoNetworkWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoNetworkWrite); ok {
		return x.VesIoNetworkWrite
	}
	return false
}

func (m *APIGroupChoice) GetVesIoProxyMonitorRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoProxyMonitorRead); ok {
		return x.VesIoProxyMonitorRead
	}
	return false
}

func (m *APIGroupChoice) GetVesIoProxyMonitorWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoProxyMonitorWrite); ok {
		return x.VesIoProxyMonitorWrite
	}
	return false
}

func (m *APIGroupChoice) GetVesIoProxyRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoProxyRead); ok {
		return x.VesIoProxyRead
	}
	return false
}

func (m *APIGroupChoice) GetVesIoProxySecurityRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoProxySecurityRead); ok {
		return x.VesIoProxySecurityRead
	}
	return false
}

func (m *APIGroupChoice) GetVesIoProxySecurityWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoProxySecurityWrite); ok {
		return x.VesIoProxySecurityWrite
	}
	return false
}

func (m *APIGroupChoice) GetVesIoProxyWafRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoProxyWafRead); ok {
		return x.VesIoProxyWafRead
	}
	return false
}

func (m *APIGroupChoice) GetVesIoProxyWafWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoProxyWafWrite); ok {
		return x.VesIoProxyWafWrite
	}
	return false
}

func (m *APIGroupChoice) GetVesIoProxyWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoProxyWrite); ok {
		return x.VesIoProxyWrite
	}
	return false
}

func (m *APIGroupChoice) GetVesIoSecretsRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoSecretsRead); ok {
		return x.VesIoSecretsRead
	}
	return false
}

func (m *APIGroupChoice) GetVesIoSecretsWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoSecretsWrite); ok {
		return x.VesIoSecretsWrite
	}
	return false
}

func (m *APIGroupChoice) GetVesIoUamAdminRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoUamAdminRead); ok {
		return x.VesIoUamAdminRead
	}
	return false
}

func (m *APIGroupChoice) GetVesIoUamAdminWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoUamAdminWrite); ok {
		return x.VesIoUamAdminWrite
	}
	return false
}

func (m *APIGroupChoice) GetVesIoUamRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoUamRead); ok {
		return x.VesIoUamRead
	}
	return false
}

func (m *APIGroupChoice) GetVesIoUamWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoUamWrite); ok {
		return x.VesIoUamWrite
	}
	return false
}

func (m *APIGroupChoice) GetVesIoVirtualSitesRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoVirtualSitesRead); ok {
		return x.VesIoVirtualSitesRead
	}
	return false
}

func (m *APIGroupChoice) GetVesIoVirtualSitesWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoVirtualSitesWrite); ok {
		return x.VesIoVirtualSitesWrite
	}
	return false
}

func (m *APIGroupChoice) GetVesIoVoltShareRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoVoltShareRead); ok {
		return x.VesIoVoltShareRead
	}
	return false
}

func (m *APIGroupChoice) GetVesIoVoltShareWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoVoltShareWrite); ok {
		return x.VesIoVoltShareWrite
	}
	return false
}

func (m *APIGroupChoice) GetVesIoWebAccessRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoWebAccessRead); ok {
		return x.VesIoWebAccessRead
	}
	return false
}

func (m *APIGroupChoice) GetVesIoWebAccessWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoWebAccessWrite); ok {
		return x.VesIoWebAccessWrite
	}
	return false
}

func (m *APIGroupChoice) GetVesIoTenantOwnerRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoTenantOwnerRead); ok {
		return x.VesIoTenantOwnerRead
	}
	return false
}

func (m *APIGroupChoice) GetVesIoTenantOwnerWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoTenantOwnerWrite); ok {
		return x.VesIoTenantOwnerWrite
	}
	return false
}

func (m *APIGroupChoice) GetVesIoStoredObjectRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoStoredObjectRead); ok {
		return x.VesIoStoredObjectRead
	}
	return false
}

func (m *APIGroupChoice) GetVesIoStoredObjectWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VesIoStoredObjectWrite); ok {
		return x.VesIoStoredObjectWrite
	}
	return false
}

func (m *APIGroupChoice) GetVoltconsoleShapeBotRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VoltconsoleShapeBotRead); ok {
		return x.VoltconsoleShapeBotRead
	}
	return false
}

func (m *APIGroupChoice) GetVoltconsoleShapeBotWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VoltconsoleShapeBotWrite); ok {
		return x.VoltconsoleShapeBotWrite
	}
	return false
}

func (m *APIGroupChoice) GetVoltconsoleShapeBotAdmin() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VoltconsoleShapeBotAdmin); ok {
		return x.VoltconsoleShapeBotAdmin
	}
	return false
}

func (m *APIGroupChoice) GetVoltconsoleShapeBotSubscriptionMgmt() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VoltconsoleShapeBotSubscriptionMgmt); ok {
		return x.VoltconsoleShapeBotSubscriptionMgmt
	}
	return false
}

func (m *APIGroupChoice) GetVoltconsoleShapeRecognizeRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VoltconsoleShapeRecognizeRead); ok {
		return x.VoltconsoleShapeRecognizeRead
	}
	return false
}

func (m *APIGroupChoice) GetVoltconsoleShapeRecognizeWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VoltconsoleShapeRecognizeWrite); ok {
		return x.VoltconsoleShapeRecognizeWrite
	}
	return false
}

func (m *APIGroupChoice) GetVoltconsoleShapeRecognizeAdmin() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VoltconsoleShapeRecognizeAdmin); ok {
		return x.VoltconsoleShapeRecognizeAdmin
	}
	return false
}

func (m *APIGroupChoice) GetVoltconsoleShapeRecognizeSubscriptionMgmt() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VoltconsoleShapeRecognizeSubscriptionMgmt); ok {
		return x.VoltconsoleShapeRecognizeSubscriptionMgmt
	}
	return false
}

func (m *APIGroupChoice) GetVoltconsoleAidataBfdpRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VoltconsoleAidataBfdpRead); ok {
		return x.VoltconsoleAidataBfdpRead
	}
	return false
}

func (m *APIGroupChoice) GetVoltconsoleAidataBfdpWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VoltconsoleAidataBfdpWrite); ok {
		return x.VoltconsoleAidataBfdpWrite
	}
	return false
}

func (m *APIGroupChoice) GetVoltconsoleAidataBfdpAdmin() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VoltconsoleAidataBfdpAdmin); ok {
		return x.VoltconsoleAidataBfdpAdmin
	}
	return false
}

func (m *APIGroupChoice) GetVoltconsoleAidataBfdpSubscriptionMgmt() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VoltconsoleAidataBfdpSubscriptionMgmt); ok {
		return x.VoltconsoleAidataBfdpSubscriptionMgmt
	}
	return false
}

func (m *APIGroupChoice) GetVoltconsoleSyntheticMonitorRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VoltconsoleSyntheticMonitorRead); ok {
		return x.VoltconsoleSyntheticMonitorRead
	}
	return false
}

func (m *APIGroupChoice) GetVoltconsoleSyntheticMonitorWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VoltconsoleSyntheticMonitorWrite); ok {
		return x.VoltconsoleSyntheticMonitorWrite
	}
	return false
}

func (m *APIGroupChoice) GetVoltconsoleTenantMgmtRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VoltconsoleTenantMgmtRead); ok {
		return x.VoltconsoleTenantMgmtRead
	}
	return false
}

func (m *APIGroupChoice) GetVoltconsoleTenantMgmtWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VoltconsoleTenantMgmtWrite); ok {
		return x.VoltconsoleTenantMgmtWrite
	}
	return false
}

func (m *APIGroupChoice) GetVoltconsoleTenantMgmtAdmin() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VoltconsoleTenantMgmtAdmin); ok {
		return x.VoltconsoleTenantMgmtAdmin
	}
	return false
}

func (m *APIGroupChoice) GetVoltconsoleTenantMgmtSubscriptionMgmt() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VoltconsoleTenantMgmtSubscriptionMgmt); ok {
		return x.VoltconsoleTenantMgmtSubscriptionMgmt
	}
	return false
}

func (m *APIGroupChoice) GetVoltconsoleScimClientWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VoltconsoleScimClientWrite); ok {
		return x.VoltconsoleScimClientWrite
	}
	return false
}

func (m *APIGroupChoice) GetVoltconsoleScimClientRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VoltconsoleScimClientRead); ok {
		return x.VoltconsoleScimClientRead
	}
	return false
}

func (m *APIGroupChoice) GetVoltconsoleScimAdmin() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VoltconsoleScimAdmin); ok {
		return x.VoltconsoleScimAdmin
	}
	return false
}

func (m *APIGroupChoice) GetVoltconsoleScimSubscriptionMgmt() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VoltconsoleScimSubscriptionMgmt); ok {
		return x.VoltconsoleScimSubscriptionMgmt
	}
	return false
}

func (m *APIGroupChoice) GetVoltconsoleNginxMgmtSuiteRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VoltconsoleNginxMgmtSuiteRead); ok {
		return x.VoltconsoleNginxMgmtSuiteRead
	}
	return false
}

func (m *APIGroupChoice) GetVoltconsoleNginxMgmtSuiteWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VoltconsoleNginxMgmtSuiteWrite); ok {
		return x.VoltconsoleNginxMgmtSuiteWrite
	}
	return false
}

func (m *APIGroupChoice) GetVoltconsoleNginxMgmtSuiteAdmin() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VoltconsoleNginxMgmtSuiteAdmin); ok {
		return x.VoltconsoleNginxMgmtSuiteAdmin
	}
	return false
}

func (m *APIGroupChoice) GetVoltconsoleNginxMgmtSuiteSubscriptionMgmt() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VoltconsoleNginxMgmtSuiteSubscriptionMgmt); ok {
		return x.VoltconsoleNginxMgmtSuiteSubscriptionMgmt
	}
	return false
}

func (m *APIGroupChoice) GetVoltconsoleCdnRead() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VoltconsoleCdnRead); ok {
		return x.VoltconsoleCdnRead
	}
	return false
}

func (m *APIGroupChoice) GetVoltconsoleCdnWrite() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VoltconsoleCdnWrite); ok {
		return x.VoltconsoleCdnWrite
	}
	return false
}

func (m *APIGroupChoice) GetVoltconsoleCdnAdmin() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VoltconsoleCdnAdmin); ok {
		return x.VoltconsoleCdnAdmin
	}
	return false
}

func (m *APIGroupChoice) GetVoltconsoleCdnSubscriptionMgmt() bool {
	if x, ok := m.GetChoice().(*APIGroupChoice_VoltconsoleCdnSubscriptionMgmt); ok {
		return x.VoltconsoleCdnSubscriptionMgmt
	}
	return false
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*APIGroupChoice) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*APIGroupChoice_InfrastructureDemoAccessRead)(nil),
		(*APIGroupChoice_VesIoBillingRead)(nil),
		(*APIGroupChoice_VesIoBillingWrite)(nil),
		(*APIGroupChoice_VesIoGeneralRead)(nil),
		(*APIGroupChoice_VesIoGeneralWrite)(nil),
		(*APIGroupChoice_VesIoIaasCaasRead)(nil),
		(*APIGroupChoice_VesIoIaasCaasWrite)(nil),
		(*APIGroupChoice_VesIoInfraMonitorRead)(nil),
		(*APIGroupChoice_VesIoInfraMonitorWrite)(nil),
		(*APIGroupChoice_VesIoInfrastructureRead)(nil),
		(*APIGroupChoice_VesIoInfrastructureWrite)(nil),
		(*APIGroupChoice_VesIoInternalRead)(nil),
		(*APIGroupChoice_VesIoInternalWrite)(nil),
		(*APIGroupChoice_VesIoK8SRead)(nil),
		(*APIGroupChoice_VesIoK8SWrite)(nil),
		(*APIGroupChoice_VesIoLabelsRead)(nil),
		(*APIGroupChoice_VesIoLabelsWrite)(nil),
		(*APIGroupChoice_VesIoLocalK8SWrite)(nil),
		(*APIGroupChoice_VesIoMonitorRead)(nil),
		(*APIGroupChoice_VesIoMonitorWrite)(nil),
		(*APIGroupChoice_VesIoNetworkRead)(nil),
		(*APIGroupChoice_VesIoNetworkWrite)(nil),
		(*APIGroupChoice_VesIoProxyMonitorRead)(nil),
		(*APIGroupChoice_VesIoProxyMonitorWrite)(nil),
		(*APIGroupChoice_VesIoProxyRead)(nil),
		(*APIGroupChoice_VesIoProxySecurityRead)(nil),
		(*APIGroupChoice_VesIoProxySecurityWrite)(nil),
		(*APIGroupChoice_VesIoProxyWafRead)(nil),
		(*APIGroupChoice_VesIoProxyWafWrite)(nil),
		(*APIGroupChoice_VesIoProxyWrite)(nil),
		(*APIGroupChoice_VesIoSecretsRead)(nil),
		(*APIGroupChoice_VesIoSecretsWrite)(nil),
		(*APIGroupChoice_VesIoUamAdminRead)(nil),
		(*APIGroupChoice_VesIoUamAdminWrite)(nil),
		(*APIGroupChoice_VesIoUamRead)(nil),
		(*APIGroupChoice_VesIoUamWrite)(nil),
		(*APIGroupChoice_VesIoVirtualSitesRead)(nil),
		(*APIGroupChoice_VesIoVirtualSitesWrite)(nil),
		(*APIGroupChoice_VesIoVoltShareRead)(nil),
		(*APIGroupChoice_VesIoVoltShareWrite)(nil),
		(*APIGroupChoice_VesIoWebAccessRead)(nil),
		(*APIGroupChoice_VesIoWebAccessWrite)(nil),
		(*APIGroupChoice_VesIoTenantOwnerRead)(nil),
		(*APIGroupChoice_VesIoTenantOwnerWrite)(nil),
		(*APIGroupChoice_VesIoStoredObjectRead)(nil),
		(*APIGroupChoice_VesIoStoredObjectWrite)(nil),
		(*APIGroupChoice_VoltconsoleShapeBotRead)(nil),
		(*APIGroupChoice_VoltconsoleShapeBotWrite)(nil),
		(*APIGroupChoice_VoltconsoleShapeBotAdmin)(nil),
		(*APIGroupChoice_VoltconsoleShapeBotSubscriptionMgmt)(nil),
		(*APIGroupChoice_VoltconsoleShapeRecognizeRead)(nil),
		(*APIGroupChoice_VoltconsoleShapeRecognizeWrite)(nil),
		(*APIGroupChoice_VoltconsoleShapeRecognizeAdmin)(nil),
		(*APIGroupChoice_VoltconsoleShapeRecognizeSubscriptionMgmt)(nil),
		(*APIGroupChoice_VoltconsoleAidataBfdpRead)(nil),
		(*APIGroupChoice_VoltconsoleAidataBfdpWrite)(nil),
		(*APIGroupChoice_VoltconsoleAidataBfdpAdmin)(nil),
		(*APIGroupChoice_VoltconsoleAidataBfdpSubscriptionMgmt)(nil),
		(*APIGroupChoice_VoltconsoleSyntheticMonitorRead)(nil),
		(*APIGroupChoice_VoltconsoleSyntheticMonitorWrite)(nil),
		(*APIGroupChoice_VoltconsoleTenantMgmtRead)(nil),
		(*APIGroupChoice_VoltconsoleTenantMgmtWrite)(nil),
		(*APIGroupChoice_VoltconsoleTenantMgmtAdmin)(nil),
		(*APIGroupChoice_VoltconsoleTenantMgmtSubscriptionMgmt)(nil),
		(*APIGroupChoice_VoltconsoleScimClientWrite)(nil),
		(*APIGroupChoice_VoltconsoleScimClientRead)(nil),
		(*APIGroupChoice_VoltconsoleScimAdmin)(nil),
		(*APIGroupChoice_VoltconsoleScimSubscriptionMgmt)(nil),
		(*APIGroupChoice_VoltconsoleNginxMgmtSuiteRead)(nil),
		(*APIGroupChoice_VoltconsoleNginxMgmtSuiteWrite)(nil),
		(*APIGroupChoice_VoltconsoleNginxMgmtSuiteAdmin)(nil),
		(*APIGroupChoice_VoltconsoleNginxMgmtSuiteSubscriptionMgmt)(nil),
		(*APIGroupChoice_VoltconsoleCdnRead)(nil),
		(*APIGroupChoice_VoltconsoleCdnWrite)(nil),
		(*APIGroupChoice_VoltconsoleCdnAdmin)(nil),
		(*APIGroupChoice_VoltconsoleCdnSubscriptionMgmt)(nil),
	}
}

func init() {
	proto.RegisterType((*APIGroupChoice)(nil), "ves.io.schema.vesenv.APIGroupChoice")
}

func init() {
	proto.RegisterFile("ves.io/schema/vesenv/all_api_groups.proto", fileDescriptor_fb1a2f3ff9afca20)
}

var fileDescriptor_fb1a2f3ff9afca20 = []byte{
	// 4100 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x5a, 0xc9, 0xaf, 0x64, 0xd7,
	0x59, 0x7f, 0xc5, 0x60, 0x42, 0x91, 0xc9, 0x2f, 0xb6, 0x53, 0x76, 0xe2, 0x67, 0x27, 0x76, 0x48,
	0x0c, 0x7c, 0xdd, 0x67, 0x1e, 0x32, 0xd2, 0xdd, 0xb1, 0xdd, 0xed, 0x39, 0xdd, 0xd8, 0x66, 0x50,
	0x78, 0x3a, 0xdf, 0x19, 0xda, 0x15, 0xbf, 0xf7, 0xea, 0xe9, 0x55, 0x75, 0xb7, 0x0d, 0x42, 0x18,
	0xc4, 0x28, 0x24, 0x14, 0x09, 0x04, 0x02, 0x81, 0x84, 0x10, 0x48, 0xec, 0x59, 0xa1, 0xda, 0x95,
	0x84, 0x60, 0xe9, 0x65, 0x96, 0xb8, 0xbd, 0x61, 0x99, 0x05, 0x7f, 0x00, 0x3a, 0xe7, 0xdc, 0x5b,
	0x75, 0x6f, 0xd5, 0xad, 0xce, 0xa6, 0xf5, 0x5a, 0xf5, 0x9d, 0xf3, 0xfb, 0xfd, 0xce, 0xfd, 0x7d,
	0xc3, 0x3d, 0x55, 0xe3, 0xe7, 0xee, 0xc6, 0xf9, 0xa5, 0xe9, 0xec, 0xf2, 0xdc, 0xbf, 0x13, 0x4f,
	0xdd, 0xe5, 0xbb, 0x71, 0x1e, 0xcf, 0xee, 0x5e, 0x76, 0x27, 0x27, 0xc7, 0xee, 0x7c, 0x7a, 0x7c,
	0xfb, 0x62, 0x76, 0xe7, 0x7c, 0x7e, 0xe9, 0xfc, 0x62, 0xb6, 0x98, 0x1d, 0x3e, 0x52, 0x43, 0x2f,
	0xd5, 0xd0, 0x4b, 0x35, 0xf4, 0x89, 0x2f, 0x0f, 0x6e, 0x30, 0x3b, 0x5f, 0x4c, 0x67, 0x67, 0xcd,
	0xca, 0x2f, 0xff, 0xdf, 0x1b, 0xe3, 0x4f, 0x5f, 0x79, 0xe3, 0xc6, 0x8b, 0x79, 0xb7, 0x6b, 0xef,
	0xcc, 0xa6, 0x3e, 0x1e, 0xfe, 0xf5, 0x68, 0xfc, 0xd4, 0xf4, 0x2c, 0x5d, 0xb8, 0xf9, 0xe2, 0xe2,
	0x8e, 0x5f, 0xdc, 0xb9, 0x88, 0xc7, 0x21, 0x9e, 0xce, 0x8e, 0x9d, 0xf7, 0x71, 0x3e, 0x3f, 0xbe,
	0x88, 0x2e, 0x4c, 0x46, 0x4f, 0x8f, 0xbe, 0xf6, 0x89, 0xab, 0x2f, 0xaf, 0x96, 0x93, 0x17, 0xb7,
	0x83, 0x21, 0x07, 0x43, 0x0d, 0x86, 0x1c, 0x7c, 0xf8, 0xac, 0x36, 0xce, 0x0a, 0xaa, 0x10, 0x88,
	0xe4, 0x06, 0x04, 0x53, 0x09, 0x6c, 0xfe, 0xcb, 0x71, 0x46, 0xac, 0x4d, 0x32, 0x19, 0xa5, 0xae,
	0x1f, 0xdc, 0xfc, 0x62, 0x7f, 0xa3, 0xef, 0xc6, 0xd3, 0xd9, 0x95, 0xb2, 0xcd, 0xcd, 0xbc, 0xcb,
	0xf9, 0xf8, 0x73, 0x77, 0xe3, 0xfc, 0x78, 0x3a, 0x3b, 0xc6, 0xe9, 0xc9, 0xc9, 0xf4, 0xec, 0x76,
	0x65, 0xf2, 0x53, 0x85, 0xc9, 0x77, 0x56, 0xcb, 0xc9, 0x37, 0x4a, 0x00, 0x4c, 0x67, 0xd0, 0x04,
	0x34, 0xe8, 0x42, 0x6b, 0x6f, 0xbc, 0x8a, 0x40, 0x02, 0x73, 0x20, 0xd0, 0x7b, 0xb0, 0x54, 0x24,
	0x50, 0x9c, 0x10, 0xe4, 0xd4, 0x3b, 0x65, 0xc2, 0xf5, 0x83, 0x9b, 0x9f, 0xbd, 0x1b, 0xe7, 0x37,
	0x66, 0x57, 0xeb, 0xd2, 0x82, 0x38, 0x1f, 0x3f, 0xb2, 0x85, 0x78, 0xef, 0x62, 0xba, 0x88, 0x93,
	0x9f, 0x2e, 0x90, 0xbf, 0xba, 0x5a, 0x4e, 0xbe, 0x59, 0x22, 0xba, 0x90, 0x25, 0xe2, 0xf0, 0x59,
	0x1e, 0x34, 0x26, 0x15, 0x15, 0x44, 0x94, 0x0c, 0x44, 0x34, 0x0e, 0x90, 0xa1, 0x02, 0x1f, 0x8c,
	0x62, 0x41, 0x0b, 0x1d, 0x88, 0xb9, 0x7e, 0x70, 0xf3, 0xe1, 0x2e, 0xe6, 0xdb, 0x65, 0xe9, 0x46,
	0xe6, 0xed, 0x78, 0x16, 0x2f, 0xdc, 0x49, 0x95, 0xf9, 0x33, 0x03, 0x32, 0x9b, 0x80, 0x46, 0x26,
	0xa1, 0xc2, 0x51, 0x2a, 0x24, 0x38, 0xae, 0x52, 0x86, 0x64, 0xe0, 0x8c, 0x94, 0xa0, 0xd1, 0x91,
	0x90, 0xbc, 0x90, 0x1e, 0xf9, 0x5a, 0xe6, 0x8b, 0x75, 0xe9, 0x96, 0xcc, 0x16, 0xb1, 0xca, 0xfc,
	0xd9, 0x01, 0x99, 0x2d, 0x64, 0x23, 0x53, 0x33, 0x43, 0x88, 0x4b, 0x04, 0xa2, 0xe6, 0x11, 0x84,
	0x40, 0x0b, 0xc8, 0xa4, 0x85, 0x48, 0x92, 0x48, 0x36, 0x38, 0x41, 0x0a, 0xe6, 0xc3, 0x5d, 0xcc,
	0x2a, 0xf3, 0xce, 0xf8, 0xd1, 0x06, 0x74, 0xea, 0xdc, 0xfc, 0xd8, 0xe7, 0x7f, 0x8a, 0xd0, 0x87,
	0x0a, 0xea, 0x95, 0xd5, 0x72, 0xf2, 0xad, 0x12, 0x92, 0x51, 0x73, 0x08, 0xe4, 0x90, 0x46, 0xaa,
	0x11, 0x92, 0x31, 0x22, 0x14, 0x08, 0x12, 0x10, 0x84, 0x65, 0x01, 0xac, 0xb4, 0x16, 0x0c, 0xa3,
	0x91, 0x06, 0xa9, 0x9c, 0x49, 0x69, 0x0d, 0x7b, 0xc3, 0xb9, 0xf9, 0x35, 0xe7, 0xaa, 0x89, 0xde,
	0x1b, 0x3f, 0xb6, 0x03, 0x5b, 0xd5, 0xfe, 0x5c, 0xc1, 0xbd, 0xba, 0x5a, 0x4e, 0xbe, 0x5d, 0x62,
	0xfa, 0xb8, 0xed, 0x63, 0x8d, 0xd4, 0x25, 0x26, 0x0d, 0x10, 0x66, 0x05, 0x08, 0xef, 0x08, 0x60,
	0xb4, 0x14, 0x94, 0x56, 0x02, 0x95, 0x37, 0xca, 0x52, 0x7a, 0xfd, 0xe0, 0xe6, 0x61, 0x0f, 0xb8,
	0x0a, 0xfe, 0x83, 0xd1, 0xf8, 0xf1, 0x16, 0x3a, 0xdb, 0xfc, 0xf8, 0x74, 0x76, 0x36, 0x5d, 0xcc,
	0x2e, 0xaa, 0xea, 0x4f, 0x14, 0xf4, 0xe7, 0x57, 0xcb, 0xc9, 0x95, 0x12, 0x56, 0xd0, 0x73, 0x18,
	0x34, 0x61, 0x8d, 0x72, 0xb4, 0xe8, 0xad, 0x40, 0x0d, 0x24, 0x69, 0x03, 0xc2, 0xc9, 0x08, 0x46,
	0xea, 0x00, 0xde, 0x2b, 0x92, 0xa2, 0x53, 0x8e, 0x91, 0x4c, 0xe0, 0xd1, 0x4a, 0x20, 0x6f, 0xf0,
	0x6a, 0x5d, 0x5f, 0xd4, 0xff, 0xd1, 0x68, 0xfc, 0xc4, 0x20, 0x87, 0x7a, 0x04, 0x3f, 0x5f, 0x48,
	0xbc, 0xb0, 0x5a, 0x4e, 0xae, 0x96, 0xb8, 0x5d, 0x12, 0xed, 0x31, 0x08, 0xaa, 0x25, 0x0b, 0x14,
	0x34, 0x33, 0x0c, 0x44, 0x88, 0x06, 0x9c, 0x0e, 0x14, 0xa2, 0x52, 0x2a, 0x52, 0xab, 0x03, 0x0d,
	0xf9, 0xb1, 0x3f, 0xb6, 0xc3, 0xa2, 0x1e, 0xc5, 0x1f, 0x6f, 0xd1, 0xd8, 0xd4, 0x99, 0x72, 0x16,
	0xe3, 0x7d, 0x34, 0x36, 0x25, 0xa6, 0x1e, 0x86, 0xb7, 0xd4, 0x30, 0x99, 0x12, 0x20, 0x67, 0x02,
	0x04, 0xb7, 0x0c, 0x2c, 0x89, 0x09, 0x5c, 0x52, 0xc2, 0xeb, 0xc0, 0xad, 0x96, 0xb9, 0xac, 0x7c,
	0x7e, 0x43, 0x63, 0xbd, 0x43, 0x39, 0x8e, 0x3f, 0x1b, 0x8d, 0xbf, 0x30, 0xcc, 0xa3, 0x9e, 0xc7,
	0x2f, 0x14, 0x22, 0x2f, 0xae, 0x96, 0x93, 0x6b, 0x25, 0x70, 0x80, 0x48, 0x9b, 0x07, 0x56, 0x13,
	0x87, 0x28, 0x41, 0x18, 0x13, 0x41, 0x24, 0xce, 0x01, 0x79, 0x52, 0xa0, 0x18, 0x33, 0x41, 0x27,
	0xaf, 0x43, 0xd2, 0xd7, 0x0f, 0x6e, 0x4e, 0x06, 0x98, 0xd4, 0x23, 0xd9, 0xe4, 0xe0, 0xf4, 0x6c,
	0x11, 0x2f, 0xce, 0xda, 0xb4, 0xff, 0xe4, 0x40, 0x0e, 0xb6, 0x11, 0x6d, 0x32, 0x38, 0xcb, 0xa5,
	0xe7, 0x01, 0x82, 0x4e, 0x09, 0x04, 0x8b, 0x1a, 0x50, 0x70, 0x02, 0x86, 0x5b, 0x74, 0xdc, 0x68,
	0x93, 0x6c, 0xdc, 0x24, 0x43, 0xb3, 0xb6, 0xe8, 0xbf, 0xbb, 0xc9, 0xc1, 0x16, 0xb4, 0x0a, 0xff,
	0xd4, 0x50, 0x0e, 0xb6, 0xa8, 0x8d, 0x64, 0x13, 0x2d, 0xe1, 0x4a, 0x72, 0x40, 0xeb, 0x11, 0x44,
	0x50, 0x08, 0x8e, 0x11, 0x0d, 0x51, 0x7b, 0x46, 0x75, 0x90, 0xda, 0x53, 0xb6, 0x49, 0x85, 0x66,
	0x71, 0x15, 0x1b, 0xc6, 0x9f, 0x69, 0x70, 0xdf, 0x35, 0x4d, 0xd6, 0x7f, 0xba, 0x20, 0x7e, 0x63,
	0xb5, 0x9c, 0xe8, 0xf2, 0x61, 0x46, 0x7c, 0xd7, 0xac, 0xf3, 0xdd, 0xe4, 0xc2, 0x86, 0x06, 0xac,
	0x52, 0x08, 0x42, 0x1a, 0x0f, 0x2e, 0xbb, 0x5e, 0x49, 0xae, 0x12, 0x17, 0xca, 0x6a, 0x46, 0xae,
	0x1f, 0xdc, 0xfc, 0x64, 0xc1, 0x7a, 0xd9, 0xd4, 0x54, 0xbf, 0x3d, 0xfe, 0x6c, 0x07, 0xa5, 0x0a,
	0xfb, 0x4c, 0x81, 0xf9, 0xe6, 0x6a, 0x39, 0x31, 0xe5, 0xd3, 0x16, 0xa6, 0xd1, 0x64, 0x95, 0xe2,
	0x46, 0x2b, 0x0f, 0x81, 0xf2, 0x04, 0x22, 0x11, 0x03, 0x18, 0xa3, 0x07, 0x9d, 0x22, 0x4d, 0x24,
	0x04, 0x6b, 0x4d, 0x36, 0xd4, 0xa7, 0x5a, 0x9c, 0x2a, 0xe7, 0x74, 0x7c, 0xd8, 0x00, 0x9d, 0x38,
	0x8c, 0x27, 0x8d, 0xa2, 0xcf, 0x16, 0xa8, 0x6f, 0xaf, 0x96, 0x93, 0xaf, 0x97, 0xcf, 0x33, 0x54,
	0xfd, 0xbc, 0x75, 0xaf, 0x16, 0x34, 0x46, 0x13, 0x40, 0x28, 0xc3, 0x41, 0x20, 0x06, 0x30, 0x92,
	0x51, 0x08, 0x46, 0x70, 0x97, 0xd0, 0x19, 0xe9, 0x73, 0x5b, 0xfa, 0x4c, 0x01, 0x7b, 0xa5, 0xac,
	0xdc, 0xea, 0x83, 0x0d, 0x5c, 0x95, 0xf6, 0xf0, 0x40, 0x83, 0x68, 0xf0, 0x1a, 0x75, 0x4c, 0x58,
	0xad, 0x38, 0x25, 0xc0, 0xa4, 0xb3, 0x20, 0x4c, 0x12, 0x80, 0xda, 0x71, 0x70, 0x2a, 0x2a, 0x4a,
	0xbc, 0x88, 0x41, 0xc8, 0x75, 0x83, 0xa8, 0x80, 0x55, 0xe0, 0xa6, 0x68, 0x9e, 0xcc, 0xbc, 0x3b,
	0xe9, 0x9c, 0xe7, 0xe1, 0x40, 0xd1, 0x2c, 0x31, 0xdd, 0x53, 0xf5, 0x68, 0x50, 0xb0, 0x94, 0x20,
	0xe9, 0x24, 0x41, 0x04, 0x42, 0xc0, 0x19, 0xc6, 0xc1, 0x10, 0x62, 0x22, 0x1a, 0x85, 0xc2, 0xa9,
	0xb5, 0x53, 0x5e, 0xc9, 0xab, 0xd7, 0x47, 0xbb, 0xd1, 0xda, 0xab, 0x96, 0x9f, 0x1b, 0xd0, 0xda,
	0xaf, 0x93, 0x31, 0xd8, 0x14, 0xac, 0x76, 0x60, 0x91, 0x30, 0x10, 0x48, 0x2d, 0x38, 0xa9, 0x04,
	0xe8, 0x28, 0xbd, 0x71, 0x4c, 0xc6, 0x20, 0xdd, 0x5a, 0x6b, 0xb7, 0x44, 0x6e, 0x12, 0xb1, 0x5f,
	0x1b, 0x1f, 0x19, 0x48, 0xc4, 0xad, 0xaa, 0x98, 0x48, 0x20, 0x96, 0x46, 0x06, 0x46, 0x2a, 0x0e,
	0xc2, 0x72, 0x05, 0xa8, 0x62, 0x04, 0x2d, 0xb4, 0x4f, 0x5e, 0x24, 0x8e, 0x28, 0xd6, 0x89, 0xd8,
	0x2b, 0x88, 0x1b, 0x99, 0x67, 0x71, 0x71, 0x6f, 0x76, 0xf1, 0x6e, 0x95, 0xf9, 0xe8, 0x80, 0xcc,
	0x26, 0xa0, 0xf5, 0x90, 0x4a, 0x26, 0x1a, 0xea, 0x20, 0xb9, 0x2c, 0x53, 0x4b, 0x0d, 0x36, 0xe9,
	0x04, 0x94, 0x08, 0x15, 0x09, 0x31, 0x52, 0x70, 0x5c, 0xcb, 0x7c, 0xad, 0x2e, 0xdd, 0x92, 0xd9,
	0x22, 0x56, 0x99, 0x8f, 0x0d, 0xc8, 0x6c, 0x21, 0x5b, 0x1b, 0x61, 0x20, 0xc9, 0x32, 0x0a, 0x26,
	0x18, 0x04, 0xa1, 0x84, 0x07, 0x67, 0x99, 0x04, 0x81, 0xce, 0x9b, 0x64, 0x98, 0x34, 0x69, 0xd3,
	0xf3, 0x1b, 0xcc, 0x9d, 0x16, 0x78, 0x7e, 0x31, 0x7b, 0xef, 0xfd, 0xfe, 0x43, 0xfd, 0xfc, 0x40,
	0x0b, 0x2c, 0x61, 0x5b, 0x8f, 0x96, 0x45, 0x61, 0x83, 0xf5, 0x2c, 0xf7, 0x3c, 0x06, 0x82, 0x32,
	0x01, 0x16, 0xad, 0x03, 0x9b, 0x64, 0x40, 0x63, 0x8d, 0xf3, 0xde, 0xae, 0x5b, 0xe0, 0x1b, 0x79,
	0x83, 0x3d, 0x2d, 0xb0, 0xcf, 0xa1, 0xea, 0x9f, 0x0c, 0xf4, 0x9e, 0x3e, 0x89, 0xe6, 0x14, 0x1c,
	0x61, 0xd1, 0x26, 0xef, 0xc1, 0x11, 0x6a, 0x41, 0x68, 0x8f, 0x80, 0x84, 0x31, 0x70, 0x9c, 0xc8,
	0x20, 0x91, 0xba, 0xa8, 0xe4, 0xba, 0x05, 0x76, 0x59, 0xd4, 0xa3, 0xf8, 0xc1, 0xf8, 0xe1, 0x1e,
	0x8b, 0x72, 0x02, 0x8f, 0x17, 0xf0, 0x6f, 0xad, 0x96, 0x13, 0x5b, 0x3e, 0xde, 0x80, 0x57, 0xe5,
	0x56, 0xea, 0x10, 0x35, 0x77, 0x10, 0x4c, 0x60, 0x20, 0x94, 0xb3, 0xe0, 0x58, 0x50, 0x40, 0xad,
	0x24, 0x2a, 0x78, 0xea, 0x7d, 0xcc, 0x98, 0x9f, 0xde, 0x60, 0x0e, 0x4b, 0x9e, 0x47, 0x7f, 0xe7,
	0x62, 0xba, 0x68, 0x50, 0x9f, 0xd8, 0x2b, 0xb9, 0x8d, 0x6b, 0xcd, 0xe6, 0x13, 0x06, 0x2a, 0x10,
	0xa4, 0xd2, 0x01, 0x04, 0x49, 0x14, 0x2c, 0x45, 0x09, 0x89, 0x31, 0x49, 0xb8, 0xd3, 0x31, 0x20,
	0xeb, 0x4b, 0xbe, 0xd5, 0x6c, 0x50, 0x68, 0xfc, 0xe9, 0xa6, 0xdb, 0x6e, 0xd1, 0xa8, 0x47, 0xff,
	0x85, 0x81, 0x6e, 0xbb, 0xc5, 0xa3, 0x2d, 0x28, 0xd6, 0x04, 0xa9, 0x25, 0x05, 0xe5, 0x38, 0x05,
	0xa1, 0x85, 0x03, 0x13, 0x63, 0x02, 0x6d, 0x68, 0x30, 0x36, 0x0a, 0xad, 0x88, 0x5b, 0xf7, 0xfd,
	0x1e, 0x91, 0xed, 0xd9, 0xb3, 0x12, 0xb9, 0xe7, 0x52, 0x3d, 0x8a, 0x2f, 0x0e, 0xf4, 0xbd, 0x4a,
	0xe1, 0x9e, 0x4b, 0xcd, 0x29, 0x70, 0x8c, 0x8e, 0x3a, 0x99, 0x80, 0xcb, 0x10, 0x41, 0xe8, 0x28,
	0xc0, 0xe8, 0xe0, 0x80, 0x85, 0x84, 0x68, 0x8c, 0x4b, 0x94, 0x6d, 0xda, 0x6d, 0x01, 0x7f, 0xdb,
	0xa5, 0xad, 0xd9, 0x73, 0x03, 0x5b, 0xa5, 0x3f, 0x39, 0x50, 0x46, 0x37, 0xb8, 0x8d, 0x6a, 0x22,
	0x8d, 0x90, 0x4a, 0x11, 0x10, 0x18, 0x1c, 0x88, 0x28, 0x12, 0x18, 0x26, 0x29, 0x98, 0x28, 0x0d,
	0x0d, 0x84, 0x69, 0x52, 0xf2, 0xee, 0xb0, 0x07, 0xbc, 0xdd, 0xa1, 0x1a, 0xe4, 0x82, 0x7a, 0x34,
	0xd0, 0xa1, 0x1a, 0xd4, 0x8a, 0xa8, 0x98, 0x53, 0x91, 0x29, 0x05, 0x88, 0x9e, 0x80, 0x90, 0x2c,
	0x8f, 0x79, 0x29, 0x00, 0xc9, 0x7d, 0x8a, 0x25, 0xef, 0x52, 0xda, 0x74, 0xa8, 0x8a, 0xb8, 0x55,
	0xce, 0xe6, 0xd1, 0x5f, 0xc4, 0x45, 0xd3, 0x11, 0x9f, 0x1a, 0x28, 0x67, 0x4d, 0x40, 0x73, 0xb6,
	0x34, 0xa4, 0xa4, 0x04, 0xc9, 0x43, 0x35, 0x1a, 0x10, 0x68, 0x38, 0xa0, 0x94, 0x0e, 0x94, 0xf0,
	0x4e, 0x46, 0xb4, 0x49, 0x95, 0x51, 0xa6, 0x96, 0xb3, 0x5b, 0x75, 0xe9, 0x56, 0x39, 0x6b, 0x11,
	0xab, 0xc4, 0xa7, 0x07, 0xca, 0x59, 0x0b, 0xd9, 0x88, 0x8c, 0x94, 0x69, 0xe2, 0xa4, 0x01, 0x46,
	0xa9, 0x02, 0x81, 0x0c, 0xc1, 0x58, 0x24, 0x80, 0x68, 0xac, 0xd5, 0x54, 0xa1, 0xf3, 0x7a, 0xfd,
	0x3c, 0x1b, 0xcc, 0x2a, 0xf3, 0xf7, 0xd6, 0x36, 0xba, 0xe3, 0x4e, 0x8f, 0x5d, 0x38, 0x9d, 0x9e,
	0x55, 0xa1, 0xcf, 0x14, 0xd4, 0x1b, 0xab, 0xe5, 0xe4, 0xf9, 0xb5, 0x8d, 0xee, 0xb8, 0x53, 0x28,
	0x21, 0xed, 0x48, 0xc3, 0x23, 0x71, 0x3e, 0x70, 0x50, 0xa8, 0x69, 0x1e, 0x35, 0x18, 0x58, 0xad,
	0x1c, 0x38, 0x2b, 0x39, 0xe3, 0x46, 0x30, 0xa4, 0xe2, 0x89, 0x87, 0xe6, 0xef, 0xcf, 0x17, 0xf1,
	0x74, 0x0d, 0xff, 0xa6, 0x3b, 0xbd, 0x92, 0xf7, 0x28, 0x9a, 0x3f, 0x18, 0xad, 0xfd, 0xb4, 0xc1,
	0xaf, 0xb2, 0x9f, 0x2d, 0x04, 0x5e, 0x5a, 0x2d, 0x27, 0x2f, 0xac, 0xfd, 0xb4, 0x21, 0xd0, 0xb6,
	0x2b, 0x4a, 0x62, 0x92, 0xc6, 0x80, 0xd6, 0xd9, 0xc8, 0xd4, 0x4b, 0x30, 0x9a, 0x05, 0x48, 0x3a,
	0x04, 0x19, 0xb8, 0x47, 0xaa, 0x58, 0x87, 0xc1, 0x61, 0x8f, 0xc1, 0xf6, 0x20, 0x97, 0x19, 0x14,
	0xed, 0x5f, 0x19, 0x18, 0xe4, 0x32, 0x74, 0xd3, 0x96, 0x93, 0x72, 0xca, 0x5b, 0x0e, 0x21, 0x48,
	0x95, 0x6b, 0xb7, 0x06, 0x9b, 0xe7, 0x10, 0x8d, 0x54, 0x28, 0x99, 0x04, 0x4f, 0xb8, 0x19, 0xe4,
	0xde, 0x74, 0xa7, 0x5b, 0x83, 0x5c, 0x46, 0xa9, 0x0a, 0x7f, 0x71, 0x60, 0x90, 0xcb, 0x30, 0xad,
	0x73, 0xa3, 0xa7, 0xd2, 0x28, 0x0b, 0x21, 0x91, 0xec, 0x5c, 0x61, 0xc0, 0x44, 0xc2, 0x21, 0xa0,
	0x37, 0x4e, 0x44, 0x1b, 0xa4, 0x70, 0xeb, 0x41, 0xee, 0x4d, 0x77, 0xba, 0xd3, 0x9f, 0xee, 0x4e,
	0x2f, 0x16, 0x77, 0xdc, 0xc9, 0xf1, 0x7c, 0xba, 0x88, 0x8d, 0x7d, 0xbf, 0x3a, 0xd0, 0x9f, 0x9a,
	0x30, 0x28, 0x61, 0x8d, 0xc6, 0xc0, 0x88, 0x94, 0x09, 0x03, 0x30, 0xc6, 0x3c, 0x08, 0x49, 0x29,
	0x18, 0xcd, 0x15, 0x18, 0x12, 0xa3, 0x63, 0x52, 0x19, 0xa5, 0xe5, 0xba, 0x3f, 0xbd, 0x55, 0x37,
	0xb8, 0x95, 0xd7, 0x6f, 0x17, 0xeb, 0x3e, 0x87, 0xaa, 0xfb, 0x6b, 0x03, 0xc5, 0xba, 0x4f, 0xa2,
	0x39, 0x01, 0x29, 0xbc, 0xc8, 0x6f, 0xc3, 0x40, 0x95, 0x4d, 0x20, 0x54, 0x60, 0x60, 0x02, 0x97,
	0xc0, 0x82, 0xa0, 0x42, 0x4a, 0x89, 0x26, 0x99, 0x75, 0xb1, 0xee, 0xb2, 0xd8, 0x1e, 0xf9, 0xee,
	0xce, 0x4e, 0x16, 0xc7, 0xf3, 0x77, 0x5c, 0xfb, 0x76, 0xf6, 0xdc, 0x40, 0xad, 0xca, 0x31, 0x50,
	0x62, 0xda, 0xe7, 0xac, 0x93, 0xb6, 0xc2, 0xe7, 0x69, 0x84, 0xb2, 0xfa, 0x52, 0x64, 0x39, 0x93,
	0x10, 0x8c, 0x8c, 0x48, 0x3d, 0xe7, 0x2e, 0xe8, 0xb5, 0xa7, 0xde, 0x9a, 0x9d, 0x2c, 0x6e, 0xe5,
	0xc5, 0xe5, 0x00, 0x7e, 0x77, 0xfc, 0xf9, 0x5d, 0xe4, 0x2a, 0xfe, 0x97, 0x0a, 0xf4, 0xb5, 0xd5,
	0x72, 0xf2, 0x9d, 0x12, 0xb4, 0x05, 0xdd, 0xbe, 0x9c, 0x72, 0x46, 0x34, 0x43, 0x05, 0x4a, 0x84,
	0x94, 0x8b, 0xa5, 0x06, 0x47, 0x38, 0x01, 0x27, 0xac, 0x31, 0x28, 0xf2, 0x84, 0x90, 0xae, 0x1f,
	0xdc, 0xfc, 0x5c, 0x1f, 0x7b, 0x5b, 0xf6, 0xbd, 0x88, 0xbd, 0x0b, 0xaf, 0x5f, 0x1e, 0x90, 0x7d,
	0x2f, 0x62, 0xff, 0x9e, 0xcb, 0xe8, 0x64, 0x7d, 0xb4, 0x0e, 0x08, 0x21, 0x1a, 0x84, 0xf1, 0x08,
	0x56, 0x22, 0x03, 0x65, 0x2c, 0xaa, 0x44, 0xa9, 0x4c, 0x69, 0x33, 0xe9, 0xbe, 0x1d, 0xb1, 0x73,
	0xbb, 0xb5, 0x91, 0xdd, 0x41, 0xae, 0xb2, 0x7f, 0x65, 0x40, 0x76, 0x07, 0xba, 0x91, 0x1d, 0xa8,
	0x12, 0x24, 0x38, 0x0f, 0x3e, 0x45, 0x91, 0x0b, 0x0a, 0xe6, 0x01, 0x9b, 0x82, 0x96, 0x51, 0xd9,
	0x40, 0xa9, 0xb4, 0x14, 0xd7, 0xb2, 0xd7, 0xd8, 0x55, 0xf6, 0x9f, 0x8c, 0xc6, 0x93, 0x06, 0x7d,
	0x11, 0xcf, 0xdc, 0xd9, 0xe2, 0x78, 0x76, 0xef, 0x2c, 0x36, 0x73, 0x19, 0x14, 0xf8, 0x57, 0x56,
	0xcb, 0xc9, 0xf5, 0x12, 0x95, 0xe1, 0x6b, 0x14, 0x94, 0xa8, 0xf5, 0xc4, 0xed, 0x88, 0xf6, 0xc1,
	0x03, 0xf3, 0x36, 0xbf, 0x8c, 0x4b, 0x07, 0xc8, 0xb9, 0x01, 0x34, 0x3a, 0x11, 0xe6, 0x0c, 0x49,
	0x42, 0x75, 0xca, 0xc9, 0x23, 0x85, 0xc7, 0xaf, 0x95, 0x7d, 0x5e, 0xcf, 0xdb, 0x94, 0x53, 0xf8,
	0xf3, 0x4d, 0x06, 0xf6, 0x88, 0xd4, 0x83, 0xb8, 0x54, 0x98, 0xbc, 0xba, 0x5a, 0x4e, 0x6e, 0xac,
	0x33, 0xb0, 0xc7, 0xa4, 0x9d, 0x0f, 0x92, 0x70, 0x4a, 0x04, 0x01, 0xcc, 0x5a, 0x0f, 0xb9, 0x94,
	0x02, 0x46, 0x5a, 0xc6, 0x44, 0xc2, 0x0c, 0x0f, 0x9c, 0xdb, 0x6e, 0x65, 0x7b, 0x74, 0x9b, 0xca,
	0x4e, 0x35, 0x98, 0x2f, 0x66, 0x17, 0x31, 0x1c, 0xcf, 0xf0, 0x07, 0xd1, 0x2f, 0xea, 0xa9, 0x5c,
	0x1e, 0xa8, 0x06, 0x35, 0x0c, 0x6a, 0x58, 0x7b, 0x2c, 0x36, 0x26, 0x11, 0x05, 0x82, 0x4f, 0x79,
	0x4e, 0xf4, 0xd1, 0x83, 0xf3, 0x79, 0x64, 0x4e, 0xc2, 0x6a, 0x69, 0xb9, 0xe3, 0x9a, 0xad, 0x39,
	0xdc, 0x2a, 0x1b, 0xbc, 0x5e, 0xd6, 0x6f, 0x57, 0x83, 0x3e, 0x87, 0x7a, 0x20, 0x64, 0xa0, 0x1a,
	0xf4, 0x49, 0x34, 0x27, 0x42, 0x0d, 0x0f, 0xc6, 0x18, 0x5b, 0x0a, 0x2d, 0x08, 0x6e, 0x10, 0x9c,
	0xcd, 0x07, 0x64, 0xac, 0x65, 0x32, 0xca, 0xc8, 0xfc, 0x66, 0x5a, 0xed, 0xb2, 0xe8, 0x5c, 0xd8,
	0xcc, 0x4e, 0x16, 0x7e, 0x76, 0x36, 0x9f, 0x9d, 0xc4, 0x9c, 0x94, 0xe7, 0xf1, 0x18, 0x67, 0xcd,
	0x59, 0xd0, 0x1e, 0x8d, 0x4d, 0x1c, 0x94, 0x38, 0xc0, 0x59, 0x7b, 0x18, 0x36, 0xb2, 0xa4, 0x5d,
	0xd0, 0x40, 0x53, 0xd4, 0xf9, 0x3d, 0x3e, 0x81, 0xb5, 0x39, 0x49, 0x38, 0x31, 0x86, 0x6a, 0xc9,
	0xbd, 0xa5, 0x65, 0x70, 0xdb, 0xec, 0x71, 0x2b, 0x6f, 0x71, 0x75, 0xb6, 0xd8, 0x5c, 0xd8, 0x0c,
	0xf2, 0xa8, 0xe7, 0xc1, 0x7a, 0x23, 0xe4, 0x20, 0x91, 0x76, 0x7c, 0x47, 0x6a, 0x74, 0x0c, 0x0c,
	0x64, 0xf0, 0xf9, 0xb1, 0x50, 0x04, 0x97, 0x72, 0xcd, 0x88, 0xc2, 0xb2, 0x60, 0xd1, 0xb2, 0xf2,
	0xae, 0x36, 0x19, 0x60, 0x52, 0x8f, 0xe4, 0x87, 0x7b, 0xa9, 0x94, 0x26, 0x3b, 0xe1, 0x85, 0xca,
	0xeb, 0xab, 0xe5, 0xe4, 0xe5, 0x7d, 0x54, 0x4a, 0xe0, 0xe1, 0xb3, 0x49, 0x84, 0x68, 0xa4, 0x75,
	0x40, 0x31, 0x50, 0x10, 0xa8, 0x19, 0x18, 0xc2, 0x35, 0x10, 0x0c, 0x4c, 0x33, 0xc5, 0x0c, 0x65,
	0xa6, 0xe3, 0xd6, 0x21, 0x4a, 0xa5, 0x25, 0x1f, 0xfe, 0xfb, 0x68, 0xfc, 0xd5, 0x61, 0x4a, 0xf3,
	0x3b, 0x38, 0xf7, 0x17, 0xd3, 0x72, 0xf1, 0x7f, 0x7c, 0x7a, 0xfb, 0x74, 0x31, 0x11, 0x85, 0xde,
	0x6f, 0xad, 0x96, 0x93, 0xb7, 0x7b, 0x8b, 0x3a, 0xf4, 0xba, 0x8b, 0x20, 0x2f, 0x3a, 0x7c, 0xd6,
	0xa5, 0x48, 0xb9, 0xb3, 0x1a, 0x94, 0xe5, 0x16, 0x84, 0xe2, 0xb9, 0xac, 0x6b, 0x0a, 0x5e, 0x88,
	0x48, 0xa9, 0xd4, 0x52, 0x73, 0xdd, 0xa1, 0xfa, 0xcc, 0x00, 0xd5, 0x5b, 0x9d, 0x5d, 0x5f, 0xcd,
	0x9b, 0xfe, 0xed, 0x68, 0xfc, 0xf4, 0x2e, 0xeb, 0x8b, 0xe8, 0x67, 0xb7, 0xcf, 0xa6, 0xbf, 0xd3,
	0x34, 0x1d, 0xd9, 0xa9, 0x41, 0x4f, 0xef, 0xd2, 0x5d, 0x47, 0xb7, 0x2d, 0x38, 0x86, 0xe4, 0x69,
	0x30, 0xc0, 0x74, 0x52, 0x20, 0x02, 0xd7, 0x80, 0x8a, 0x2a, 0xb0, 0x81, 0x2b, 0x26, 0xa8, 0x77,
	0x21, 0xe4, 0xa7, 0xfb, 0xe4, 0x36, 0xbf, 0x9b, 0xed, 0x3e, 0xc5, 0x6d, 0x7f, 0x3f, 0x1a, 0x7f,
	0xe9, 0x41, 0xcc, 0xaa, 0xe7, 0x54, 0xa7, 0x28, 0x7d, 0xe9, 0x41, 0xd4, 0xda, 0xab, 0x42, 0xad,
	0xd1, 0xa0, 0x44, 0x60, 0x29, 0x18, 0x10, 0x1e, 0x3d, 0x60, 0x88, 0x1e, 0x30, 0x51, 0xc6, 0x94,
	0x52, 0x3a, 0xb0, 0xdc, 0x1a, 0x8f, 0xf6, 0x72, 0xab, 0xfe, 0xfb, 0xe7, 0x9f, 0x40, 0xae, 0xba,
	0x50, 0x17, 0x72, 0x6f, 0xae, 0x96, 0x93, 0xef, 0x3d, 0x98, 0x5c, 0xe3, 0x45, 0xe9, 0x84, 0x0b,
	0xc1, 0x47, 0xf0, 0x46, 0x50, 0x10, 0x26, 0x50, 0x30, 0xde, 0x50, 0xe0, 0xda, 0xab, 0xc8, 0xad,
	0x71, 0x9c, 0x75, 0x1f, 0xf0, 0x7e, 0x92, 0xd5, 0x91, 0xff, 0x39, 0x1a, 0xc3, 0x83, 0x48, 0xee,
	0xfa, 0xd2, 0x14, 0xc2, 0x6e, 0xb5, 0x9c, 0x7c, 0xbf, 0xb7, 0x74, 0x87, 0xf0, 0x80, 0x3b, 0x59,
	0xe4, 0x2c, 0x38, 0x13, 0x80, 0xd3, 0x52, 0xe4, 0xa8, 0x01, 0x93, 0x9c, 0x07, 0x16, 0x39, 0x67,
	0x51, 0xa3, 0x0c, 0xd8, 0x25, 0xff, 0xdc, 0x5e, 0xf2, 0x3b, 0x1e, 0xfd, 0x8b, 0xd1, 0xf8, 0x8b,
	0x5d, 0x1d, 0x6e, 0x1a, 0xdc, 0xc2, 0x1d, 0x63, 0x0a, 0xe7, 0xd5, 0x9f, 0xb6, 0xd0, 0xbe, 0xbe,
	0x5a, 0x4e, 0xbe, 0xdb, 0x8b, 0x84, 0x1a, 0x09, 0x39, 0xb2, 0xfd, 0x9a, 0x46, 0x6a, 0x9f, 0xa4,
	0x20, 0xa0, 0x78, 0x10, 0x20, 0x0c, 0x06, 0x40, 0xa6, 0x11, 0x24, 0x7a, 0x47, 0x95, 0xb1, 0x34,
	0x94, 0x1b, 0xfc, 0xc7, 0x3b, 0xbb, 0x5c, 0x29, 0x9b, 0x5c, 0x4d, 0xe1, 0xbc, 0xf8, 0xf2, 0x2f,
	0x47, 0xe3, 0x27, 0xf7, 0xb1, 0xa9, 0x9e, 0xfc, 0x7a, 0xe7, 0x05, 0xe4, 0xc9, 0x7d, 0x74, 0x1a,
	0x3f, 0x22, 0xe3, 0x5c, 0x4b, 0x8d, 0x90, 0x38, 0x23, 0x20, 0xb4, 0xf5, 0x80, 0xdc, 0x25, 0x60,
	0xce, 0x1b, 0x62, 0x50, 0x30, 0x62, 0xf3, 0xb8, 0xf4, 0xc4, 0x20, 0x9f, 0xea, 0xc5, 0xbf, 0x79,
	0x00, 0xa1, 0xea, 0xc3, 0x6f, 0x14, 0x42, 0xdf, 0x5b, 0x2d, 0x27, 0xaf, 0xee, 0x27, 0xd4, 0x78,
	0xd0, 0x28, 0xe4, 0x89, 0x63, 0x7e, 0xa3, 0x56, 0x1a, 0x84, 0xd2, 0x0a, 0xd0, 0xa1, 0x00, 0x47,
	0x7d, 0xf2, 0x8c, 0x68, 0x6f, 0x52, 0xb7, 0x7b, 0x0f, 0x13, 0xab, 0xfe, 0xfb, 0x8f, 0xd1, 0xf8,
	0xb9, 0x7d, 0xc4, 0x76, 0xbd, 0xf7, 0xcd, 0x42, 0xf2, 0xfb, 0xab, 0xe5, 0xe4, 0x37, 0x7a, 0xcb,
	0x7a, 0x24, 0x07, 0x7c, 0x27, 0xbd, 0x57, 0x2c, 0xf1, 0x08, 0x31, 0x18, 0x0d, 0x42, 0x3b, 0x09,
	0x98, 0x38, 0x03, 0x6d, 0x12, 0x15, 0x86, 0x09, 0xa6, 0x59, 0xe8, 0x10, 0xfe, 0xca, 0x20, 0xe1,
	0x1d, 0xcf, 0xfd, 0xe3, 0x68, 0xfc, 0xe5, 0x5e, 0xee, 0xbc, 0x7f, 0xb6, 0x78, 0x27, 0x2e, 0xa6,
	0xbe, 0x7f, 0x6b, 0xf6, 0xad, 0x42, 0xfa, 0xb5, 0xd5, 0x72, 0xf2, 0x52, 0x2f, 0x1e, 0xd6, 0xf1,
	0x5b, 0xd7, 0x67, 0xc6, 0xa5, 0x88, 0xc6, 0x22, 0x68, 0x99, 0x28, 0x08, 0xe6, 0x14, 0x58, 0x86,
	0x0c, 0x88, 0xf6, 0x51, 0xfb, 0x48, 0x18, 0x77, 0xd9, 0x7f, 0x4f, 0x75, 0xb3, 0xa3, 0xdd, 0xaa,
	0x7b, 0x91, 0xf6, 0x4f, 0xa3, 0xf1, 0x33, 0x0f, 0xe6, 0x57, 0xbd, 0xf8, 0xed, 0x4e, 0x23, 0x7c,
	0xe6, 0xc1, 0x04, 0xdb, 0x0b, 0x46, 0xab, 0xa8, 0x54, 0xce, 0x43, 0x4c, 0xc8, 0xf2, 0xc8, 0x44,
	0xc1, 0xd8, 0x48, 0x40, 0x31, 0x25, 0x31, 0x5a, 0xe1, 0xb8, 0xcc, 0xd5, 0xfb, 0xe9, 0x07, 0x30,
	0xac, 0xbe, 0xdc, 0x4e, 0xdb, 0x66, 0xa4, 0xcc, 0x4f, 0xad, 0x1e, 0xde, 0x95, 0x7d, 0x69, 0xdb,
	0x4c, 0x95, 0x39, 0x72, 0xfd, 0x15, 0x36, 0x33, 0x22, 0x0f, 0x91, 0x81, 0x71, 0x0d, 0x82, 0x51,
	0x0a, 0x68, 0xa4, 0x00, 0xea, 0x69, 0x88, 0x96, 0xda, 0x84, 0xca, 0x6e, 0xa5, 0x6d, 0x9d, 0x28,
	0xf3, 0xc3, 0x1c, 0x4c, 0xdb, 0x2e, 0x9b, 0x7a, 0x54, 0x57, 0xf7, 0xa5, 0x6d, 0x97, 0x4e, 0x3b,
	0xc0, 0x50, 0x23, 0x25, 0x53, 0x08, 0x68, 0xa5, 0x01, 0x41, 0x75, 0x00, 0xc7, 0x14, 0x83, 0xa8,
	0x95, 0x0f, 0xc4, 0x48, 0xe1, 0xd2, 0x76, 0xda, 0x6e, 0xf8, 0x0c, 0xa7, 0x6d, 0x97, 0x50, 0x4d,
	0xdb, 0x6b, 0xfb, 0xd2, 0xb6, 0x4b, 0xa8, 0x49, 0x5b, 0xa6, 0x98, 0x0d, 0x26, 0x51, 0xb0, 0x3c,
	0x32, 0x10, 0x44, 0x12, 0x70, 0x4a, 0x38, 0xd0, 0x96, 0x58, 0x4d, 0xa8, 0xf7, 0x22, 0x99, 0x3d,
	0x69, 0xbb, 0x21, 0x36, 0x9c, 0xb6, 0x5d, 0x62, 0xbb, 0x69, 0xfb, 0xdd, 0x7d, 0x69, 0xdb, 0x25,
	0x39, 0x90, 0xb6, 0x18, 0x22, 0x43, 0xcb, 0x14, 0x10, 0x95, 0x22, 0x88, 0x3c, 0x0c, 0xba, 0x90,
	0x30, 0x8f, 0xc8, 0x1e, 0x69, 0x40, 0x97, 0x7a, 0xf7, 0x1f, 0x5f, 0x19, 0x24, 0xbc, 0x93, 0xb6,
	0xdb, 0x87, 0x3a, 0xf7, 0xd3, 0xd3, 0x63, 0x7f, 0x32, 0x8d, 0x67, 0xed, 0x53, 0x7e, 0x7e, 0xdf,
	0xa1, 0xe6, 0x50, 0xa8, 0xa1, 0xeb, 0x61, 0xc1, 0x69, 0x67, 0x6c, 0xb2, 0xa0, 0x0c, 0x2f, 0x6f,
	0x32, 0x0e, 0x6c, 0xb0, 0x09, 0x14, 0x35, 0x4e, 0x3a, 0x23, 0xa5, 0xa2, 0x6e, 0xcf, 0xa1, 0xde,
	0xf2, 0xd3, 0xd3, 0x6b, 0x65, 0xb3, 0xfa, 0xb4, 0xff, 0x6a, 0x2b, 0x19, 0xba, 0xc4, 0x4a, 0x32,
	0xbc, 0x50, 0x78, 0xbd, 0xb1, 0x5a, 0x4e, 0x5e, 0xe9, 0x27, 0x43, 0x97, 0x57, 0x4d, 0x06, 0xa9,
	0x30, 0xd8, 0x98, 0x24, 0xd8, 0x68, 0x2d, 0x08, 0x87, 0x16, 0x5c, 0xfe, 0x2f, 0xaa, 0x28, 0x83,
	0x53, 0x4e, 0x44, 0x8b, 0x1d, 0x5a, 0x8f, 0x0f, 0xd2, 0x2a, 0x49, 0xf1, 0x87, 0xa3, 0xf1, 0x63,
	0x3b, 0xac, 0xaa, 0xf9, 0x5e, 0xec, 0x5d, 0x62, 0x6d, 0xf3, 0x69, 0x5c, 0x87, 0x86, 0x70, 0x8b,
	0x94, 0x42, 0xc4, 0xfc, 0xb2, 0x9f, 0xac, 0x00, 0x43, 0xa3, 0x00, 0x25, 0x98, 0x93, 0x8c, 0x0b,
	0x1d, 0x08, 0xe9, 0xbd, 0x75, 0xf6, 0x99, 0x54, 0xbf, 0xfd, 0xeb, 0x76, 0xa9, 0xcd, 0x24, 0x76,
	0x8d, 0x76, 0xbd, 0x10, 0x7a, 0x6b, 0xb5, 0x9c, 0xdc, 0xdc, 0x2a, 0xb5, 0x99, 0xd0, 0x80, 0xc3,
	0x94, 0xc0, 0x90, 0x5c, 0x12, 0x80, 0x24, 0x28, 0xa0, 0x34, 0x4f, 0x79, 0x96, 0x58, 0x20, 0x4c,
	0x30, 0xe7, 0x29, 0x23, 0x84, 0x74, 0x1d, 0xf6, 0xd4, 0x16, 0xb9, 0x1d, 0x6f, 0xfd, 0xdd, 0xd6,
	0xcc, 0x77, 0x76, 0x7b, 0x7a, 0xf6, 0x5e, 0x9b, 0x16, 0xd3, 0x45, 0x33, 0x2b, 0xdf, 0xd8, 0x37,
	0x90, 0x96, 0xf0, 0x36, 0x1d, 0xa6, 0x8b, 0x76, 0x58, 0x16, 0x46, 0x49, 0x96, 0x84, 0x83, 0x40,
	0xca, 0x97, 0x91, 0x54, 0xe4, 0x4e, 0x87, 0x40, 0x84, 0xb0, 0x01, 0x4d, 0xf4, 0x54, 0xc5, 0xad,
	0x61, 0xf9, 0xb5, 0xbc, 0x53, 0xb5, 0xff, 0x74, 0x51, 0x87, 0xe5, 0x7f, 0xd8, 0x3a, 0xc3, 0x1d,
	0x6e, 0xd5, 0xfc, 0x2f, 0xed, 0x6b, 0x57, 0x3b, 0xe4, 0xda, 0x37, 0x57, 0x95, 0x9c, 0xd7, 0xe8,
	0x21, 0x68, 0xa1, 0x41, 0x20, 0x97, 0x60, 0x8d, 0xf1, 0xb9, 0xe2, 0x25, 0x9d, 0x84, 0xd4, 0x0a,
	0x71, 0x6b, 0x12, 0xed, 0xb3, 0xab, 0xee, 0xff, 0x97, 0x9f, 0x44, 0xaf, 0x7a, 0xee, 0xf5, 0x7d,
	0x8f, 0x78, 0x87, 0x5e, 0xe3, 0x3f, 0x6d, 0x15, 0xe1, 0x98, 0x34, 0x58, 0x6d, 0x22, 0x08, 0xae,
	0x02, 0x18, 0xc6, 0x14, 0x98, 0x28, 0x24, 0x51, 0x46, 0xc6, 0x60, 0x70, 0xcf, 0xc0, 0xdc, 0xa7,
	0x59, 0x9d, 0xf8, 0x5f, 0xa3, 0xf1, 0xa5, 0x07, 0xd2, 0xdc, 0x75, 0xe5, 0x1b, 0x85, 0x32, 0xae,
	0x96, 0x93, 0xdf, 0xee, 0xad, 0xdd, 0xa5, 0x3c, 0x34, 0xba, 0x58, 0x16, 0x78, 0xee, 0xb2, 0x92,
	0x94, 0x1f, 0x72, 0x60, 0xf9, 0x21, 0x0d, 0x03, 0x6b, 0x93, 0x13, 0x82, 0x45, 0x9b, 0x22, 0xdd,
	0x33, 0x32, 0xf7, 0xe9, 0xef, 0x78, 0x75, 0x31, 0xee, 0xe6, 0xda, 0xb1, 0x0f, 0xcd, 0xdd, 0xf8,
	0x9b, 0xbd, 0x1b, 0xf9, 0x0e, 0x5d, 0x1f, 0xda, 0xab, 0x71, 0x67, 0x25, 0x6a, 0xcb, 0x24, 0x70,
	0xe9, 0x08, 0x08, 0xee, 0x18, 0x18, 0xa4, 0x01, 0x50, 0x73, 0x22, 0x08, 0xb5, 0x86, 0xe9, 0xfa,
	0x23, 0x9b, 0xcd, 0xea, 0x6b, 0xa1, 0xde, 0x89, 0xdf, 0x1b, 0x3f, 0xba, 0x8d, 0x5a, 0x7d, 0xf7,
	0x56, 0xef, 0x9b, 0x9d, 0x2d, 0xd8, 0xf6, 0xca, 0x34, 0x21, 0x65, 0x4a, 0x45, 0x90, 0x34, 0xd7,
	0x12, 0xe6, 0x1d, 0x20, 0x55, 0x1c, 0x64, 0x34, 0x92, 0x50, 0x47, 0x1c, 0x06, 0x55, 0x6e, 0xd0,
	0x7a, 0xb8, 0xd5, 0x5f, 0xbf, 0xbf, 0x0b, 0x5c, 0x1d, 0xf5, 0x76, 0xef, 0xbb, 0x80, 0x2d, 0xe0,
	0xc6, 0x44, 0x3c, 0xd9, 0x84, 0xd4, 0x0b, 0x50, 0xce, 0x26, 0x10, 0xce, 0x18, 0x70, 0x26, 0x52,
	0xb0, 0x8c, 0x04, 0x8b, 0x96, 0x73, 0xc5, 0xba, 0x26, 0xda, 0x22, 0x50, 0x9d, 0xb3, 0xfd, 0x3e,
	0x98, 0x19, 0xec, 0x9a, 0xe5, 0xd7, 0xf7, 0xbd, 0x0f, 0x66, 0x36, 0x03, 0xfe, 0x30, 0x8c, 0x69,
	0x2d, 0x08, 0x07, 0x63, 0xa2, 0x04, 0xe1, 0x84, 0x03, 0xd4, 0x5e, 0x82, 0xb2, 0x89, 0x6a, 0x17,
	0x2c, 0x13, 0x2a, 0xee, 0xb1, 0xf7, 0xb5, 0x70, 0xb6, 0x6d, 0x8a, 0xab, 0x9f, 0x18, 0x3f, 0xe4,
	0xcb, 0x6f, 0x0c, 0xaf, 0x7e, 0x30, 0xfa, 0xf0, 0xa3, 0xa3, 0x83, 0x1f, 0x7d, 0x74, 0x74, 0xf0,
	0xe3, 0x8f, 0x8e, 0x46, 0x1f, 0xdc, 0x3f, 0x1a, 0xfd, 0xdb, 0xfd, 0xa3, 0xd1, 0x7f, 0xdf, 0x3f,
	0x1a, 0x7d, 0x78, 0xff, 0x68, 0xf4, 0x3f, 0xf7, 0x8f, 0x46, 0xff, 0x7b, 0xff, 0xe8, 0xe0, 0xc7,
	0xf7, 0x8f, 0x46, 0x3f, 0xfc, 0xf8, 0xe8, 0xe0, 0xc3, 0x8f, 0x8f, 0x0e, 0x7e, 0xf4, 0xf1, 0xd1,
	0xc1, 0x6f, 0xbe, 0x74, 0x7b, 0x76, 0xfe, 0xee, 0xed, 0x62, 0xf3, 0x78, 0x71, 0xe1, 0x2e, 0xdd,
	0x99, 0x5f, 0x2e, 0x7f, 0xa4, 0xd9, 0xc5, 0x29, 0x9c, 0x5f, 0xcc, 0xee, 0x4e, 0x43, 0xbc, 0x80,
	0xf6, 0xe3, 0xcb, 0xe7, 0x78, 0x7b, 0x76, 0x39, 0xbe, 0xb7, 0x68, 0x7e, 0x00, 0xd9, 0xfb, 0x1d,
	0x24, 0x3e, 0x54, 0x7e, 0x00, 0xc9, 0xff, 0x3f, 0x00, 0x00, 0xff, 0xff, 0x02, 0x9c, 0xd1, 0x03,
	0x67, 0x29, 0x00, 0x00,
}

func (this *APIGroupChoice) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice)
	if !ok {
		that2, ok := that.(APIGroupChoice)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if that1.Choice == nil {
		if this.Choice != nil {
			return false
		}
	} else if this.Choice == nil {
		return false
	} else if !this.Choice.Equal(that1.Choice) {
		return false
	}
	return true
}
func (this *APIGroupChoice_InfrastructureDemoAccessRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_InfrastructureDemoAccessRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_InfrastructureDemoAccessRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.InfrastructureDemoAccessRead != that1.InfrastructureDemoAccessRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoBillingRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoBillingRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoBillingRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoBillingRead != that1.VesIoBillingRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoBillingWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoBillingWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoBillingWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoBillingWrite != that1.VesIoBillingWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoGeneralRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoGeneralRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoGeneralRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoGeneralRead != that1.VesIoGeneralRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoGeneralWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoGeneralWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoGeneralWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoGeneralWrite != that1.VesIoGeneralWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoIaasCaasRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoIaasCaasRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoIaasCaasRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoIaasCaasRead != that1.VesIoIaasCaasRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoIaasCaasWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoIaasCaasWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoIaasCaasWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoIaasCaasWrite != that1.VesIoIaasCaasWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoInfraMonitorRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoInfraMonitorRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoInfraMonitorRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoInfraMonitorRead != that1.VesIoInfraMonitorRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoInfraMonitorWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoInfraMonitorWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoInfraMonitorWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoInfraMonitorWrite != that1.VesIoInfraMonitorWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoInfrastructureRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoInfrastructureRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoInfrastructureRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoInfrastructureRead != that1.VesIoInfrastructureRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoInfrastructureWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoInfrastructureWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoInfrastructureWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoInfrastructureWrite != that1.VesIoInfrastructureWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoInternalRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoInternalRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoInternalRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoInternalRead != that1.VesIoInternalRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoInternalWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoInternalWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoInternalWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoInternalWrite != that1.VesIoInternalWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoK8SRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoK8SRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoK8SRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoK8SRead != that1.VesIoK8SRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoK8SWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoK8SWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoK8SWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoK8SWrite != that1.VesIoK8SWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoLabelsRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoLabelsRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoLabelsRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoLabelsRead != that1.VesIoLabelsRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoLabelsWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoLabelsWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoLabelsWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoLabelsWrite != that1.VesIoLabelsWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoLocalK8SWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoLocalK8SWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoLocalK8SWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoLocalK8SWrite != that1.VesIoLocalK8SWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoMonitorRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoMonitorRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoMonitorRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoMonitorRead != that1.VesIoMonitorRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoMonitorWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoMonitorWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoMonitorWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoMonitorWrite != that1.VesIoMonitorWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoNetworkRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoNetworkRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoNetworkRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoNetworkRead != that1.VesIoNetworkRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoNetworkWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoNetworkWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoNetworkWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoNetworkWrite != that1.VesIoNetworkWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoProxyMonitorRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoProxyMonitorRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoProxyMonitorRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoProxyMonitorRead != that1.VesIoProxyMonitorRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoProxyMonitorWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoProxyMonitorWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoProxyMonitorWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoProxyMonitorWrite != that1.VesIoProxyMonitorWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoProxyRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoProxyRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoProxyRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoProxyRead != that1.VesIoProxyRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoProxySecurityRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoProxySecurityRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoProxySecurityRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoProxySecurityRead != that1.VesIoProxySecurityRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoProxySecurityWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoProxySecurityWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoProxySecurityWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoProxySecurityWrite != that1.VesIoProxySecurityWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoProxyWafRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoProxyWafRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoProxyWafRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoProxyWafRead != that1.VesIoProxyWafRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoProxyWafWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoProxyWafWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoProxyWafWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoProxyWafWrite != that1.VesIoProxyWafWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoProxyWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoProxyWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoProxyWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoProxyWrite != that1.VesIoProxyWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoSecretsRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoSecretsRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoSecretsRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoSecretsRead != that1.VesIoSecretsRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoSecretsWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoSecretsWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoSecretsWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoSecretsWrite != that1.VesIoSecretsWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoUamAdminRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoUamAdminRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoUamAdminRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoUamAdminRead != that1.VesIoUamAdminRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoUamAdminWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoUamAdminWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoUamAdminWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoUamAdminWrite != that1.VesIoUamAdminWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoUamRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoUamRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoUamRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoUamRead != that1.VesIoUamRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoUamWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoUamWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoUamWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoUamWrite != that1.VesIoUamWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoVirtualSitesRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoVirtualSitesRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoVirtualSitesRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoVirtualSitesRead != that1.VesIoVirtualSitesRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoVirtualSitesWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoVirtualSitesWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoVirtualSitesWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoVirtualSitesWrite != that1.VesIoVirtualSitesWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoVoltShareRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoVoltShareRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoVoltShareRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoVoltShareRead != that1.VesIoVoltShareRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoVoltShareWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoVoltShareWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoVoltShareWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoVoltShareWrite != that1.VesIoVoltShareWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoWebAccessRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoWebAccessRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoWebAccessRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoWebAccessRead != that1.VesIoWebAccessRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoWebAccessWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoWebAccessWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoWebAccessWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoWebAccessWrite != that1.VesIoWebAccessWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoTenantOwnerRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoTenantOwnerRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoTenantOwnerRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoTenantOwnerRead != that1.VesIoTenantOwnerRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoTenantOwnerWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoTenantOwnerWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoTenantOwnerWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoTenantOwnerWrite != that1.VesIoTenantOwnerWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoStoredObjectRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoStoredObjectRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoStoredObjectRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoStoredObjectRead != that1.VesIoStoredObjectRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VesIoStoredObjectWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VesIoStoredObjectWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VesIoStoredObjectWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoStoredObjectWrite != that1.VesIoStoredObjectWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VoltconsoleShapeBotRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VoltconsoleShapeBotRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VoltconsoleShapeBotRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VoltconsoleShapeBotRead != that1.VoltconsoleShapeBotRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VoltconsoleShapeBotWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VoltconsoleShapeBotWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VoltconsoleShapeBotWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VoltconsoleShapeBotWrite != that1.VoltconsoleShapeBotWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VoltconsoleShapeBotAdmin) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VoltconsoleShapeBotAdmin)
	if !ok {
		that2, ok := that.(APIGroupChoice_VoltconsoleShapeBotAdmin)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VoltconsoleShapeBotAdmin != that1.VoltconsoleShapeBotAdmin {
		return false
	}
	return true
}
func (this *APIGroupChoice_VoltconsoleShapeBotSubscriptionMgmt) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VoltconsoleShapeBotSubscriptionMgmt)
	if !ok {
		that2, ok := that.(APIGroupChoice_VoltconsoleShapeBotSubscriptionMgmt)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VoltconsoleShapeBotSubscriptionMgmt != that1.VoltconsoleShapeBotSubscriptionMgmt {
		return false
	}
	return true
}
func (this *APIGroupChoice_VoltconsoleShapeRecognizeRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VoltconsoleShapeRecognizeRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VoltconsoleShapeRecognizeRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VoltconsoleShapeRecognizeRead != that1.VoltconsoleShapeRecognizeRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VoltconsoleShapeRecognizeWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VoltconsoleShapeRecognizeWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VoltconsoleShapeRecognizeWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VoltconsoleShapeRecognizeWrite != that1.VoltconsoleShapeRecognizeWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VoltconsoleShapeRecognizeAdmin) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VoltconsoleShapeRecognizeAdmin)
	if !ok {
		that2, ok := that.(APIGroupChoice_VoltconsoleShapeRecognizeAdmin)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VoltconsoleShapeRecognizeAdmin != that1.VoltconsoleShapeRecognizeAdmin {
		return false
	}
	return true
}
func (this *APIGroupChoice_VoltconsoleShapeRecognizeSubscriptionMgmt) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VoltconsoleShapeRecognizeSubscriptionMgmt)
	if !ok {
		that2, ok := that.(APIGroupChoice_VoltconsoleShapeRecognizeSubscriptionMgmt)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VoltconsoleShapeRecognizeSubscriptionMgmt != that1.VoltconsoleShapeRecognizeSubscriptionMgmt {
		return false
	}
	return true
}
func (this *APIGroupChoice_VoltconsoleAidataBfdpRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VoltconsoleAidataBfdpRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VoltconsoleAidataBfdpRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VoltconsoleAidataBfdpRead != that1.VoltconsoleAidataBfdpRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VoltconsoleAidataBfdpWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VoltconsoleAidataBfdpWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VoltconsoleAidataBfdpWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VoltconsoleAidataBfdpWrite != that1.VoltconsoleAidataBfdpWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VoltconsoleAidataBfdpAdmin) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VoltconsoleAidataBfdpAdmin)
	if !ok {
		that2, ok := that.(APIGroupChoice_VoltconsoleAidataBfdpAdmin)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VoltconsoleAidataBfdpAdmin != that1.VoltconsoleAidataBfdpAdmin {
		return false
	}
	return true
}
func (this *APIGroupChoice_VoltconsoleAidataBfdpSubscriptionMgmt) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VoltconsoleAidataBfdpSubscriptionMgmt)
	if !ok {
		that2, ok := that.(APIGroupChoice_VoltconsoleAidataBfdpSubscriptionMgmt)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VoltconsoleAidataBfdpSubscriptionMgmt != that1.VoltconsoleAidataBfdpSubscriptionMgmt {
		return false
	}
	return true
}
func (this *APIGroupChoice_VoltconsoleSyntheticMonitorRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VoltconsoleSyntheticMonitorRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VoltconsoleSyntheticMonitorRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VoltconsoleSyntheticMonitorRead != that1.VoltconsoleSyntheticMonitorRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VoltconsoleSyntheticMonitorWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VoltconsoleSyntheticMonitorWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VoltconsoleSyntheticMonitorWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VoltconsoleSyntheticMonitorWrite != that1.VoltconsoleSyntheticMonitorWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VoltconsoleTenantMgmtRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VoltconsoleTenantMgmtRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VoltconsoleTenantMgmtRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VoltconsoleTenantMgmtRead != that1.VoltconsoleTenantMgmtRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VoltconsoleTenantMgmtWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VoltconsoleTenantMgmtWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VoltconsoleTenantMgmtWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VoltconsoleTenantMgmtWrite != that1.VoltconsoleTenantMgmtWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VoltconsoleTenantMgmtAdmin) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VoltconsoleTenantMgmtAdmin)
	if !ok {
		that2, ok := that.(APIGroupChoice_VoltconsoleTenantMgmtAdmin)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VoltconsoleTenantMgmtAdmin != that1.VoltconsoleTenantMgmtAdmin {
		return false
	}
	return true
}
func (this *APIGroupChoice_VoltconsoleTenantMgmtSubscriptionMgmt) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VoltconsoleTenantMgmtSubscriptionMgmt)
	if !ok {
		that2, ok := that.(APIGroupChoice_VoltconsoleTenantMgmtSubscriptionMgmt)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VoltconsoleTenantMgmtSubscriptionMgmt != that1.VoltconsoleTenantMgmtSubscriptionMgmt {
		return false
	}
	return true
}
func (this *APIGroupChoice_VoltconsoleScimClientWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VoltconsoleScimClientWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VoltconsoleScimClientWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VoltconsoleScimClientWrite != that1.VoltconsoleScimClientWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VoltconsoleScimClientRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VoltconsoleScimClientRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VoltconsoleScimClientRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VoltconsoleScimClientRead != that1.VoltconsoleScimClientRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VoltconsoleScimAdmin) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VoltconsoleScimAdmin)
	if !ok {
		that2, ok := that.(APIGroupChoice_VoltconsoleScimAdmin)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VoltconsoleScimAdmin != that1.VoltconsoleScimAdmin {
		return false
	}
	return true
}
func (this *APIGroupChoice_VoltconsoleScimSubscriptionMgmt) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VoltconsoleScimSubscriptionMgmt)
	if !ok {
		that2, ok := that.(APIGroupChoice_VoltconsoleScimSubscriptionMgmt)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VoltconsoleScimSubscriptionMgmt != that1.VoltconsoleScimSubscriptionMgmt {
		return false
	}
	return true
}
func (this *APIGroupChoice_VoltconsoleNginxMgmtSuiteRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VoltconsoleNginxMgmtSuiteRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VoltconsoleNginxMgmtSuiteRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VoltconsoleNginxMgmtSuiteRead != that1.VoltconsoleNginxMgmtSuiteRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VoltconsoleNginxMgmtSuiteWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VoltconsoleNginxMgmtSuiteWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VoltconsoleNginxMgmtSuiteWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VoltconsoleNginxMgmtSuiteWrite != that1.VoltconsoleNginxMgmtSuiteWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VoltconsoleNginxMgmtSuiteAdmin) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VoltconsoleNginxMgmtSuiteAdmin)
	if !ok {
		that2, ok := that.(APIGroupChoice_VoltconsoleNginxMgmtSuiteAdmin)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VoltconsoleNginxMgmtSuiteAdmin != that1.VoltconsoleNginxMgmtSuiteAdmin {
		return false
	}
	return true
}
func (this *APIGroupChoice_VoltconsoleNginxMgmtSuiteSubscriptionMgmt) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VoltconsoleNginxMgmtSuiteSubscriptionMgmt)
	if !ok {
		that2, ok := that.(APIGroupChoice_VoltconsoleNginxMgmtSuiteSubscriptionMgmt)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VoltconsoleNginxMgmtSuiteSubscriptionMgmt != that1.VoltconsoleNginxMgmtSuiteSubscriptionMgmt {
		return false
	}
	return true
}
func (this *APIGroupChoice_VoltconsoleCdnRead) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VoltconsoleCdnRead)
	if !ok {
		that2, ok := that.(APIGroupChoice_VoltconsoleCdnRead)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VoltconsoleCdnRead != that1.VoltconsoleCdnRead {
		return false
	}
	return true
}
func (this *APIGroupChoice_VoltconsoleCdnWrite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VoltconsoleCdnWrite)
	if !ok {
		that2, ok := that.(APIGroupChoice_VoltconsoleCdnWrite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VoltconsoleCdnWrite != that1.VoltconsoleCdnWrite {
		return false
	}
	return true
}
func (this *APIGroupChoice_VoltconsoleCdnAdmin) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VoltconsoleCdnAdmin)
	if !ok {
		that2, ok := that.(APIGroupChoice_VoltconsoleCdnAdmin)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VoltconsoleCdnAdmin != that1.VoltconsoleCdnAdmin {
		return false
	}
	return true
}
func (this *APIGroupChoice_VoltconsoleCdnSubscriptionMgmt) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*APIGroupChoice_VoltconsoleCdnSubscriptionMgmt)
	if !ok {
		that2, ok := that.(APIGroupChoice_VoltconsoleCdnSubscriptionMgmt)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VoltconsoleCdnSubscriptionMgmt != that1.VoltconsoleCdnSubscriptionMgmt {
		return false
	}
	return true
}
func (this *APIGroupChoice) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 80)
	s = append(s, "&vesenv.APIGroupChoice{")
	if this.Choice != nil {
		s = append(s, "Choice: "+fmt.Sprintf("%#v", this.Choice)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *APIGroupChoice_InfrastructureDemoAccessRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_InfrastructureDemoAccessRead{` +
		`InfrastructureDemoAccessRead:` + fmt.Sprintf("%#v", this.InfrastructureDemoAccessRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoBillingRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoBillingRead{` +
		`VesIoBillingRead:` + fmt.Sprintf("%#v", this.VesIoBillingRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoBillingWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoBillingWrite{` +
		`VesIoBillingWrite:` + fmt.Sprintf("%#v", this.VesIoBillingWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoGeneralRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoGeneralRead{` +
		`VesIoGeneralRead:` + fmt.Sprintf("%#v", this.VesIoGeneralRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoGeneralWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoGeneralWrite{` +
		`VesIoGeneralWrite:` + fmt.Sprintf("%#v", this.VesIoGeneralWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoIaasCaasRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoIaasCaasRead{` +
		`VesIoIaasCaasRead:` + fmt.Sprintf("%#v", this.VesIoIaasCaasRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoIaasCaasWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoIaasCaasWrite{` +
		`VesIoIaasCaasWrite:` + fmt.Sprintf("%#v", this.VesIoIaasCaasWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoInfraMonitorRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoInfraMonitorRead{` +
		`VesIoInfraMonitorRead:` + fmt.Sprintf("%#v", this.VesIoInfraMonitorRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoInfraMonitorWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoInfraMonitorWrite{` +
		`VesIoInfraMonitorWrite:` + fmt.Sprintf("%#v", this.VesIoInfraMonitorWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoInfrastructureRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoInfrastructureRead{` +
		`VesIoInfrastructureRead:` + fmt.Sprintf("%#v", this.VesIoInfrastructureRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoInfrastructureWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoInfrastructureWrite{` +
		`VesIoInfrastructureWrite:` + fmt.Sprintf("%#v", this.VesIoInfrastructureWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoInternalRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoInternalRead{` +
		`VesIoInternalRead:` + fmt.Sprintf("%#v", this.VesIoInternalRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoInternalWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoInternalWrite{` +
		`VesIoInternalWrite:` + fmt.Sprintf("%#v", this.VesIoInternalWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoK8SRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoK8SRead{` +
		`VesIoK8SRead:` + fmt.Sprintf("%#v", this.VesIoK8SRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoK8SWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoK8SWrite{` +
		`VesIoK8SWrite:` + fmt.Sprintf("%#v", this.VesIoK8SWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoLabelsRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoLabelsRead{` +
		`VesIoLabelsRead:` + fmt.Sprintf("%#v", this.VesIoLabelsRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoLabelsWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoLabelsWrite{` +
		`VesIoLabelsWrite:` + fmt.Sprintf("%#v", this.VesIoLabelsWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoLocalK8SWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoLocalK8SWrite{` +
		`VesIoLocalK8SWrite:` + fmt.Sprintf("%#v", this.VesIoLocalK8SWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoMonitorRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoMonitorRead{` +
		`VesIoMonitorRead:` + fmt.Sprintf("%#v", this.VesIoMonitorRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoMonitorWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoMonitorWrite{` +
		`VesIoMonitorWrite:` + fmt.Sprintf("%#v", this.VesIoMonitorWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoNetworkRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoNetworkRead{` +
		`VesIoNetworkRead:` + fmt.Sprintf("%#v", this.VesIoNetworkRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoNetworkWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoNetworkWrite{` +
		`VesIoNetworkWrite:` + fmt.Sprintf("%#v", this.VesIoNetworkWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoProxyMonitorRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoProxyMonitorRead{` +
		`VesIoProxyMonitorRead:` + fmt.Sprintf("%#v", this.VesIoProxyMonitorRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoProxyMonitorWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoProxyMonitorWrite{` +
		`VesIoProxyMonitorWrite:` + fmt.Sprintf("%#v", this.VesIoProxyMonitorWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoProxyRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoProxyRead{` +
		`VesIoProxyRead:` + fmt.Sprintf("%#v", this.VesIoProxyRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoProxySecurityRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoProxySecurityRead{` +
		`VesIoProxySecurityRead:` + fmt.Sprintf("%#v", this.VesIoProxySecurityRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoProxySecurityWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoProxySecurityWrite{` +
		`VesIoProxySecurityWrite:` + fmt.Sprintf("%#v", this.VesIoProxySecurityWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoProxyWafRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoProxyWafRead{` +
		`VesIoProxyWafRead:` + fmt.Sprintf("%#v", this.VesIoProxyWafRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoProxyWafWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoProxyWafWrite{` +
		`VesIoProxyWafWrite:` + fmt.Sprintf("%#v", this.VesIoProxyWafWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoProxyWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoProxyWrite{` +
		`VesIoProxyWrite:` + fmt.Sprintf("%#v", this.VesIoProxyWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoSecretsRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoSecretsRead{` +
		`VesIoSecretsRead:` + fmt.Sprintf("%#v", this.VesIoSecretsRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoSecretsWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoSecretsWrite{` +
		`VesIoSecretsWrite:` + fmt.Sprintf("%#v", this.VesIoSecretsWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoUamAdminRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoUamAdminRead{` +
		`VesIoUamAdminRead:` + fmt.Sprintf("%#v", this.VesIoUamAdminRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoUamAdminWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoUamAdminWrite{` +
		`VesIoUamAdminWrite:` + fmt.Sprintf("%#v", this.VesIoUamAdminWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoUamRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoUamRead{` +
		`VesIoUamRead:` + fmt.Sprintf("%#v", this.VesIoUamRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoUamWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoUamWrite{` +
		`VesIoUamWrite:` + fmt.Sprintf("%#v", this.VesIoUamWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoVirtualSitesRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoVirtualSitesRead{` +
		`VesIoVirtualSitesRead:` + fmt.Sprintf("%#v", this.VesIoVirtualSitesRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoVirtualSitesWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoVirtualSitesWrite{` +
		`VesIoVirtualSitesWrite:` + fmt.Sprintf("%#v", this.VesIoVirtualSitesWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoVoltShareRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoVoltShareRead{` +
		`VesIoVoltShareRead:` + fmt.Sprintf("%#v", this.VesIoVoltShareRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoVoltShareWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoVoltShareWrite{` +
		`VesIoVoltShareWrite:` + fmt.Sprintf("%#v", this.VesIoVoltShareWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoWebAccessRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoWebAccessRead{` +
		`VesIoWebAccessRead:` + fmt.Sprintf("%#v", this.VesIoWebAccessRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoWebAccessWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoWebAccessWrite{` +
		`VesIoWebAccessWrite:` + fmt.Sprintf("%#v", this.VesIoWebAccessWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoTenantOwnerRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoTenantOwnerRead{` +
		`VesIoTenantOwnerRead:` + fmt.Sprintf("%#v", this.VesIoTenantOwnerRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoTenantOwnerWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoTenantOwnerWrite{` +
		`VesIoTenantOwnerWrite:` + fmt.Sprintf("%#v", this.VesIoTenantOwnerWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoStoredObjectRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoStoredObjectRead{` +
		`VesIoStoredObjectRead:` + fmt.Sprintf("%#v", this.VesIoStoredObjectRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VesIoStoredObjectWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VesIoStoredObjectWrite{` +
		`VesIoStoredObjectWrite:` + fmt.Sprintf("%#v", this.VesIoStoredObjectWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VoltconsoleShapeBotRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VoltconsoleShapeBotRead{` +
		`VoltconsoleShapeBotRead:` + fmt.Sprintf("%#v", this.VoltconsoleShapeBotRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VoltconsoleShapeBotWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VoltconsoleShapeBotWrite{` +
		`VoltconsoleShapeBotWrite:` + fmt.Sprintf("%#v", this.VoltconsoleShapeBotWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VoltconsoleShapeBotAdmin) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VoltconsoleShapeBotAdmin{` +
		`VoltconsoleShapeBotAdmin:` + fmt.Sprintf("%#v", this.VoltconsoleShapeBotAdmin) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VoltconsoleShapeBotSubscriptionMgmt) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VoltconsoleShapeBotSubscriptionMgmt{` +
		`VoltconsoleShapeBotSubscriptionMgmt:` + fmt.Sprintf("%#v", this.VoltconsoleShapeBotSubscriptionMgmt) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VoltconsoleShapeRecognizeRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VoltconsoleShapeRecognizeRead{` +
		`VoltconsoleShapeRecognizeRead:` + fmt.Sprintf("%#v", this.VoltconsoleShapeRecognizeRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VoltconsoleShapeRecognizeWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VoltconsoleShapeRecognizeWrite{` +
		`VoltconsoleShapeRecognizeWrite:` + fmt.Sprintf("%#v", this.VoltconsoleShapeRecognizeWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VoltconsoleShapeRecognizeAdmin) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VoltconsoleShapeRecognizeAdmin{` +
		`VoltconsoleShapeRecognizeAdmin:` + fmt.Sprintf("%#v", this.VoltconsoleShapeRecognizeAdmin) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VoltconsoleShapeRecognizeSubscriptionMgmt) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VoltconsoleShapeRecognizeSubscriptionMgmt{` +
		`VoltconsoleShapeRecognizeSubscriptionMgmt:` + fmt.Sprintf("%#v", this.VoltconsoleShapeRecognizeSubscriptionMgmt) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VoltconsoleAidataBfdpRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VoltconsoleAidataBfdpRead{` +
		`VoltconsoleAidataBfdpRead:` + fmt.Sprintf("%#v", this.VoltconsoleAidataBfdpRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VoltconsoleAidataBfdpWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VoltconsoleAidataBfdpWrite{` +
		`VoltconsoleAidataBfdpWrite:` + fmt.Sprintf("%#v", this.VoltconsoleAidataBfdpWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VoltconsoleAidataBfdpAdmin) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VoltconsoleAidataBfdpAdmin{` +
		`VoltconsoleAidataBfdpAdmin:` + fmt.Sprintf("%#v", this.VoltconsoleAidataBfdpAdmin) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VoltconsoleAidataBfdpSubscriptionMgmt) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VoltconsoleAidataBfdpSubscriptionMgmt{` +
		`VoltconsoleAidataBfdpSubscriptionMgmt:` + fmt.Sprintf("%#v", this.VoltconsoleAidataBfdpSubscriptionMgmt) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VoltconsoleSyntheticMonitorRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VoltconsoleSyntheticMonitorRead{` +
		`VoltconsoleSyntheticMonitorRead:` + fmt.Sprintf("%#v", this.VoltconsoleSyntheticMonitorRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VoltconsoleSyntheticMonitorWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VoltconsoleSyntheticMonitorWrite{` +
		`VoltconsoleSyntheticMonitorWrite:` + fmt.Sprintf("%#v", this.VoltconsoleSyntheticMonitorWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VoltconsoleTenantMgmtRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VoltconsoleTenantMgmtRead{` +
		`VoltconsoleTenantMgmtRead:` + fmt.Sprintf("%#v", this.VoltconsoleTenantMgmtRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VoltconsoleTenantMgmtWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VoltconsoleTenantMgmtWrite{` +
		`VoltconsoleTenantMgmtWrite:` + fmt.Sprintf("%#v", this.VoltconsoleTenantMgmtWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VoltconsoleTenantMgmtAdmin) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VoltconsoleTenantMgmtAdmin{` +
		`VoltconsoleTenantMgmtAdmin:` + fmt.Sprintf("%#v", this.VoltconsoleTenantMgmtAdmin) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VoltconsoleTenantMgmtSubscriptionMgmt) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VoltconsoleTenantMgmtSubscriptionMgmt{` +
		`VoltconsoleTenantMgmtSubscriptionMgmt:` + fmt.Sprintf("%#v", this.VoltconsoleTenantMgmtSubscriptionMgmt) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VoltconsoleScimClientWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VoltconsoleScimClientWrite{` +
		`VoltconsoleScimClientWrite:` + fmt.Sprintf("%#v", this.VoltconsoleScimClientWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VoltconsoleScimClientRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VoltconsoleScimClientRead{` +
		`VoltconsoleScimClientRead:` + fmt.Sprintf("%#v", this.VoltconsoleScimClientRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VoltconsoleScimAdmin) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VoltconsoleScimAdmin{` +
		`VoltconsoleScimAdmin:` + fmt.Sprintf("%#v", this.VoltconsoleScimAdmin) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VoltconsoleScimSubscriptionMgmt) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VoltconsoleScimSubscriptionMgmt{` +
		`VoltconsoleScimSubscriptionMgmt:` + fmt.Sprintf("%#v", this.VoltconsoleScimSubscriptionMgmt) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VoltconsoleNginxMgmtSuiteRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VoltconsoleNginxMgmtSuiteRead{` +
		`VoltconsoleNginxMgmtSuiteRead:` + fmt.Sprintf("%#v", this.VoltconsoleNginxMgmtSuiteRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VoltconsoleNginxMgmtSuiteWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VoltconsoleNginxMgmtSuiteWrite{` +
		`VoltconsoleNginxMgmtSuiteWrite:` + fmt.Sprintf("%#v", this.VoltconsoleNginxMgmtSuiteWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VoltconsoleNginxMgmtSuiteAdmin) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VoltconsoleNginxMgmtSuiteAdmin{` +
		`VoltconsoleNginxMgmtSuiteAdmin:` + fmt.Sprintf("%#v", this.VoltconsoleNginxMgmtSuiteAdmin) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VoltconsoleNginxMgmtSuiteSubscriptionMgmt) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VoltconsoleNginxMgmtSuiteSubscriptionMgmt{` +
		`VoltconsoleNginxMgmtSuiteSubscriptionMgmt:` + fmt.Sprintf("%#v", this.VoltconsoleNginxMgmtSuiteSubscriptionMgmt) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VoltconsoleCdnRead) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VoltconsoleCdnRead{` +
		`VoltconsoleCdnRead:` + fmt.Sprintf("%#v", this.VoltconsoleCdnRead) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VoltconsoleCdnWrite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VoltconsoleCdnWrite{` +
		`VoltconsoleCdnWrite:` + fmt.Sprintf("%#v", this.VoltconsoleCdnWrite) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VoltconsoleCdnAdmin) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VoltconsoleCdnAdmin{` +
		`VoltconsoleCdnAdmin:` + fmt.Sprintf("%#v", this.VoltconsoleCdnAdmin) + `}`}, ", ")
	return s
}
func (this *APIGroupChoice_VoltconsoleCdnSubscriptionMgmt) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.APIGroupChoice_VoltconsoleCdnSubscriptionMgmt{` +
		`VoltconsoleCdnSubscriptionMgmt:` + fmt.Sprintf("%#v", this.VoltconsoleCdnSubscriptionMgmt) + `}`}, ", ")
	return s
}
func valueToGoStringAllApiGroups(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
func (m *APIGroupChoice) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *APIGroupChoice) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Choice != nil {
		{
			size := m.Choice.Size()
			i -= size
			if _, err := m.Choice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	return len(dAtA) - i, nil
}

func (m *APIGroupChoice_InfrastructureDemoAccessRead) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_InfrastructureDemoAccessRead) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.InfrastructureDemoAccessRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VesIoBillingRead) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VesIoBillingRead) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoBillingRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x10
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VesIoBillingWrite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VesIoBillingWrite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoBillingWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x18
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VesIoGeneralRead) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VesIoGeneralRead) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoGeneralRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x20
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VesIoGeneralWrite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VesIoGeneralWrite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoGeneralWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x28
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VesIoIaasCaasRead) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VesIoIaasCaasRead) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoIaasCaasRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x30
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VesIoIaasCaasWrite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VesIoIaasCaasWrite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoIaasCaasWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x38
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VesIoInfraMonitorRead) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VesIoInfraMonitorRead) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoInfraMonitorRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x40
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VesIoInfraMonitorWrite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VesIoInfraMonitorWrite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoInfraMonitorWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x48
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VesIoInfrastructureRead) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VesIoInfrastructureRead) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoInfrastructureRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x50
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VesIoInfrastructureWrite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VesIoInfrastructureWrite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoInfrastructureWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x58
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VesIoInternalRead) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VesIoInternalRead) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoInternalRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x60
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VesIoInternalWrite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VesIoInternalWrite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoInternalWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x68
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VesIoK8SRead) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VesIoK8SRead) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoK8SRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x70
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VesIoK8SWrite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VesIoK8SWrite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoK8SWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x78
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VesIoLabelsRead) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VesIoLabelsRead) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoLabelsRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0x80
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VesIoLabelsWrite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VesIoLabelsWrite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoLabelsWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0x88
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VesIoLocalK8SWrite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VesIoLocalK8SWrite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoLocalK8SWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0x90
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VesIoMonitorRead) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VesIoMonitorRead) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoMonitorRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0x98
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VesIoMonitorWrite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VesIoMonitorWrite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoMonitorWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xa0
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VesIoNetworkRead) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VesIoNetworkRead) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoNetworkRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xa8
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VesIoNetworkWrite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VesIoNetworkWrite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoNetworkWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xb0
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VesIoProxyMonitorRead) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VesIoProxyMonitorRead) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoProxyMonitorRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xb8
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VesIoProxyMonitorWrite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VesIoProxyMonitorWrite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoProxyMonitorWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xc0
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VesIoProxyRead) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VesIoProxyRead) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoProxyRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xc8
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VesIoProxySecurityRead) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VesIoProxySecurityRead) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoProxySecurityRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xd0
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VesIoProxySecurityWrite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VesIoProxySecurityWrite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoProxySecurityWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xd8
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VesIoProxyWafRead) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VesIoProxyWafRead) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoProxyWafRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xe0
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VesIoProxyWafWrite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VesIoProxyWafWrite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoProxyWafWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xe8
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VesIoProxyWrite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VesIoProxyWrite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoProxyWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xf0
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VesIoSecretsRead) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VesIoSecretsRead) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoSecretsRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xf8
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VesIoSecretsWrite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VesIoSecretsWrite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoSecretsWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x2
	i--
	dAtA[i] = 0x80
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VesIoUamAdminRead) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VesIoUamAdminRead) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoUamAdminRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x2
	i--
	dAtA[i] = 0x98
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VesIoUamAdminWrite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VesIoUamAdminWrite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoUamAdminWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x2
	i--
	dAtA[i] = 0xa0
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VesIoUamRead) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VesIoUamRead) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoUamRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x2
	i--
	dAtA[i] = 0xa8
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VesIoUamWrite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VesIoUamWrite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoUamWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x2
	i--
	dAtA[i] = 0xb0
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VesIoVirtualSitesRead) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VesIoVirtualSitesRead) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoVirtualSitesRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x2
	i--
	dAtA[i] = 0xb8
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VesIoVirtualSitesWrite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VesIoVirtualSitesWrite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoVirtualSitesWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x2
	i--
	dAtA[i] = 0xc0
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VesIoVoltShareRead) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VesIoVoltShareRead) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoVoltShareRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x2
	i--
	dAtA[i] = 0xc8
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VesIoVoltShareWrite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VesIoVoltShareWrite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoVoltShareWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x2
	i--
	dAtA[i] = 0xd0
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VesIoWebAccessRead) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VesIoWebAccessRead) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoWebAccessRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x2
	i--
	dAtA[i] = 0xd8
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VesIoWebAccessWrite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VesIoWebAccessWrite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoWebAccessWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x2
	i--
	dAtA[i] = 0xe0
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VesIoTenantOwnerRead) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VesIoTenantOwnerRead) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoTenantOwnerRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x2
	i--
	dAtA[i] = 0xe8
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VesIoTenantOwnerWrite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VesIoTenantOwnerWrite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoTenantOwnerWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x2
	i--
	dAtA[i] = 0xf0
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VesIoStoredObjectRead) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VesIoStoredObjectRead) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoStoredObjectRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x2
	i--
	dAtA[i] = 0xf8
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VesIoStoredObjectWrite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VesIoStoredObjectWrite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoStoredObjectWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x3
	i--
	dAtA[i] = 0x80
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VoltconsoleShapeBotRead) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VoltconsoleShapeBotRead) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VoltconsoleShapeBotRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x3
	i--
	dAtA[i] = 0x88
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VoltconsoleShapeBotWrite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VoltconsoleShapeBotWrite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VoltconsoleShapeBotWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x3
	i--
	dAtA[i] = 0x90
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VoltconsoleShapeBotAdmin) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VoltconsoleShapeBotAdmin) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VoltconsoleShapeBotAdmin {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x3
	i--
	dAtA[i] = 0x98
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VoltconsoleShapeBotSubscriptionMgmt) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VoltconsoleShapeBotSubscriptionMgmt) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VoltconsoleShapeBotSubscriptionMgmt {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x3
	i--
	dAtA[i] = 0xa0
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VoltconsoleShapeRecognizeRead) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VoltconsoleShapeRecognizeRead) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VoltconsoleShapeRecognizeRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x3
	i--
	dAtA[i] = 0xa8
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VoltconsoleShapeRecognizeWrite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VoltconsoleShapeRecognizeWrite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VoltconsoleShapeRecognizeWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x3
	i--
	dAtA[i] = 0xb0
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VoltconsoleShapeRecognizeAdmin) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VoltconsoleShapeRecognizeAdmin) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VoltconsoleShapeRecognizeAdmin {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x3
	i--
	dAtA[i] = 0xb8
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VoltconsoleShapeRecognizeSubscriptionMgmt) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VoltconsoleShapeRecognizeSubscriptionMgmt) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VoltconsoleShapeRecognizeSubscriptionMgmt {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x3
	i--
	dAtA[i] = 0xc0
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VoltconsoleAidataBfdpRead) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VoltconsoleAidataBfdpRead) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VoltconsoleAidataBfdpRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x3
	i--
	dAtA[i] = 0xc8
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VoltconsoleAidataBfdpWrite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VoltconsoleAidataBfdpWrite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VoltconsoleAidataBfdpWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x3
	i--
	dAtA[i] = 0xd0
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VoltconsoleAidataBfdpAdmin) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VoltconsoleAidataBfdpAdmin) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VoltconsoleAidataBfdpAdmin {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x3
	i--
	dAtA[i] = 0xd8
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VoltconsoleAidataBfdpSubscriptionMgmt) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VoltconsoleAidataBfdpSubscriptionMgmt) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VoltconsoleAidataBfdpSubscriptionMgmt {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x3
	i--
	dAtA[i] = 0xe0
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VoltconsoleSyntheticMonitorRead) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VoltconsoleSyntheticMonitorRead) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VoltconsoleSyntheticMonitorRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x3
	i--
	dAtA[i] = 0xe8
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VoltconsoleSyntheticMonitorWrite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VoltconsoleSyntheticMonitorWrite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VoltconsoleSyntheticMonitorWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x3
	i--
	dAtA[i] = 0xf0
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VoltconsoleTenantMgmtRead) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VoltconsoleTenantMgmtRead) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VoltconsoleTenantMgmtRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x4
	i--
	dAtA[i] = 0x88
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VoltconsoleTenantMgmtWrite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VoltconsoleTenantMgmtWrite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VoltconsoleTenantMgmtWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x4
	i--
	dAtA[i] = 0x90
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VoltconsoleTenantMgmtAdmin) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VoltconsoleTenantMgmtAdmin) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VoltconsoleTenantMgmtAdmin {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x4
	i--
	dAtA[i] = 0x98
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VoltconsoleTenantMgmtSubscriptionMgmt) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VoltconsoleTenantMgmtSubscriptionMgmt) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VoltconsoleTenantMgmtSubscriptionMgmt {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x4
	i--
	dAtA[i] = 0xa0
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VoltconsoleScimClientWrite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VoltconsoleScimClientWrite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VoltconsoleScimClientWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x4
	i--
	dAtA[i] = 0xa8
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VoltconsoleScimClientRead) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VoltconsoleScimClientRead) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VoltconsoleScimClientRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x4
	i--
	dAtA[i] = 0xb0
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VoltconsoleScimAdmin) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VoltconsoleScimAdmin) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VoltconsoleScimAdmin {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x4
	i--
	dAtA[i] = 0xb8
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VoltconsoleScimSubscriptionMgmt) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VoltconsoleScimSubscriptionMgmt) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VoltconsoleScimSubscriptionMgmt {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x4
	i--
	dAtA[i] = 0xc0
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VoltconsoleNginxMgmtSuiteRead) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VoltconsoleNginxMgmtSuiteRead) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VoltconsoleNginxMgmtSuiteRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x4
	i--
	dAtA[i] = 0xc8
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VoltconsoleNginxMgmtSuiteWrite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VoltconsoleNginxMgmtSuiteWrite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VoltconsoleNginxMgmtSuiteWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x4
	i--
	dAtA[i] = 0xd0
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VoltconsoleNginxMgmtSuiteAdmin) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VoltconsoleNginxMgmtSuiteAdmin) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VoltconsoleNginxMgmtSuiteAdmin {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x4
	i--
	dAtA[i] = 0xf8
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VoltconsoleNginxMgmtSuiteSubscriptionMgmt) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VoltconsoleNginxMgmtSuiteSubscriptionMgmt) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VoltconsoleNginxMgmtSuiteSubscriptionMgmt {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x5
	i--
	dAtA[i] = 0x80
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VoltconsoleCdnRead) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VoltconsoleCdnRead) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VoltconsoleCdnRead {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x5
	i--
	dAtA[i] = 0xa8
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VoltconsoleCdnWrite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VoltconsoleCdnWrite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VoltconsoleCdnWrite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x5
	i--
	dAtA[i] = 0xb0
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VoltconsoleCdnAdmin) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VoltconsoleCdnAdmin) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VoltconsoleCdnAdmin {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x5
	i--
	dAtA[i] = 0xb8
	return len(dAtA) - i, nil
}
func (m *APIGroupChoice_VoltconsoleCdnSubscriptionMgmt) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *APIGroupChoice_VoltconsoleCdnSubscriptionMgmt) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VoltconsoleCdnSubscriptionMgmt {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x5
	i--
	dAtA[i] = 0xc0
	return len(dAtA) - i, nil
}
func encodeVarintAllApiGroups(dAtA []byte, offset int, v uint64) int {
	offset -= sovAllApiGroups(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *APIGroupChoice) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Choice != nil {
		n += m.Choice.Size()
	}
	return n
}

func (m *APIGroupChoice_InfrastructureDemoAccessRead) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *APIGroupChoice_VesIoBillingRead) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *APIGroupChoice_VesIoBillingWrite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *APIGroupChoice_VesIoGeneralRead) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *APIGroupChoice_VesIoGeneralWrite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *APIGroupChoice_VesIoIaasCaasRead) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *APIGroupChoice_VesIoIaasCaasWrite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *APIGroupChoice_VesIoInfraMonitorRead) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *APIGroupChoice_VesIoInfraMonitorWrite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *APIGroupChoice_VesIoInfrastructureRead) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *APIGroupChoice_VesIoInfrastructureWrite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *APIGroupChoice_VesIoInternalRead) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *APIGroupChoice_VesIoInternalWrite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *APIGroupChoice_VesIoK8SRead) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *APIGroupChoice_VesIoK8SWrite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *APIGroupChoice_VesIoLabelsRead) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoLabelsWrite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoLocalK8SWrite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoMonitorRead) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoMonitorWrite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoNetworkRead) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoNetworkWrite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoProxyMonitorRead) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoProxyMonitorWrite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoProxyRead) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoProxySecurityRead) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoProxySecurityWrite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoProxyWafRead) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoProxyWafWrite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoProxyWrite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoSecretsRead) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoSecretsWrite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoUamAdminRead) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoUamAdminWrite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoUamRead) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoUamWrite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoVirtualSitesRead) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoVirtualSitesWrite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoVoltShareRead) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoVoltShareWrite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoWebAccessRead) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoWebAccessWrite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoTenantOwnerRead) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoTenantOwnerWrite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoStoredObjectRead) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VesIoStoredObjectWrite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VoltconsoleShapeBotRead) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VoltconsoleShapeBotWrite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VoltconsoleShapeBotAdmin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VoltconsoleShapeBotSubscriptionMgmt) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VoltconsoleShapeRecognizeRead) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VoltconsoleShapeRecognizeWrite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VoltconsoleShapeRecognizeAdmin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VoltconsoleShapeRecognizeSubscriptionMgmt) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VoltconsoleAidataBfdpRead) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VoltconsoleAidataBfdpWrite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VoltconsoleAidataBfdpAdmin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VoltconsoleAidataBfdpSubscriptionMgmt) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VoltconsoleSyntheticMonitorRead) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VoltconsoleSyntheticMonitorWrite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VoltconsoleTenantMgmtRead) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VoltconsoleTenantMgmtWrite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VoltconsoleTenantMgmtAdmin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VoltconsoleTenantMgmtSubscriptionMgmt) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VoltconsoleScimClientWrite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VoltconsoleScimClientRead) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VoltconsoleScimAdmin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VoltconsoleScimSubscriptionMgmt) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VoltconsoleNginxMgmtSuiteRead) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VoltconsoleNginxMgmtSuiteWrite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VoltconsoleNginxMgmtSuiteAdmin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VoltconsoleNginxMgmtSuiteSubscriptionMgmt) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VoltconsoleCdnRead) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VoltconsoleCdnWrite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VoltconsoleCdnAdmin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *APIGroupChoice_VoltconsoleCdnSubscriptionMgmt) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}

func sovAllApiGroups(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozAllApiGroups(x uint64) (n int) {
	return sovAllApiGroups(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *APIGroupChoice) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice{`,
		`Choice:` + fmt.Sprintf("%v", this.Choice) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_InfrastructureDemoAccessRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_InfrastructureDemoAccessRead{`,
		`InfrastructureDemoAccessRead:` + fmt.Sprintf("%v", this.InfrastructureDemoAccessRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoBillingRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoBillingRead{`,
		`VesIoBillingRead:` + fmt.Sprintf("%v", this.VesIoBillingRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoBillingWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoBillingWrite{`,
		`VesIoBillingWrite:` + fmt.Sprintf("%v", this.VesIoBillingWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoGeneralRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoGeneralRead{`,
		`VesIoGeneralRead:` + fmt.Sprintf("%v", this.VesIoGeneralRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoGeneralWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoGeneralWrite{`,
		`VesIoGeneralWrite:` + fmt.Sprintf("%v", this.VesIoGeneralWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoIaasCaasRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoIaasCaasRead{`,
		`VesIoIaasCaasRead:` + fmt.Sprintf("%v", this.VesIoIaasCaasRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoIaasCaasWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoIaasCaasWrite{`,
		`VesIoIaasCaasWrite:` + fmt.Sprintf("%v", this.VesIoIaasCaasWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoInfraMonitorRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoInfraMonitorRead{`,
		`VesIoInfraMonitorRead:` + fmt.Sprintf("%v", this.VesIoInfraMonitorRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoInfraMonitorWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoInfraMonitorWrite{`,
		`VesIoInfraMonitorWrite:` + fmt.Sprintf("%v", this.VesIoInfraMonitorWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoInfrastructureRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoInfrastructureRead{`,
		`VesIoInfrastructureRead:` + fmt.Sprintf("%v", this.VesIoInfrastructureRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoInfrastructureWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoInfrastructureWrite{`,
		`VesIoInfrastructureWrite:` + fmt.Sprintf("%v", this.VesIoInfrastructureWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoInternalRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoInternalRead{`,
		`VesIoInternalRead:` + fmt.Sprintf("%v", this.VesIoInternalRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoInternalWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoInternalWrite{`,
		`VesIoInternalWrite:` + fmt.Sprintf("%v", this.VesIoInternalWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoK8SRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoK8SRead{`,
		`VesIoK8SRead:` + fmt.Sprintf("%v", this.VesIoK8SRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoK8SWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoK8SWrite{`,
		`VesIoK8SWrite:` + fmt.Sprintf("%v", this.VesIoK8SWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoLabelsRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoLabelsRead{`,
		`VesIoLabelsRead:` + fmt.Sprintf("%v", this.VesIoLabelsRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoLabelsWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoLabelsWrite{`,
		`VesIoLabelsWrite:` + fmt.Sprintf("%v", this.VesIoLabelsWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoLocalK8SWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoLocalK8SWrite{`,
		`VesIoLocalK8SWrite:` + fmt.Sprintf("%v", this.VesIoLocalK8SWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoMonitorRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoMonitorRead{`,
		`VesIoMonitorRead:` + fmt.Sprintf("%v", this.VesIoMonitorRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoMonitorWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoMonitorWrite{`,
		`VesIoMonitorWrite:` + fmt.Sprintf("%v", this.VesIoMonitorWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoNetworkRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoNetworkRead{`,
		`VesIoNetworkRead:` + fmt.Sprintf("%v", this.VesIoNetworkRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoNetworkWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoNetworkWrite{`,
		`VesIoNetworkWrite:` + fmt.Sprintf("%v", this.VesIoNetworkWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoProxyMonitorRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoProxyMonitorRead{`,
		`VesIoProxyMonitorRead:` + fmt.Sprintf("%v", this.VesIoProxyMonitorRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoProxyMonitorWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoProxyMonitorWrite{`,
		`VesIoProxyMonitorWrite:` + fmt.Sprintf("%v", this.VesIoProxyMonitorWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoProxyRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoProxyRead{`,
		`VesIoProxyRead:` + fmt.Sprintf("%v", this.VesIoProxyRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoProxySecurityRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoProxySecurityRead{`,
		`VesIoProxySecurityRead:` + fmt.Sprintf("%v", this.VesIoProxySecurityRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoProxySecurityWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoProxySecurityWrite{`,
		`VesIoProxySecurityWrite:` + fmt.Sprintf("%v", this.VesIoProxySecurityWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoProxyWafRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoProxyWafRead{`,
		`VesIoProxyWafRead:` + fmt.Sprintf("%v", this.VesIoProxyWafRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoProxyWafWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoProxyWafWrite{`,
		`VesIoProxyWafWrite:` + fmt.Sprintf("%v", this.VesIoProxyWafWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoProxyWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoProxyWrite{`,
		`VesIoProxyWrite:` + fmt.Sprintf("%v", this.VesIoProxyWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoSecretsRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoSecretsRead{`,
		`VesIoSecretsRead:` + fmt.Sprintf("%v", this.VesIoSecretsRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoSecretsWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoSecretsWrite{`,
		`VesIoSecretsWrite:` + fmt.Sprintf("%v", this.VesIoSecretsWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoUamAdminRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoUamAdminRead{`,
		`VesIoUamAdminRead:` + fmt.Sprintf("%v", this.VesIoUamAdminRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoUamAdminWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoUamAdminWrite{`,
		`VesIoUamAdminWrite:` + fmt.Sprintf("%v", this.VesIoUamAdminWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoUamRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoUamRead{`,
		`VesIoUamRead:` + fmt.Sprintf("%v", this.VesIoUamRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoUamWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoUamWrite{`,
		`VesIoUamWrite:` + fmt.Sprintf("%v", this.VesIoUamWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoVirtualSitesRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoVirtualSitesRead{`,
		`VesIoVirtualSitesRead:` + fmt.Sprintf("%v", this.VesIoVirtualSitesRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoVirtualSitesWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoVirtualSitesWrite{`,
		`VesIoVirtualSitesWrite:` + fmt.Sprintf("%v", this.VesIoVirtualSitesWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoVoltShareRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoVoltShareRead{`,
		`VesIoVoltShareRead:` + fmt.Sprintf("%v", this.VesIoVoltShareRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoVoltShareWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoVoltShareWrite{`,
		`VesIoVoltShareWrite:` + fmt.Sprintf("%v", this.VesIoVoltShareWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoWebAccessRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoWebAccessRead{`,
		`VesIoWebAccessRead:` + fmt.Sprintf("%v", this.VesIoWebAccessRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoWebAccessWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoWebAccessWrite{`,
		`VesIoWebAccessWrite:` + fmt.Sprintf("%v", this.VesIoWebAccessWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoTenantOwnerRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoTenantOwnerRead{`,
		`VesIoTenantOwnerRead:` + fmt.Sprintf("%v", this.VesIoTenantOwnerRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoTenantOwnerWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoTenantOwnerWrite{`,
		`VesIoTenantOwnerWrite:` + fmt.Sprintf("%v", this.VesIoTenantOwnerWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoStoredObjectRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoStoredObjectRead{`,
		`VesIoStoredObjectRead:` + fmt.Sprintf("%v", this.VesIoStoredObjectRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VesIoStoredObjectWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VesIoStoredObjectWrite{`,
		`VesIoStoredObjectWrite:` + fmt.Sprintf("%v", this.VesIoStoredObjectWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VoltconsoleShapeBotRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VoltconsoleShapeBotRead{`,
		`VoltconsoleShapeBotRead:` + fmt.Sprintf("%v", this.VoltconsoleShapeBotRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VoltconsoleShapeBotWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VoltconsoleShapeBotWrite{`,
		`VoltconsoleShapeBotWrite:` + fmt.Sprintf("%v", this.VoltconsoleShapeBotWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VoltconsoleShapeBotAdmin) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VoltconsoleShapeBotAdmin{`,
		`VoltconsoleShapeBotAdmin:` + fmt.Sprintf("%v", this.VoltconsoleShapeBotAdmin) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VoltconsoleShapeBotSubscriptionMgmt) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VoltconsoleShapeBotSubscriptionMgmt{`,
		`VoltconsoleShapeBotSubscriptionMgmt:` + fmt.Sprintf("%v", this.VoltconsoleShapeBotSubscriptionMgmt) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VoltconsoleShapeRecognizeRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VoltconsoleShapeRecognizeRead{`,
		`VoltconsoleShapeRecognizeRead:` + fmt.Sprintf("%v", this.VoltconsoleShapeRecognizeRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VoltconsoleShapeRecognizeWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VoltconsoleShapeRecognizeWrite{`,
		`VoltconsoleShapeRecognizeWrite:` + fmt.Sprintf("%v", this.VoltconsoleShapeRecognizeWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VoltconsoleShapeRecognizeAdmin) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VoltconsoleShapeRecognizeAdmin{`,
		`VoltconsoleShapeRecognizeAdmin:` + fmt.Sprintf("%v", this.VoltconsoleShapeRecognizeAdmin) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VoltconsoleShapeRecognizeSubscriptionMgmt) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VoltconsoleShapeRecognizeSubscriptionMgmt{`,
		`VoltconsoleShapeRecognizeSubscriptionMgmt:` + fmt.Sprintf("%v", this.VoltconsoleShapeRecognizeSubscriptionMgmt) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VoltconsoleAidataBfdpRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VoltconsoleAidataBfdpRead{`,
		`VoltconsoleAidataBfdpRead:` + fmt.Sprintf("%v", this.VoltconsoleAidataBfdpRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VoltconsoleAidataBfdpWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VoltconsoleAidataBfdpWrite{`,
		`VoltconsoleAidataBfdpWrite:` + fmt.Sprintf("%v", this.VoltconsoleAidataBfdpWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VoltconsoleAidataBfdpAdmin) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VoltconsoleAidataBfdpAdmin{`,
		`VoltconsoleAidataBfdpAdmin:` + fmt.Sprintf("%v", this.VoltconsoleAidataBfdpAdmin) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VoltconsoleAidataBfdpSubscriptionMgmt) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VoltconsoleAidataBfdpSubscriptionMgmt{`,
		`VoltconsoleAidataBfdpSubscriptionMgmt:` + fmt.Sprintf("%v", this.VoltconsoleAidataBfdpSubscriptionMgmt) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VoltconsoleSyntheticMonitorRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VoltconsoleSyntheticMonitorRead{`,
		`VoltconsoleSyntheticMonitorRead:` + fmt.Sprintf("%v", this.VoltconsoleSyntheticMonitorRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VoltconsoleSyntheticMonitorWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VoltconsoleSyntheticMonitorWrite{`,
		`VoltconsoleSyntheticMonitorWrite:` + fmt.Sprintf("%v", this.VoltconsoleSyntheticMonitorWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VoltconsoleTenantMgmtRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VoltconsoleTenantMgmtRead{`,
		`VoltconsoleTenantMgmtRead:` + fmt.Sprintf("%v", this.VoltconsoleTenantMgmtRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VoltconsoleTenantMgmtWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VoltconsoleTenantMgmtWrite{`,
		`VoltconsoleTenantMgmtWrite:` + fmt.Sprintf("%v", this.VoltconsoleTenantMgmtWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VoltconsoleTenantMgmtAdmin) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VoltconsoleTenantMgmtAdmin{`,
		`VoltconsoleTenantMgmtAdmin:` + fmt.Sprintf("%v", this.VoltconsoleTenantMgmtAdmin) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VoltconsoleTenantMgmtSubscriptionMgmt) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VoltconsoleTenantMgmtSubscriptionMgmt{`,
		`VoltconsoleTenantMgmtSubscriptionMgmt:` + fmt.Sprintf("%v", this.VoltconsoleTenantMgmtSubscriptionMgmt) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VoltconsoleScimClientWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VoltconsoleScimClientWrite{`,
		`VoltconsoleScimClientWrite:` + fmt.Sprintf("%v", this.VoltconsoleScimClientWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VoltconsoleScimClientRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VoltconsoleScimClientRead{`,
		`VoltconsoleScimClientRead:` + fmt.Sprintf("%v", this.VoltconsoleScimClientRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VoltconsoleScimAdmin) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VoltconsoleScimAdmin{`,
		`VoltconsoleScimAdmin:` + fmt.Sprintf("%v", this.VoltconsoleScimAdmin) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VoltconsoleScimSubscriptionMgmt) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VoltconsoleScimSubscriptionMgmt{`,
		`VoltconsoleScimSubscriptionMgmt:` + fmt.Sprintf("%v", this.VoltconsoleScimSubscriptionMgmt) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VoltconsoleNginxMgmtSuiteRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VoltconsoleNginxMgmtSuiteRead{`,
		`VoltconsoleNginxMgmtSuiteRead:` + fmt.Sprintf("%v", this.VoltconsoleNginxMgmtSuiteRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VoltconsoleNginxMgmtSuiteWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VoltconsoleNginxMgmtSuiteWrite{`,
		`VoltconsoleNginxMgmtSuiteWrite:` + fmt.Sprintf("%v", this.VoltconsoleNginxMgmtSuiteWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VoltconsoleNginxMgmtSuiteAdmin) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VoltconsoleNginxMgmtSuiteAdmin{`,
		`VoltconsoleNginxMgmtSuiteAdmin:` + fmt.Sprintf("%v", this.VoltconsoleNginxMgmtSuiteAdmin) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VoltconsoleNginxMgmtSuiteSubscriptionMgmt) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VoltconsoleNginxMgmtSuiteSubscriptionMgmt{`,
		`VoltconsoleNginxMgmtSuiteSubscriptionMgmt:` + fmt.Sprintf("%v", this.VoltconsoleNginxMgmtSuiteSubscriptionMgmt) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VoltconsoleCdnRead) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VoltconsoleCdnRead{`,
		`VoltconsoleCdnRead:` + fmt.Sprintf("%v", this.VoltconsoleCdnRead) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VoltconsoleCdnWrite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VoltconsoleCdnWrite{`,
		`VoltconsoleCdnWrite:` + fmt.Sprintf("%v", this.VoltconsoleCdnWrite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VoltconsoleCdnAdmin) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VoltconsoleCdnAdmin{`,
		`VoltconsoleCdnAdmin:` + fmt.Sprintf("%v", this.VoltconsoleCdnAdmin) + `,`,
		`}`,
	}, "")
	return s
}
func (this *APIGroupChoice_VoltconsoleCdnSubscriptionMgmt) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&APIGroupChoice_VoltconsoleCdnSubscriptionMgmt{`,
		`VoltconsoleCdnSubscriptionMgmt:` + fmt.Sprintf("%v", this.VoltconsoleCdnSubscriptionMgmt) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringAllApiGroups(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *APIGroupChoice) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAllApiGroups
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: APIGroupChoice: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: APIGroupChoice: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InfrastructureDemoAccessRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_InfrastructureDemoAccessRead{b}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoBillingRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoBillingRead{b}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoBillingWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoBillingWrite{b}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoGeneralRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoGeneralRead{b}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoGeneralWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoGeneralWrite{b}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoIaasCaasRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoIaasCaasRead{b}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoIaasCaasWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoIaasCaasWrite{b}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoInfraMonitorRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoInfraMonitorRead{b}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoInfraMonitorWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoInfraMonitorWrite{b}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoInfrastructureRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoInfrastructureRead{b}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoInfrastructureWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoInfrastructureWrite{b}
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoInternalRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoInternalRead{b}
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoInternalWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoInternalWrite{b}
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoK8SRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoK8SRead{b}
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoK8SWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoK8SWrite{b}
		case 16:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoLabelsRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoLabelsRead{b}
		case 17:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoLabelsWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoLabelsWrite{b}
		case 18:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoLocalK8SWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoLocalK8SWrite{b}
		case 19:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoMonitorRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoMonitorRead{b}
		case 20:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoMonitorWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoMonitorWrite{b}
		case 21:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoNetworkRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoNetworkRead{b}
		case 22:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoNetworkWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoNetworkWrite{b}
		case 23:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoProxyMonitorRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoProxyMonitorRead{b}
		case 24:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoProxyMonitorWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoProxyMonitorWrite{b}
		case 25:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoProxyRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoProxyRead{b}
		case 26:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoProxySecurityRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoProxySecurityRead{b}
		case 27:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoProxySecurityWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoProxySecurityWrite{b}
		case 28:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoProxyWafRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoProxyWafRead{b}
		case 29:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoProxyWafWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoProxyWafWrite{b}
		case 30:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoProxyWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoProxyWrite{b}
		case 31:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoSecretsRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoSecretsRead{b}
		case 32:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoSecretsWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoSecretsWrite{b}
		case 35:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoUamAdminRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoUamAdminRead{b}
		case 36:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoUamAdminWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoUamAdminWrite{b}
		case 37:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoUamRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoUamRead{b}
		case 38:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoUamWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoUamWrite{b}
		case 39:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoVirtualSitesRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoVirtualSitesRead{b}
		case 40:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoVirtualSitesWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoVirtualSitesWrite{b}
		case 41:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoVoltShareRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoVoltShareRead{b}
		case 42:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoVoltShareWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoVoltShareWrite{b}
		case 43:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoWebAccessRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoWebAccessRead{b}
		case 44:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoWebAccessWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoWebAccessWrite{b}
		case 45:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoTenantOwnerRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoTenantOwnerRead{b}
		case 46:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoTenantOwnerWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoTenantOwnerWrite{b}
		case 47:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoStoredObjectRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoStoredObjectRead{b}
		case 48:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoStoredObjectWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VesIoStoredObjectWrite{b}
		case 49:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoltconsoleShapeBotRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VoltconsoleShapeBotRead{b}
		case 50:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoltconsoleShapeBotWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VoltconsoleShapeBotWrite{b}
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoltconsoleShapeBotAdmin", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VoltconsoleShapeBotAdmin{b}
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoltconsoleShapeBotSubscriptionMgmt", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VoltconsoleShapeBotSubscriptionMgmt{b}
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoltconsoleShapeRecognizeRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VoltconsoleShapeRecognizeRead{b}
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoltconsoleShapeRecognizeWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VoltconsoleShapeRecognizeWrite{b}
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoltconsoleShapeRecognizeAdmin", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VoltconsoleShapeRecognizeAdmin{b}
		case 56:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoltconsoleShapeRecognizeSubscriptionMgmt", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VoltconsoleShapeRecognizeSubscriptionMgmt{b}
		case 57:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoltconsoleAidataBfdpRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VoltconsoleAidataBfdpRead{b}
		case 58:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoltconsoleAidataBfdpWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VoltconsoleAidataBfdpWrite{b}
		case 59:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoltconsoleAidataBfdpAdmin", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VoltconsoleAidataBfdpAdmin{b}
		case 60:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoltconsoleAidataBfdpSubscriptionMgmt", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VoltconsoleAidataBfdpSubscriptionMgmt{b}
		case 61:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoltconsoleSyntheticMonitorRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VoltconsoleSyntheticMonitorRead{b}
		case 62:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoltconsoleSyntheticMonitorWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VoltconsoleSyntheticMonitorWrite{b}
		case 65:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoltconsoleTenantMgmtRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VoltconsoleTenantMgmtRead{b}
		case 66:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoltconsoleTenantMgmtWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VoltconsoleTenantMgmtWrite{b}
		case 67:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoltconsoleTenantMgmtAdmin", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VoltconsoleTenantMgmtAdmin{b}
		case 68:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoltconsoleTenantMgmtSubscriptionMgmt", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VoltconsoleTenantMgmtSubscriptionMgmt{b}
		case 69:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoltconsoleScimClientWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VoltconsoleScimClientWrite{b}
		case 70:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoltconsoleScimClientRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VoltconsoleScimClientRead{b}
		case 71:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoltconsoleScimAdmin", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VoltconsoleScimAdmin{b}
		case 72:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoltconsoleScimSubscriptionMgmt", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VoltconsoleScimSubscriptionMgmt{b}
		case 73:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoltconsoleNginxMgmtSuiteRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VoltconsoleNginxMgmtSuiteRead{b}
		case 74:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoltconsoleNginxMgmtSuiteWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VoltconsoleNginxMgmtSuiteWrite{b}
		case 79:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoltconsoleNginxMgmtSuiteAdmin", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VoltconsoleNginxMgmtSuiteAdmin{b}
		case 80:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoltconsoleNginxMgmtSuiteSubscriptionMgmt", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VoltconsoleNginxMgmtSuiteSubscriptionMgmt{b}
		case 85:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoltconsoleCdnRead", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VoltconsoleCdnRead{b}
		case 86:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoltconsoleCdnWrite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VoltconsoleCdnWrite{b}
		case 87:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoltconsoleCdnAdmin", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VoltconsoleCdnAdmin{b}
		case 88:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoltconsoleCdnSubscriptionMgmt", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &APIGroupChoice_VoltconsoleCdnSubscriptionMgmt{b}
		default:
			iNdEx = preIndex
			skippy, err := skipAllApiGroups(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAllApiGroups
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthAllApiGroups
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipAllApiGroups(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowAllApiGroups
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAllApiGroups
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthAllApiGroups
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupAllApiGroups
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthAllApiGroups
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthAllApiGroups        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowAllApiGroups          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupAllApiGroups = fmt.Errorf("proto: unexpected end of group")
)
