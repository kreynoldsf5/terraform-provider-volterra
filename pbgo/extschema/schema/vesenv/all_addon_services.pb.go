// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ves.io/schema/vesenv/all_addon_services.proto

package vesenv

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// AddonServiceChoice enumerates all the well-known addon_service.Objects in a VES environment
type AddonServiceChoice struct {
	// Types that are valid to be assigned to Choice:
	//	*AddonServiceChoice_F5XcBase
	//	*AddonServiceChoice_VesIoVolterraDefault
	//	*AddonServiceChoice_VesIoTenantManagement
	//	*AddonServiceChoice_VesIoSupportManagement
	//	*AddonServiceChoice_VesIoScim
	//	*AddonServiceChoice_ShapeBot
	//	*AddonServiceChoice_ShapeRecognize
	//	*AddonServiceChoice_AidataBfdp
	//	*AddonServiceChoice_LilacCdn
	//	*AddonServiceChoice_NginxMgmtSuite
	//	*AddonServiceChoice_SyntheticMonitor
	//	*AddonServiceChoice_Safeap
	//	*AddonServiceChoice_AipConnector
	//	*AddonServiceChoice_ClientSideDefense
	Choice isAddonServiceChoice_Choice `protobuf_oneof:"choice"`
}

func (m *AddonServiceChoice) Reset()      { *m = AddonServiceChoice{} }
func (*AddonServiceChoice) ProtoMessage() {}
func (*AddonServiceChoice) Descriptor() ([]byte, []int) {
	return fileDescriptor_24b1043c1548ccb0, []int{0}
}
func (m *AddonServiceChoice) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AddonServiceChoice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AddonServiceChoice.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AddonServiceChoice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddonServiceChoice.Merge(m, src)
}
func (m *AddonServiceChoice) XXX_Size() int {
	return m.Size()
}
func (m *AddonServiceChoice) XXX_DiscardUnknown() {
	xxx_messageInfo_AddonServiceChoice.DiscardUnknown(m)
}

var xxx_messageInfo_AddonServiceChoice proto.InternalMessageInfo

type isAddonServiceChoice_Choice interface {
	isAddonServiceChoice_Choice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type AddonServiceChoice_F5XcBase struct {
	F5XcBase bool `protobuf:"varint,1,opt,name=f5xc_base,json=f5xcBase,proto3,oneof" json:"f5xc_base,omitempty"`
}
type AddonServiceChoice_VesIoVolterraDefault struct {
	VesIoVolterraDefault bool `protobuf:"varint,21,opt,name=ves_io_volterra_default,json=vesIoVolterraDefault,proto3,oneof" json:"ves_io_volterra_default,omitempty"`
}
type AddonServiceChoice_VesIoTenantManagement struct {
	VesIoTenantManagement bool `protobuf:"varint,22,opt,name=ves_io_tenant_management,json=vesIoTenantManagement,proto3,oneof" json:"ves_io_tenant_management,omitempty"`
}
type AddonServiceChoice_VesIoSupportManagement struct {
	VesIoSupportManagement bool `protobuf:"varint,3,opt,name=ves_io_support_management,json=vesIoSupportManagement,proto3,oneof" json:"ves_io_support_management,omitempty"`
}
type AddonServiceChoice_VesIoScim struct {
	VesIoScim bool `protobuf:"varint,23,opt,name=ves_io_scim,json=vesIoScim,proto3,oneof" json:"ves_io_scim,omitempty"`
}
type AddonServiceChoice_ShapeBot struct {
	ShapeBot bool `protobuf:"varint,50,opt,name=shape_bot,json=shapeBot,proto3,oneof" json:"shape_bot,omitempty"`
}
type AddonServiceChoice_ShapeRecognize struct {
	ShapeRecognize bool `protobuf:"varint,51,opt,name=shape_recognize,json=shapeRecognize,proto3,oneof" json:"shape_recognize,omitempty"`
}
type AddonServiceChoice_AidataBfdp struct {
	AidataBfdp bool `protobuf:"varint,52,opt,name=aidata_bfdp,json=aidataBfdp,proto3,oneof" json:"aidata_bfdp,omitempty"`
}
type AddonServiceChoice_LilacCdn struct {
	LilacCdn bool `protobuf:"varint,53,opt,name=lilac_cdn,json=lilacCdn,proto3,oneof" json:"lilac_cdn,omitempty"`
}
type AddonServiceChoice_NginxMgmtSuite struct {
	NginxMgmtSuite bool `protobuf:"varint,54,opt,name=nginx_mgmt_suite,json=nginxMgmtSuite,proto3,oneof" json:"nginx_mgmt_suite,omitempty"`
}
type AddonServiceChoice_SyntheticMonitor struct {
	SyntheticMonitor bool `protobuf:"varint,55,opt,name=synthetic_monitor,json=syntheticMonitor,proto3,oneof" json:"synthetic_monitor,omitempty"`
}
type AddonServiceChoice_Safeap struct {
	Safeap bool `protobuf:"varint,56,opt,name=safeap,proto3,oneof" json:"safeap,omitempty"`
}
type AddonServiceChoice_AipConnector struct {
	AipConnector bool `protobuf:"varint,57,opt,name=aip_connector,json=aipConnector,proto3,oneof" json:"aip_connector,omitempty"`
}
type AddonServiceChoice_ClientSideDefense struct {
	ClientSideDefense bool `protobuf:"varint,58,opt,name=client_side_defense,json=clientSideDefense,proto3,oneof" json:"client_side_defense,omitempty"`
}

func (*AddonServiceChoice_F5XcBase) isAddonServiceChoice_Choice()               {}
func (*AddonServiceChoice_VesIoVolterraDefault) isAddonServiceChoice_Choice()   {}
func (*AddonServiceChoice_VesIoTenantManagement) isAddonServiceChoice_Choice()  {}
func (*AddonServiceChoice_VesIoSupportManagement) isAddonServiceChoice_Choice() {}
func (*AddonServiceChoice_VesIoScim) isAddonServiceChoice_Choice()              {}
func (*AddonServiceChoice_ShapeBot) isAddonServiceChoice_Choice()               {}
func (*AddonServiceChoice_ShapeRecognize) isAddonServiceChoice_Choice()         {}
func (*AddonServiceChoice_AidataBfdp) isAddonServiceChoice_Choice()             {}
func (*AddonServiceChoice_LilacCdn) isAddonServiceChoice_Choice()               {}
func (*AddonServiceChoice_NginxMgmtSuite) isAddonServiceChoice_Choice()         {}
func (*AddonServiceChoice_SyntheticMonitor) isAddonServiceChoice_Choice()       {}
func (*AddonServiceChoice_Safeap) isAddonServiceChoice_Choice()                 {}
func (*AddonServiceChoice_AipConnector) isAddonServiceChoice_Choice()           {}
func (*AddonServiceChoice_ClientSideDefense) isAddonServiceChoice_Choice()      {}

func (m *AddonServiceChoice) GetChoice() isAddonServiceChoice_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (m *AddonServiceChoice) GetF5XcBase() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_F5XcBase); ok {
		return x.F5XcBase
	}
	return false
}

func (m *AddonServiceChoice) GetVesIoVolterraDefault() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_VesIoVolterraDefault); ok {
		return x.VesIoVolterraDefault
	}
	return false
}

func (m *AddonServiceChoice) GetVesIoTenantManagement() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_VesIoTenantManagement); ok {
		return x.VesIoTenantManagement
	}
	return false
}

func (m *AddonServiceChoice) GetVesIoSupportManagement() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_VesIoSupportManagement); ok {
		return x.VesIoSupportManagement
	}
	return false
}

func (m *AddonServiceChoice) GetVesIoScim() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_VesIoScim); ok {
		return x.VesIoScim
	}
	return false
}

func (m *AddonServiceChoice) GetShapeBot() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_ShapeBot); ok {
		return x.ShapeBot
	}
	return false
}

func (m *AddonServiceChoice) GetShapeRecognize() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_ShapeRecognize); ok {
		return x.ShapeRecognize
	}
	return false
}

func (m *AddonServiceChoice) GetAidataBfdp() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_AidataBfdp); ok {
		return x.AidataBfdp
	}
	return false
}

func (m *AddonServiceChoice) GetLilacCdn() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_LilacCdn); ok {
		return x.LilacCdn
	}
	return false
}

func (m *AddonServiceChoice) GetNginxMgmtSuite() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_NginxMgmtSuite); ok {
		return x.NginxMgmtSuite
	}
	return false
}

func (m *AddonServiceChoice) GetSyntheticMonitor() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_SyntheticMonitor); ok {
		return x.SyntheticMonitor
	}
	return false
}

func (m *AddonServiceChoice) GetSafeap() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_Safeap); ok {
		return x.Safeap
	}
	return false
}

func (m *AddonServiceChoice) GetAipConnector() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_AipConnector); ok {
		return x.AipConnector
	}
	return false
}

func (m *AddonServiceChoice) GetClientSideDefense() bool {
	if x, ok := m.GetChoice().(*AddonServiceChoice_ClientSideDefense); ok {
		return x.ClientSideDefense
	}
	return false
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*AddonServiceChoice) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*AddonServiceChoice_F5XcBase)(nil),
		(*AddonServiceChoice_VesIoVolterraDefault)(nil),
		(*AddonServiceChoice_VesIoTenantManagement)(nil),
		(*AddonServiceChoice_VesIoSupportManagement)(nil),
		(*AddonServiceChoice_VesIoScim)(nil),
		(*AddonServiceChoice_ShapeBot)(nil),
		(*AddonServiceChoice_ShapeRecognize)(nil),
		(*AddonServiceChoice_AidataBfdp)(nil),
		(*AddonServiceChoice_LilacCdn)(nil),
		(*AddonServiceChoice_NginxMgmtSuite)(nil),
		(*AddonServiceChoice_SyntheticMonitor)(nil),
		(*AddonServiceChoice_Safeap)(nil),
		(*AddonServiceChoice_AipConnector)(nil),
		(*AddonServiceChoice_ClientSideDefense)(nil),
	}
}

func init() {
	proto.RegisterType((*AddonServiceChoice)(nil), "ves.io.schema.vesenv.AddonServiceChoice")
}

func init() {
	proto.RegisterFile("ves.io/schema/vesenv/all_addon_services.proto", fileDescriptor_24b1043c1548ccb0)
}

var fileDescriptor_24b1043c1548ccb0 = []byte{
	// 1335 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x96, 0xbd, 0x8f, 0xdc, 0x44,
	0x18, 0xc6, 0xd7, 0x4a, 0x74, 0xe4, 0x9c, 0x40, 0x72, 0x4e, 0x72, 0x99, 0x04, 0x58, 0xad, 0xc2,
	0x06, 0x05, 0xa4, 0xf7, 0xce, 0x9f, 0x63, 0x0f, 0x54, 0xb7, 0x17, 0x91, 0x3d, 0xe0, 0xa2, 0x68,
	0x0f, 0xf1, 0x25, 0xc4, 0x6a, 0xbe, 0xbc, 0xe7, 0x64, 0xd7, 0x5e, 0xad, 0x7d, 0x4b, 0x12, 0x84,
	0x94, 0x9e, 0x06, 0xd1, 0x51, 0xd1, 0x50, 0xa4, 0xa7, 0x74, 0xb7, 0x15, 0x65, 0xb4, 0x55, 0x24,
	0x1a, 0x72, 0x69, 0x28, 0xf3, 0x27, 0xa0, 0x19, 0x7b, 0xf7, 0xee, 0xa2, 0x14, 0x74, 0xd6, 0xfb,
	0x3c, 0xf3, 0xbc, 0x3f, 0xcd, 0xbc, 0xf6, 0xd8, 0x84, 0xa9, 0xcc, 0x37, 0x92, 0x6c, 0x33, 0xe7,
	0xfb, 0x72, 0x44, 0x37, 0xa7, 0x32, 0x97, 0xe9, 0x74, 0x93, 0x0e, 0x87, 0x7d, 0x2a, 0x44, 0x96,
	0xf6, 0x73, 0x39, 0x99, 0x26, 0x5c, 0xe6, 0x1b, 0xe3, 0x49, 0x56, 0x64, 0xd6, 0xa5, 0xca, 0xbe,
	0x51, 0xd9, 0x37, 0x2a, 0xfb, 0xb5, 0xeb, 0xaf, 0x0d, 0xc9, 0xc6, 0x45, 0x92, 0xa5, 0xf5, 0xca,
	0xeb, 0x7f, 0x9f, 0x37, 0xad, 0x2d, 0x15, 0xb9, 0x57, 0x25, 0x6e, 0xef, 0x67, 0x09, 0x97, 0xd6,
	0x4f, 0xe6, 0x6a, 0x1c, 0x3c, 0xe0, 0x7d, 0x46, 0x73, 0x89, 0x8c, 0x96, 0x71, 0xf3, 0x4c, 0xe7,
	0xfb, 0x59, 0x89, 0x48, 0x55, 0x06, 0x55, 0xb6, 0xda, 0x91, 0x70, 0x1c, 0x2e, 0x02, 0x09, 0x98,
	0x50, 0x06, 0xbe, 0x4f, 0x25, 0x50, 0x62, 0x47, 0xe0, 0x46, 0x71, 0x8c, 0x85, 0xe7, 0x3b, 0x1c,
	0xfb, 0xd7, 0x56, 0xf2, 0x87, 0x79, 0x21, 0x47, 0xf3, 0x12, 0xbd, 0x6b, 0x9e, 0x9a, 0xca, 0xdc,
	0x5a, 0xff, 0x32, 0x1b, 0x16, 0x72, 0x32, 0xa1, 0xad, 0x0e, 0xcd, 0x65, 0xab, 0xee, 0x9b, 0x77,
	0x1b, 0xbd, 0x33, 0x2a, 0x5b, 0x15, 0xad, 0x27, 0x86, 0x79, 0x65, 0x2a, 0xf3, 0x7e, 0x92, 0xf5,
	0xa7, 0xb5, 0xbb, 0x2f, 0x64, 0x4c, 0x0f, 0x86, 0x05, 0xba, 0xac, 0x69, 0xb2, 0x59, 0x89, 0x6e,
	0x6b, 0x13, 0x24, 0x19, 0x2c, 0x4c, 0x50, 0x9b, 0xac, 0x76, 0x48, 0x43, 0x2a, 0x58, 0x14, 0x00,
	0xc6, 0xcc, 0x01, 0x5f, 0x38, 0x1e, 0x30, 0x16, 0x52, 0x70, 0xb8, 0x0c, 0x23, 0x12, 0xda, 0x11,
	0xc6, 0xf6, 0x31, 0xb6, 0x56, 0xc5, 0x76, 0x75, 0xc9, 0x76, 0xab, 0x0a, 0x3a, 0x8e, 0xa7, 0x36,
	0x79, 0x27, 0x5b, 0x38, 0x6a, 0x83, 0xf5, 0x87, 0x61, 0xa2, 0x1a, 0xb5, 0x90, 0x29, 0x4d, 0x8b,
	0xfe, 0x88, 0xa6, 0x74, 0x20, 0x47, 0x32, 0x2d, 0xd0, 0xba, 0x66, 0x4d, 0x66, 0x25, 0xea, 0x6a,
	0x97, 0x62, 0xad, 0x5c, 0x70, 0xe4, 0xb2, 0xda, 0x9c, 0xfb, 0x91, 0x2d, 0x89, 0x00, 0xe2, 0x45,
	0x04, 0xfc, 0xc0, 0x26, 0x10, 0x91, 0x88, 0x03, 0x77, 0x7d, 0x47, 0x8a, 0x80, 0xc7, 0xcc, 0xc5,
	0xc7, 0x60, 0xaf, 0x9a, 0xa7, 0xe5, 0xc3, 0x1f, 0xa8, 0xb5, 0xf6, 0x85, 0x8e, 0x6a, 0xed, 0x2e,
	0xa3, 0xba, 0x8d, 0xde, 0x65, 0x4d, 0x59, 0x29, 0x47, 0x82, 0xda, 0xd1, 0xab, 0x35, 0x66, 0x7e,
	0x30, 0x1e, 0x67, 0x93, 0x13, 0x9c, 0xa7, 0x34, 0xe7, 0xfd, 0x59, 0x89, 0x76, 0xb4, 0x4d, 0x71,
	0xd6, 0xb6, 0x13, 0xa0, 0xd4, 0x95, 0x94, 0x45, 0x1e, 0x01, 0xc2, 0x43, 0x0f, 0x7c, 0x1c, 0x08,
	0x60, 0x2e, 0xb7, 0x41, 0x48, 0x4f, 0xd8, 0x42, 0x86, 0xd2, 0x8e, 0xa3, 0x63, 0xa0, 0xd7, 0x6a,
	0x50, 0x6b, 0xaf, 0xca, 0x3a, 0x49, 0xba, 0xae, 0x49, 0x6b, 0xe9, 0x18, 0xea, 0x37, 0xe6, 0xd9,
	0x05, 0x29, 0x4f, 0x46, 0xe8, 0x8a, 0x66, 0x0b, 0x67, 0x25, 0xf2, 0xb4, 0xa0, 0xd9, 0x78, 0x32,
	0x52, 0x67, 0x2c, 0x63, 0x89, 0x03, 0x0c, 0xcc, 0x16, 0x21, 0x38, 0x8e, 0xe4, 0xc0, 0x88, 0x4d,
	0xc0, 0x76, 0x7d, 0x97, 0x72, 0xc7, 0xb5, 0x6d, 0xdb, 0xed, 0x36, 0x7a, 0xab, 0x55, 0x1f, 0xb5,
	0xe4, 0x9e, 0xb9, 0x9a, 0xef, 0xd3, 0xb1, 0xec, 0xb3, 0xac, 0x40, 0xae, 0x0e, 0xfe, 0x6c, 0x56,
	0x22, 0xa7, 0x2e, 0x03, 0xcb, 0x0a, 0xab, 0x6d, 0xbb, 0x41, 0xc0, 0x7c, 0x41, 0x80, 0x44, 0x8c,
	0x80, 0xef, 0x92, 0x08, 0x48, 0xe0, 0x87, 0xe0, 0x61, 0x6c, 0xbb, 0x01, 0x8b, 0x18, 0xa3, 0x6c,
	0x5e, 0x22, 0xcb, 0x3c, 0x95, 0x4b, 0x61, 0x9d, 0xed, 0x64, 0x85, 0x9a, 0x16, 0x99, 0xe6, 0x52,
	0xcd, 0xb0, 0x0e, 0xea, 0x64, 0x85, 0xf5, 0xab, 0x61, 0x9e, 0xaf, 0x9a, 0x4d, 0x24, 0xcf, 0x06,
	0x69, 0xf2, 0x48, 0x22, 0x4f, 0xb7, 0x1c, 0xcc, 0x4a, 0x14, 0xd6, 0x22, 0x2c, 0x45, 0xab, 0x4d,
	0x38, 0xa7, 0x51, 0x8c, 0x05, 0xe0, 0x38, 0xf0, 0xc0, 0x77, 0xfc, 0x18, 0x08, 0x76, 0x29, 0x48,
	0xe6, 0xe2, 0x80, 0xdb, 0xb6, 0x1b, 0xbb, 0x78, 0x5e, 0xa2, 0x9b, 0xe6, 0xea, 0xd1, 0xa2, 0xb7,
	0xb7, 0x0e, 0x8a, 0x7d, 0x99, 0x16, 0x09, 0xa7, 0xea, 0xb5, 0x6e, 0xed, 0xa4, 0x85, 0x1c, 0x0e,
	0x93, 0x81, 0x4c, 0xb9, 0xc2, 0x79, 0x4b, 0x37, 0xe9, 0x2d, 0xed, 0x8f, 0xcc, 0xb3, 0x34, 0x11,
	0xb4, 0xa0, 0x7d, 0x16, 0x8b, 0x31, 0xf2, 0x35, 0xcf, 0x57, 0xd5, 0xde, 0x56, 0x02, 0x28, 0xc1,
	0x6a, 0x53, 0x41, 0x38, 0x77, 0x7d, 0x0f, 0x7c, 0x19, 0x30, 0xf0, 0x1d, 0xea, 0x41, 0xe4, 0x11,
	0x17, 0x3c, 0x11, 0x31, 0x97, 0x87, 0x4c, 0x30, 0xee, 0xcf, 0x4b, 0xf4, 0x8e, 0x79, 0x5a, 0xfb,
	0x2f, 0x75, 0x92, 0x41, 0xeb, 0x93, 0xa0, 0xa5, 0x12, 0x5a, 0xe3, 0x21, 0x2d, 0xe2, 0x6c, 0x32,
	0xea, 0x36, 0x7a, 0x66, 0x15, 0xda, 0x51, 0x9e, 0x1f, 0xcd, 0xd5, 0x61, 0x32, 0xa4, 0xbc, 0xcf,
	0x45, 0x8a, 0x02, 0xdd, 0xf9, 0xbb, 0x6a, 0xf3, 0x75, 0x19, 0xb8, 0x48, 0xd5, 0x37, 0x25, 0x0c,
	0x85, 0xed, 0x71, 0xe0, 0xc4, 0x8f, 0xab, 0x33, 0x25, 0x02, 0xfb, 0x27, 0xce, 0x74, 0x5e, 0xa2,
	0xf7, 0xcc, 0xf3, 0x5c, 0xa4, 0x3c, 0x4b, 0x53, 0xc9, 0x8b, 0x6c, 0x92, 0x4f, 0xb9, 0x75, 0x61,
	0xfb, 0xd6, 0x9d, 0xd6, 0xe7, 0x19, 0x15, 0x8c, 0x0e, 0x69, 0xca, 0xe5, 0x44, 0x9d, 0x86, 0x4e,
	0xde, 0x16, 0xa9, 0x3a, 0x8d, 0x0b, 0xe9, 0x20, 0x49, 0x1f, 0xf4, 0x47, 0x83, 0x51, 0xd1, 0xcf,
	0x0f, 0x92, 0x42, 0x22, 0xac, 0x21, 0xe2, 0x59, 0x89, 0xa2, 0x5a, 0x05, 0xa5, 0x82, 0x56, 0xad,
	0xb6, 0xed, 0xf8, 0xb6, 0x87, 0x29, 0x81, 0x40, 0x7a, 0x18, 0xfc, 0x28, 0x66, 0xc0, 0x42, 0xe1,
	0x00, 0xa6, 0x2e, 0x73, 0x3d, 0x1b, 0x53, 0x16, 0x84, 0xf3, 0x12, 0xbd, 0x6f, 0x9e, 0x4b, 0x47,
	0xf9, 0x92, 0xc5, 0x5a, 0xbf, 0x73, 0x7b, 0xe7, 0xce, 0xd7, 0xc7, 0x66, 0xbd, 0xb5, 0xa7, 0xf2,
	0xd4, 0x69, 0xe8, 0x1e, 0xbb, 0x83, 0x51, 0xa1, 0x2b, 0xd6, 0x6f, 0x86, 0xb9, 0x96, 0x3f, 0x4c,
	0x8b, 0x7d, 0x59, 0x24, 0xbc, 0x3f, 0xca, 0xd2, 0xa4, 0xc8, 0x26, 0x28, 0xd4, 0x54, 0xf7, 0xf4,
	0xe7, 0xf6, 0x48, 0x86, 0x5a, 0xb6, 0xda, 0x4e, 0x18, 0xdb, 0x2e, 0xe7, 0x04, 0x30, 0xc3, 0x31,
	0xf8, 0xc4, 0x66, 0x40, 0x7d, 0xea, 0x43, 0x80, 0x85, 0x8c, 0x05, 0xb5, 0xc3, 0xd8, 0xf1, 0xe6,
	0x25, 0xfa, 0xe0, 0x75, 0x8b, 0x2f, 0xed, 0x2d, 0x4a, 0xad, 0xdd, 0xaa, 0x94, 0xa4, 0x83, 0x6e,
	0xa3, 0x77, 0x61, 0x69, 0xad, 0xcb, 0x16, 0x35, 0x57, 0x72, 0x1a, 0x4b, 0x3a, 0x46, 0x91, 0xe6,
	0xb9, 0x3d, 0x2b, 0xd1, 0xc6, 0xa2, 0xf6, 0x7f, 0x66, 0x95, 0x90, 0x79, 0x89, 0xd6, 0x96, 0x2b,
	0xde, 0xd8, 0xa3, 0xb1, 0x6c, 0x6d, 0xdd, 0xed, 0x36, 0x7a, 0x8b, 0xd2, 0x9f, 0x86, 0xf9, 0x26,
	0x4d, 0xc6, 0xfd, 0xe5, 0xd6, 0x21, 0xa2, 0x5b, 0xfd, 0x6c, 0xcc, 0x4a, 0xb4, 0x6b, 0xde, 0xa0,
	0xe3, 0xf1, 0xb0, 0x9e, 0x6b, 0x48, 0xd2, 0x78, 0x42, 0xf3, 0x62, 0x72, 0xc0, 0x8b, 0x83, 0x89,
	0x04, 0x75, 0x79, 0x49, 0xae, 0x14, 0xab, 0xed, 0x85, 0xdc, 0xc6, 0x2c, 0x72, 0xc1, 0x09, 0x7d,
	0x47, 0x8d, 0x8c, 0x80, 0x08, 0x3b, 0xe2, 0xd5, 0x91, 0xc1, 0xaf, 0x34, 0xb3, 0x6e, 0x6c, 0x1d,
	0xe5, 0xb7, 0x76, 0x4e, 0xe4, 0xb7, 0xee, 0x2e, 0xf3, 0xbb, 0x8d, 0xde, 0x39, 0x9a, 0x8c, 0xb7,
	0x97, 0xcb, 0x7e, 0x37, 0xcc, 0x8b, 0x7c, 0x98, 0xc8, 0xb4, 0xe8, 0xe7, 0x89, 0x90, 0xea, 0x5e,
	0x52, 0xef, 0x3e, 0xfa, 0x48, 0xb3, 0x8f, 0x66, 0x25, 0xfa, 0x78, 0x61, 0x00, 0x65, 0x80, 0xda,
	0x60, 0xb5, 0x71, 0xe8, 0x8b, 0x80, 0x13, 0x1b, 0x7c, 0x4a, 0x62, 0x75, 0x27, 0xb9, 0x40, 0x45,
	0x10, 0x80, 0x4f, 0x6d, 0x82, 0x29, 0xa5, 0xcc, 0xc3, 0xf1, 0xbc, 0x44, 0x1f, 0xbe, 0x7e, 0xf9,
	0xc5, 0xed, 0xaa, 0xb8, 0x97, 0x08, 0x79, 0xec, 0x83, 0xb3, 0x56, 0x79, 0x55, 0xb5, 0x2e, 0x76,
	0xce, 0x98, 0x2b, 0x5c, 0x5f, 0xe3, 0x9d, 0xc7, 0xc6, 0xd3, 0xe7, 0xcd, 0xc6, 0xb3, 0xe7, 0xcd,
	0xc6, 0xcb, 0xe7, 0x4d, 0xe3, 0xf1, 0x61, 0xd3, 0x78, 0x72, 0xd8, 0x34, 0xfe, 0x3a, 0x6c, 0x1a,
	0x4f, 0x0f, 0x9b, 0xc6, 0x3f, 0x87, 0x4d, 0xe3, 0xdf, 0xc3, 0x66, 0xe3, 0xe5, 0x61, 0xd3, 0xf8,
	0xe5, 0x45, 0xb3, 0xf1, 0xf4, 0x45, 0xb3, 0xf1, 0xec, 0x45, 0xb3, 0xf1, 0xed, 0xa7, 0x83, 0x6c,
	0x7c, 0x7f, 0xb0, 0xb1, 0xb8, 0x55, 0x37, 0x0e, 0xf2, 0x4d, 0xfd, 0xa0, 0x5e, 0x6a, 0xb5, 0xf5,
	0xd3, 0x44, 0xc8, 0xc9, 0xf2, 0xd2, 0xdd, 0x1c, 0xb3, 0x41, 0xb6, 0x29, 0x1f, 0x14, 0xf5, 0x7f,
	0xc6, 0x89, 0xdf, 0x0d, 0xb6, 0xa2, 0xff, 0x33, 0xbc, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x37,
	0xcf, 0xda, 0x94, 0xd2, 0x08, 0x00, 0x00,
}

func (this *AddonServiceChoice) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice)
	if !ok {
		that2, ok := that.(AddonServiceChoice)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if that1.Choice == nil {
		if this.Choice != nil {
			return false
		}
	} else if this.Choice == nil {
		return false
	} else if !this.Choice.Equal(that1.Choice) {
		return false
	}
	return true
}
func (this *AddonServiceChoice_F5XcBase) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_F5XcBase)
	if !ok {
		that2, ok := that.(AddonServiceChoice_F5XcBase)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.F5XcBase != that1.F5XcBase {
		return false
	}
	return true
}
func (this *AddonServiceChoice_VesIoVolterraDefault) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_VesIoVolterraDefault)
	if !ok {
		that2, ok := that.(AddonServiceChoice_VesIoVolterraDefault)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoVolterraDefault != that1.VesIoVolterraDefault {
		return false
	}
	return true
}
func (this *AddonServiceChoice_VesIoTenantManagement) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_VesIoTenantManagement)
	if !ok {
		that2, ok := that.(AddonServiceChoice_VesIoTenantManagement)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoTenantManagement != that1.VesIoTenantManagement {
		return false
	}
	return true
}
func (this *AddonServiceChoice_VesIoSupportManagement) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_VesIoSupportManagement)
	if !ok {
		that2, ok := that.(AddonServiceChoice_VesIoSupportManagement)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoSupportManagement != that1.VesIoSupportManagement {
		return false
	}
	return true
}
func (this *AddonServiceChoice_VesIoScim) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_VesIoScim)
	if !ok {
		that2, ok := that.(AddonServiceChoice_VesIoScim)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.VesIoScim != that1.VesIoScim {
		return false
	}
	return true
}
func (this *AddonServiceChoice_ShapeBot) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_ShapeBot)
	if !ok {
		that2, ok := that.(AddonServiceChoice_ShapeBot)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.ShapeBot != that1.ShapeBot {
		return false
	}
	return true
}
func (this *AddonServiceChoice_ShapeRecognize) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_ShapeRecognize)
	if !ok {
		that2, ok := that.(AddonServiceChoice_ShapeRecognize)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.ShapeRecognize != that1.ShapeRecognize {
		return false
	}
	return true
}
func (this *AddonServiceChoice_AidataBfdp) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_AidataBfdp)
	if !ok {
		that2, ok := that.(AddonServiceChoice_AidataBfdp)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.AidataBfdp != that1.AidataBfdp {
		return false
	}
	return true
}
func (this *AddonServiceChoice_LilacCdn) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_LilacCdn)
	if !ok {
		that2, ok := that.(AddonServiceChoice_LilacCdn)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.LilacCdn != that1.LilacCdn {
		return false
	}
	return true
}
func (this *AddonServiceChoice_NginxMgmtSuite) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_NginxMgmtSuite)
	if !ok {
		that2, ok := that.(AddonServiceChoice_NginxMgmtSuite)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.NginxMgmtSuite != that1.NginxMgmtSuite {
		return false
	}
	return true
}
func (this *AddonServiceChoice_SyntheticMonitor) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_SyntheticMonitor)
	if !ok {
		that2, ok := that.(AddonServiceChoice_SyntheticMonitor)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.SyntheticMonitor != that1.SyntheticMonitor {
		return false
	}
	return true
}
func (this *AddonServiceChoice_Safeap) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_Safeap)
	if !ok {
		that2, ok := that.(AddonServiceChoice_Safeap)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Safeap != that1.Safeap {
		return false
	}
	return true
}
func (this *AddonServiceChoice_AipConnector) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_AipConnector)
	if !ok {
		that2, ok := that.(AddonServiceChoice_AipConnector)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.AipConnector != that1.AipConnector {
		return false
	}
	return true
}
func (this *AddonServiceChoice_ClientSideDefense) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AddonServiceChoice_ClientSideDefense)
	if !ok {
		that2, ok := that.(AddonServiceChoice_ClientSideDefense)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.ClientSideDefense != that1.ClientSideDefense {
		return false
	}
	return true
}
func (this *AddonServiceChoice) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 18)
	s = append(s, "&vesenv.AddonServiceChoice{")
	if this.Choice != nil {
		s = append(s, "Choice: "+fmt.Sprintf("%#v", this.Choice)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *AddonServiceChoice_F5XcBase) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_F5XcBase{` +
		`F5XcBase:` + fmt.Sprintf("%#v", this.F5XcBase) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_VesIoVolterraDefault) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_VesIoVolterraDefault{` +
		`VesIoVolterraDefault:` + fmt.Sprintf("%#v", this.VesIoVolterraDefault) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_VesIoTenantManagement) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_VesIoTenantManagement{` +
		`VesIoTenantManagement:` + fmt.Sprintf("%#v", this.VesIoTenantManagement) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_VesIoSupportManagement) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_VesIoSupportManagement{` +
		`VesIoSupportManagement:` + fmt.Sprintf("%#v", this.VesIoSupportManagement) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_VesIoScim) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_VesIoScim{` +
		`VesIoScim:` + fmt.Sprintf("%#v", this.VesIoScim) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_ShapeBot) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_ShapeBot{` +
		`ShapeBot:` + fmt.Sprintf("%#v", this.ShapeBot) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_ShapeRecognize) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_ShapeRecognize{` +
		`ShapeRecognize:` + fmt.Sprintf("%#v", this.ShapeRecognize) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_AidataBfdp) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_AidataBfdp{` +
		`AidataBfdp:` + fmt.Sprintf("%#v", this.AidataBfdp) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_LilacCdn) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_LilacCdn{` +
		`LilacCdn:` + fmt.Sprintf("%#v", this.LilacCdn) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_NginxMgmtSuite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_NginxMgmtSuite{` +
		`NginxMgmtSuite:` + fmt.Sprintf("%#v", this.NginxMgmtSuite) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_SyntheticMonitor) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_SyntheticMonitor{` +
		`SyntheticMonitor:` + fmt.Sprintf("%#v", this.SyntheticMonitor) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_Safeap) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_Safeap{` +
		`Safeap:` + fmt.Sprintf("%#v", this.Safeap) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_AipConnector) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_AipConnector{` +
		`AipConnector:` + fmt.Sprintf("%#v", this.AipConnector) + `}`}, ", ")
	return s
}
func (this *AddonServiceChoice_ClientSideDefense) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&vesenv.AddonServiceChoice_ClientSideDefense{` +
		`ClientSideDefense:` + fmt.Sprintf("%#v", this.ClientSideDefense) + `}`}, ", ")
	return s
}
func valueToGoStringAllAddonServices(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
func (m *AddonServiceChoice) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AddonServiceChoice) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Choice != nil {
		{
			size := m.Choice.Size()
			i -= size
			if _, err := m.Choice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	return len(dAtA) - i, nil
}

func (m *AddonServiceChoice_F5XcBase) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_F5XcBase) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.F5XcBase {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_VesIoSupportManagement) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_VesIoSupportManagement) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoSupportManagement {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x18
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_VesIoVolterraDefault) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_VesIoVolterraDefault) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoVolterraDefault {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xa8
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_VesIoTenantManagement) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_VesIoTenantManagement) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoTenantManagement {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xb0
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_VesIoScim) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_VesIoScim) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.VesIoScim {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xb8
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_ShapeBot) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_ShapeBot) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.ShapeBot {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x3
	i--
	dAtA[i] = 0x90
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_ShapeRecognize) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_ShapeRecognize) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.ShapeRecognize {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x3
	i--
	dAtA[i] = 0x98
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_AidataBfdp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_AidataBfdp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.AidataBfdp {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x3
	i--
	dAtA[i] = 0xa0
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_LilacCdn) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_LilacCdn) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.LilacCdn {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x3
	i--
	dAtA[i] = 0xa8
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_NginxMgmtSuite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_NginxMgmtSuite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.NginxMgmtSuite {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x3
	i--
	dAtA[i] = 0xb0
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_SyntheticMonitor) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_SyntheticMonitor) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.SyntheticMonitor {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x3
	i--
	dAtA[i] = 0xb8
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_Safeap) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_Safeap) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.Safeap {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x3
	i--
	dAtA[i] = 0xc0
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_AipConnector) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_AipConnector) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.AipConnector {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x3
	i--
	dAtA[i] = 0xc8
	return len(dAtA) - i, nil
}
func (m *AddonServiceChoice_ClientSideDefense) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddonServiceChoice_ClientSideDefense) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i--
	if m.ClientSideDefense {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x3
	i--
	dAtA[i] = 0xd0
	return len(dAtA) - i, nil
}
func encodeVarintAllAddonServices(dAtA []byte, offset int, v uint64) int {
	offset -= sovAllAddonServices(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *AddonServiceChoice) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Choice != nil {
		n += m.Choice.Size()
	}
	return n
}

func (m *AddonServiceChoice_F5XcBase) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *AddonServiceChoice_VesIoSupportManagement) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}
func (m *AddonServiceChoice_VesIoVolterraDefault) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_VesIoTenantManagement) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_VesIoScim) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_ShapeBot) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_ShapeRecognize) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_AidataBfdp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_LilacCdn) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_NginxMgmtSuite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_SyntheticMonitor) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_Safeap) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_AipConnector) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}
func (m *AddonServiceChoice_ClientSideDefense) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 3
	return n
}

func sovAllAddonServices(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozAllAddonServices(x uint64) (n int) {
	return sovAllAddonServices(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *AddonServiceChoice) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice{`,
		`Choice:` + fmt.Sprintf("%v", this.Choice) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_F5XcBase) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_F5XcBase{`,
		`F5XcBase:` + fmt.Sprintf("%v", this.F5XcBase) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_VesIoSupportManagement) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_VesIoSupportManagement{`,
		`VesIoSupportManagement:` + fmt.Sprintf("%v", this.VesIoSupportManagement) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_VesIoVolterraDefault) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_VesIoVolterraDefault{`,
		`VesIoVolterraDefault:` + fmt.Sprintf("%v", this.VesIoVolterraDefault) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_VesIoTenantManagement) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_VesIoTenantManagement{`,
		`VesIoTenantManagement:` + fmt.Sprintf("%v", this.VesIoTenantManagement) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_VesIoScim) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_VesIoScim{`,
		`VesIoScim:` + fmt.Sprintf("%v", this.VesIoScim) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_ShapeBot) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_ShapeBot{`,
		`ShapeBot:` + fmt.Sprintf("%v", this.ShapeBot) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_ShapeRecognize) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_ShapeRecognize{`,
		`ShapeRecognize:` + fmt.Sprintf("%v", this.ShapeRecognize) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_AidataBfdp) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_AidataBfdp{`,
		`AidataBfdp:` + fmt.Sprintf("%v", this.AidataBfdp) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_LilacCdn) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_LilacCdn{`,
		`LilacCdn:` + fmt.Sprintf("%v", this.LilacCdn) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_NginxMgmtSuite) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_NginxMgmtSuite{`,
		`NginxMgmtSuite:` + fmt.Sprintf("%v", this.NginxMgmtSuite) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_SyntheticMonitor) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_SyntheticMonitor{`,
		`SyntheticMonitor:` + fmt.Sprintf("%v", this.SyntheticMonitor) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_Safeap) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_Safeap{`,
		`Safeap:` + fmt.Sprintf("%v", this.Safeap) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_AipConnector) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_AipConnector{`,
		`AipConnector:` + fmt.Sprintf("%v", this.AipConnector) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AddonServiceChoice_ClientSideDefense) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AddonServiceChoice_ClientSideDefense{`,
		`ClientSideDefense:` + fmt.Sprintf("%v", this.ClientSideDefense) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringAllAddonServices(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *AddonServiceChoice) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAllAddonServices
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AddonServiceChoice: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AddonServiceChoice: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field F5XcBase", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_F5XcBase{b}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoSupportManagement", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_VesIoSupportManagement{b}
		case 21:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoVolterraDefault", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_VesIoVolterraDefault{b}
		case 22:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoTenantManagement", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_VesIoTenantManagement{b}
		case 23:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VesIoScim", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_VesIoScim{b}
		case 50:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShapeBot", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_ShapeBot{b}
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShapeRecognize", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_ShapeRecognize{b}
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AidataBfdp", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_AidataBfdp{b}
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LilacCdn", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_LilacCdn{b}
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NginxMgmtSuite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_NginxMgmtSuite{b}
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SyntheticMonitor", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_SyntheticMonitor{b}
		case 56:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Safeap", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_Safeap{b}
		case 57:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AipConnector", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_AipConnector{b}
		case 58:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientSideDefense", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Choice = &AddonServiceChoice_ClientSideDefense{b}
		default:
			iNdEx = preIndex
			skippy, err := skipAllAddonServices(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAllAddonServices
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthAllAddonServices
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipAllAddonServices(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowAllAddonServices
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAllAddonServices
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthAllAddonServices
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupAllAddonServices
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthAllAddonServices
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthAllAddonServices        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowAllAddonServices          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupAllAddonServices = fmt.Errorf("proto: unexpected end of group")
)
