// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ves.io/schema/nginx/nms/agent_certs/types.proto

package agent_certs

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	golang_proto "github.com/golang/protobuf/proto"
	_ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"
	views "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/views"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// GenerateAgentCertRequest is used to generate a new agent cert
//
// x-displayName: "Generate Agent Cert Request"
// Generate a new Agent Cert
type GenerateAgentCertRequest struct {
	// The deployment for which the agent cert is requested
	//
	// x-displayName: "The deployment for which the agent cert is requested"
	// x-required
	// The deployment for which the agent cert is requested
	DeploymentRef *views.ObjectRefType `protobuf:"bytes,1,opt,name=deployment_ref,json=deploymentRef,proto3" json:"deployment_ref,omitempty"`
	// The base-64 encoded PEM certificate signing request
	//
	// x-displayName: "The base-64 encoded PEM certificate signing request"
	// x-required
	// x-example: "example base-64 encoded PEM certificate signing request"
	// The base-64 encoded PEM certificate signing request
	Csr string `protobuf:"bytes,2,opt,name=csr,proto3" json:"csr,omitempty"`
	// The expirationTime for the agent certificate (ISO-8601 format)
	//
	// x-displayName: "The expirationTime for the agent certificate (ISO-8601 format)"
	// x-example: "2022-08-10 15:00:00.000"
	// The expirationTime for the agent certificate (ISO-8601 format)
	//
	ExpirationTime string `protobuf:"bytes,3,opt,name=expiration_time,json=expirationTime,proto3" json:"expiration_time,omitempty"`
}

func (m *GenerateAgentCertRequest) Reset()      { *m = GenerateAgentCertRequest{} }
func (*GenerateAgentCertRequest) ProtoMessage() {}
func (*GenerateAgentCertRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d48a10bf763f7b31, []int{0}
}
func (m *GenerateAgentCertRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GenerateAgentCertRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *GenerateAgentCertRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenerateAgentCertRequest.Merge(m, src)
}
func (m *GenerateAgentCertRequest) XXX_Size() int {
	return m.Size()
}
func (m *GenerateAgentCertRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GenerateAgentCertRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GenerateAgentCertRequest proto.InternalMessageInfo

func (m *GenerateAgentCertRequest) GetDeploymentRef() *views.ObjectRefType {
	if m != nil {
		return m.DeploymentRef
	}
	return nil
}

func (m *GenerateAgentCertRequest) GetCsr() string {
	if m != nil {
		return m.Csr
	}
	return ""
}

func (m *GenerateAgentCertRequest) GetExpirationTime() string {
	if m != nil {
		return m.ExpirationTime
	}
	return ""
}

// GenerateAgentCertResponse is the response from GenerateAgentCert API
//
// x-displayName: "Generate Agent Cert Response"
// Generate Agent Cert Response
type GenerateAgentCertResponse struct {
	// The unique identifier for the created agent cert
	//
	// x-displayName: "The unique identifier for the created agent cert"
	// The unique identifier for the created agent cert
	//
	SerialNumber string `protobuf:"bytes,1,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	// The base64 encoded PEM Agent certificate
	//
	// x-displayName: "The base64 encoded PEM Agent certificate"
	// The base64 encoded PEM Agent certificate
	//
	Certificate string `protobuf:"bytes,2,opt,name=certificate,proto3" json:"certificate,omitempty"`
}

func (m *GenerateAgentCertResponse) Reset()      { *m = GenerateAgentCertResponse{} }
func (*GenerateAgentCertResponse) ProtoMessage() {}
func (*GenerateAgentCertResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d48a10bf763f7b31, []int{1}
}
func (m *GenerateAgentCertResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GenerateAgentCertResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *GenerateAgentCertResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenerateAgentCertResponse.Merge(m, src)
}
func (m *GenerateAgentCertResponse) XXX_Size() int {
	return m.Size()
}
func (m *GenerateAgentCertResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GenerateAgentCertResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GenerateAgentCertResponse proto.InternalMessageInfo

func (m *GenerateAgentCertResponse) GetSerialNumber() string {
	if m != nil {
		return m.SerialNumber
	}
	return ""
}

func (m *GenerateAgentCertResponse) GetCertificate() string {
	if m != nil {
		return m.Certificate
	}
	return ""
}

// RevokeAgentCertRequest is used to revoke an agent cert
//
// x-displayName: "Revoke Agent Cert Request"
// Revoke an Agent Cert
type RevokeAgentCertRequest struct {
	// The deployment for which the agent cert is requested
	//
	// x-displayName: "The deployment for which the agent cert is requested"
	// x-required
	// The deployment for which the agent cert is requested
	DeploymentRef *views.ObjectRefType `protobuf:"bytes,1,opt,name=deployment_ref,json=deploymentRef,proto3" json:"deployment_ref,omitempty"`
	// The unique identifier for the created agent cert
	//
	// x-displayName: "The unique identifier for the created agent cert"
	// x-required
	// x-example: "a uniquely identifiable serial number"
	// The unique identifier for the created agent cert
	SerialNumber string `protobuf:"bytes,2,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
}

func (m *RevokeAgentCertRequest) Reset()      { *m = RevokeAgentCertRequest{} }
func (*RevokeAgentCertRequest) ProtoMessage() {}
func (*RevokeAgentCertRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d48a10bf763f7b31, []int{2}
}
func (m *RevokeAgentCertRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RevokeAgentCertRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *RevokeAgentCertRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RevokeAgentCertRequest.Merge(m, src)
}
func (m *RevokeAgentCertRequest) XXX_Size() int {
	return m.Size()
}
func (m *RevokeAgentCertRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RevokeAgentCertRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RevokeAgentCertRequest proto.InternalMessageInfo

func (m *RevokeAgentCertRequest) GetDeploymentRef() *views.ObjectRefType {
	if m != nil {
		return m.DeploymentRef
	}
	return nil
}

func (m *RevokeAgentCertRequest) GetSerialNumber() string {
	if m != nil {
		return m.SerialNumber
	}
	return ""
}

// RevokeAgentCertResponse is response received from RevokeAgentCert API
//
// x-displayName: "Revoke Agent Cert Response"
// Revoke Agent Cert Response
type RevokeAgentCertResponse struct {
}

func (m *RevokeAgentCertResponse) Reset()      { *m = RevokeAgentCertResponse{} }
func (*RevokeAgentCertResponse) ProtoMessage() {}
func (*RevokeAgentCertResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d48a10bf763f7b31, []int{3}
}
func (m *RevokeAgentCertResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RevokeAgentCertResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *RevokeAgentCertResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RevokeAgentCertResponse.Merge(m, src)
}
func (m *RevokeAgentCertResponse) XXX_Size() int {
	return m.Size()
}
func (m *RevokeAgentCertResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RevokeAgentCertResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RevokeAgentCertResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*GenerateAgentCertRequest)(nil), "ves.io.schema.nginx.nms.agent_certs.GenerateAgentCertRequest")
	golang_proto.RegisterType((*GenerateAgentCertRequest)(nil), "ves.io.schema.nginx.nms.agent_certs.GenerateAgentCertRequest")
	proto.RegisterType((*GenerateAgentCertResponse)(nil), "ves.io.schema.nginx.nms.agent_certs.GenerateAgentCertResponse")
	golang_proto.RegisterType((*GenerateAgentCertResponse)(nil), "ves.io.schema.nginx.nms.agent_certs.GenerateAgentCertResponse")
	proto.RegisterType((*RevokeAgentCertRequest)(nil), "ves.io.schema.nginx.nms.agent_certs.RevokeAgentCertRequest")
	golang_proto.RegisterType((*RevokeAgentCertRequest)(nil), "ves.io.schema.nginx.nms.agent_certs.RevokeAgentCertRequest")
	proto.RegisterType((*RevokeAgentCertResponse)(nil), "ves.io.schema.nginx.nms.agent_certs.RevokeAgentCertResponse")
	golang_proto.RegisterType((*RevokeAgentCertResponse)(nil), "ves.io.schema.nginx.nms.agent_certs.RevokeAgentCertResponse")
}

func init() {
	proto.RegisterFile("ves.io/schema/nginx/nms/agent_certs/types.proto", fileDescriptor_d48a10bf763f7b31)
}
func init() {
	golang_proto.RegisterFile("ves.io/schema/nginx/nms/agent_certs/types.proto", fileDescriptor_d48a10bf763f7b31)
}

var fileDescriptor_d48a10bf763f7b31 = []byte{
	// 473 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x93, 0x3f, 0x6f, 0xd3, 0x40,
	0x18, 0xc6, 0x7d, 0xad, 0x84, 0xd4, 0x2b, 0x29, 0xc8, 0x03, 0x24, 0x01, 0x1d, 0x51, 0x3a, 0xd0,
	0x25, 0x77, 0x12, 0x7c, 0x02, 0xca, 0xc0, 0x06, 0x92, 0xd5, 0x01, 0x58, 0x22, 0xdb, 0x79, 0xed,
	0x1e, 0xcd, 0xfd, 0xe1, 0xee, 0x6c, 0x92, 0x01, 0x89, 0x8f, 0xc0, 0xd6, 0xaf, 0x80, 0x58, 0xf8,
	0x0a, 0x8c, 0x8c, 0x19, 0x33, 0x12, 0x67, 0x61, 0xec, 0x47, 0x40, 0x3e, 0x07, 0x35, 0x26, 0x88,
	0xb1, 0xdb, 0x7b, 0xef, 0xe3, 0xe7, 0xf5, 0xef, 0x39, 0xbf, 0xc6, 0xac, 0x04, 0x4b, 0xb9, 0x62,
	0x36, 0x3d, 0x07, 0x11, 0x33, 0x99, 0x73, 0x39, 0x63, 0x52, 0x58, 0x16, 0xe7, 0x20, 0xdd, 0x38,
	0x05, 0xe3, 0x2c, 0x73, 0x73, 0x0d, 0x96, 0x6a, 0xa3, 0x9c, 0x0a, 0x8f, 0x1b, 0x03, 0x6d, 0x0c,
	0xd4, 0x1b, 0xa8, 0x14, 0x96, 0x6e, 0x19, 0xfa, 0xa3, 0x9c, 0xbb, 0xf3, 0x22, 0xa1, 0xa9, 0x12,
	0x2c, 0x57, 0xb9, 0x62, 0xde, 0x9b, 0x14, 0x99, 0x3f, 0xf9, 0x83, 0xaf, 0x9a, 0x99, 0xfd, 0x07,
	0x6d, 0x08, 0xa5, 0x1d, 0x57, 0x72, 0xf3, 0xc2, 0x7e, 0xaf, 0x2d, 0x6e, 0xb1, 0xf4, 0x1f, 0xb6,
	0xa5, 0x32, 0x9e, 0xf2, 0x49, 0xec, 0x60, 0xa3, 0x0e, 0xfe, 0x52, 0x39, 0x7c, 0x18, 0xb7, 0x47,
	0x3f, 0xda, 0x7d, 0xa2, 0x15, 0x76, 0xf8, 0x0d, 0xe1, 0xee, 0x0b, 0x90, 0x60, 0x62, 0x07, 0xcf,
	0xea, 0x7c, 0xcf, 0xc1, 0xb8, 0x08, 0xde, 0x17, 0x60, 0x5d, 0xf8, 0x1a, 0x1f, 0x4d, 0x40, 0x4f,
	0xd5, 0x5c, 0xd4, 0xc1, 0x0d, 0x64, 0x5d, 0x34, 0x40, 0x27, 0x87, 0x4f, 0x86, 0xb4, 0x7d, 0x45,
	0x7e, 0x2c, 0x7d, 0x95, 0xbc, 0x83, 0xd4, 0x45, 0x90, 0x9d, 0xcd, 0x35, 0x9c, 0x76, 0xbe, 0x7e,
	0xc4, 0xd7, 0xe6, 0xa8, 0xb3, 0x55, 0x43, 0x16, 0xde, 0xc5, 0xfb, 0xa9, 0x35, 0xdd, 0xbd, 0x01,
	0x3a, 0x39, 0x88, 0xea, 0x32, 0x7c, 0x8c, 0xef, 0xc0, 0x4c, 0x73, 0x13, 0xd7, 0xf8, 0x63, 0xc7,
	0x05, 0x74, 0xf7, 0xbd, 0x7a, 0x74, 0xdd, 0x3e, 0xe3, 0x02, 0x86, 0x09, 0xee, 0xfd, 0x03, 0xd8,
	0x6a, 0x25, 0x2d, 0x84, 0xc7, 0xb8, 0x63, 0xc1, 0xf0, 0x78, 0x3a, 0x96, 0x85, 0x48, 0xc0, 0x78,
	0xe0, 0x83, 0xe8, 0x76, 0xd3, 0x7c, 0xe9, 0x7b, 0xe1, 0x00, 0x1f, 0xd6, 0x1f, 0x91, 0x67, 0x3c,
	0x8d, 0x1d, 0x6c, 0x20, 0xb6, 0x5b, 0xc3, 0x4b, 0x84, 0xef, 0x45, 0x50, 0xaa, 0x8b, 0x9b, 0xbc,
	0x93, 0x1d, 0xf6, 0xbd, 0x5d, 0xf6, 0x61, 0x0f, 0xdf, 0xdf, 0x01, 0x6b, 0xb2, 0x9f, 0x5e, 0xa2,
	0xc5, 0x8a, 0x04, 0xcb, 0x15, 0x09, 0xae, 0x56, 0x04, 0x7d, 0xaa, 0x08, 0xfa, 0x52, 0x11, 0xf4,
	0xa3, 0x22, 0x68, 0x51, 0x11, 0xb4, 0xac, 0x08, 0xfa, 0x59, 0x11, 0xf4, 0xab, 0x22, 0xc1, 0x55,
	0x45, 0xd0, 0xe7, 0x35, 0x09, 0xbe, 0xaf, 0x09, 0x5a, 0xac, 0x49, 0xb0, 0x5c, 0x93, 0xe0, 0xed,
	0x9b, 0x5c, 0xe9, 0x8b, 0x9c, 0x96, 0x6a, 0xea, 0xc0, 0x98, 0x98, 0x16, 0x96, 0xf9, 0x22, 0x53,
	0x46, 0x8c, 0xb4, 0x51, 0x25, 0x9f, 0x80, 0x19, 0xfd, 0x91, 0x99, 0x4e, 0x72, 0xc5, 0x60, 0xe6,
	0x36, 0x9b, 0xf5, 0xbf, 0xbf, 0x2b, 0xb9, 0xe5, 0x77, 0xed, 0xe9, 0xef, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x4d, 0x35, 0x5a, 0xfa, 0x8b, 0x03, 0x00, 0x00,
}

func (this *GenerateAgentCertRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GenerateAgentCertRequest)
	if !ok {
		that2, ok := that.(GenerateAgentCertRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.DeploymentRef.Equal(that1.DeploymentRef) {
		return false
	}
	if this.Csr != that1.Csr {
		return false
	}
	if this.ExpirationTime != that1.ExpirationTime {
		return false
	}
	return true
}
func (this *GenerateAgentCertResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GenerateAgentCertResponse)
	if !ok {
		that2, ok := that.(GenerateAgentCertResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.SerialNumber != that1.SerialNumber {
		return false
	}
	if this.Certificate != that1.Certificate {
		return false
	}
	return true
}
func (this *RevokeAgentCertRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*RevokeAgentCertRequest)
	if !ok {
		that2, ok := that.(RevokeAgentCertRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.DeploymentRef.Equal(that1.DeploymentRef) {
		return false
	}
	if this.SerialNumber != that1.SerialNumber {
		return false
	}
	return true
}
func (this *RevokeAgentCertResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*RevokeAgentCertResponse)
	if !ok {
		that2, ok := that.(RevokeAgentCertResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	return true
}
func (this *GenerateAgentCertRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&agent_certs.GenerateAgentCertRequest{")
	if this.DeploymentRef != nil {
		s = append(s, "DeploymentRef: "+fmt.Sprintf("%#v", this.DeploymentRef)+",\n")
	}
	s = append(s, "Csr: "+fmt.Sprintf("%#v", this.Csr)+",\n")
	s = append(s, "ExpirationTime: "+fmt.Sprintf("%#v", this.ExpirationTime)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GenerateAgentCertResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&agent_certs.GenerateAgentCertResponse{")
	s = append(s, "SerialNumber: "+fmt.Sprintf("%#v", this.SerialNumber)+",\n")
	s = append(s, "Certificate: "+fmt.Sprintf("%#v", this.Certificate)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *RevokeAgentCertRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&agent_certs.RevokeAgentCertRequest{")
	if this.DeploymentRef != nil {
		s = append(s, "DeploymentRef: "+fmt.Sprintf("%#v", this.DeploymentRef)+",\n")
	}
	s = append(s, "SerialNumber: "+fmt.Sprintf("%#v", this.SerialNumber)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *RevokeAgentCertResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 4)
	s = append(s, "&agent_certs.RevokeAgentCertResponse{")
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringTypes(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
func (m *GenerateAgentCertRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GenerateAgentCertRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GenerateAgentCertRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ExpirationTime) > 0 {
		i -= len(m.ExpirationTime)
		copy(dAtA[i:], m.ExpirationTime)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.ExpirationTime)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Csr) > 0 {
		i -= len(m.Csr)
		copy(dAtA[i:], m.Csr)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.Csr)))
		i--
		dAtA[i] = 0x12
	}
	if m.DeploymentRef != nil {
		{
			size, err := m.DeploymentRef.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GenerateAgentCertResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GenerateAgentCertResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GenerateAgentCertResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Certificate) > 0 {
		i -= len(m.Certificate)
		copy(dAtA[i:], m.Certificate)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.Certificate)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.SerialNumber) > 0 {
		i -= len(m.SerialNumber)
		copy(dAtA[i:], m.SerialNumber)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.SerialNumber)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *RevokeAgentCertRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RevokeAgentCertRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RevokeAgentCertRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.SerialNumber) > 0 {
		i -= len(m.SerialNumber)
		copy(dAtA[i:], m.SerialNumber)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.SerialNumber)))
		i--
		dAtA[i] = 0x12
	}
	if m.DeploymentRef != nil {
		{
			size, err := m.DeploymentRef.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *RevokeAgentCertResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RevokeAgentCertResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RevokeAgentCertResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTypes(dAtA []byte, offset int, v uint64) int {
	offset -= sovTypes(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *GenerateAgentCertRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DeploymentRef != nil {
		l = m.DeploymentRef.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	l = len(m.Csr)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	l = len(m.ExpirationTime)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}

func (m *GenerateAgentCertResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.SerialNumber)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	l = len(m.Certificate)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}

func (m *RevokeAgentCertRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DeploymentRef != nil {
		l = m.DeploymentRef.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	l = len(m.SerialNumber)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}

func (m *RevokeAgentCertResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTypes(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTypes(x uint64) (n int) {
	return sovTypes(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *GenerateAgentCertRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GenerateAgentCertRequest{`,
		`DeploymentRef:` + strings.Replace(fmt.Sprintf("%v", this.DeploymentRef), "ObjectRefType", "views.ObjectRefType", 1) + `,`,
		`Csr:` + fmt.Sprintf("%v", this.Csr) + `,`,
		`ExpirationTime:` + fmt.Sprintf("%v", this.ExpirationTime) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GenerateAgentCertResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GenerateAgentCertResponse{`,
		`SerialNumber:` + fmt.Sprintf("%v", this.SerialNumber) + `,`,
		`Certificate:` + fmt.Sprintf("%v", this.Certificate) + `,`,
		`}`,
	}, "")
	return s
}
func (this *RevokeAgentCertRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&RevokeAgentCertRequest{`,
		`DeploymentRef:` + strings.Replace(fmt.Sprintf("%v", this.DeploymentRef), "ObjectRefType", "views.ObjectRefType", 1) + `,`,
		`SerialNumber:` + fmt.Sprintf("%v", this.SerialNumber) + `,`,
		`}`,
	}, "")
	return s
}
func (this *RevokeAgentCertResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&RevokeAgentCertResponse{`,
		`}`,
	}, "")
	return s
}
func valueToStringTypes(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *GenerateAgentCertRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GenerateAgentCertRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GenerateAgentCertRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeploymentRef", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DeploymentRef == nil {
				m.DeploymentRef = &views.ObjectRefType{}
			}
			if err := m.DeploymentRef.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Csr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Csr = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpirationTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExpirationTime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GenerateAgentCertResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GenerateAgentCertResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GenerateAgentCertResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SerialNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SerialNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Certificate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Certificate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RevokeAgentCertRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RevokeAgentCertRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RevokeAgentCertRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeploymentRef", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DeploymentRef == nil {
				m.DeploymentRef = &views.ObjectRefType{}
			}
			if err := m.DeploymentRef.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SerialNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SerialNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RevokeAgentCertResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RevokeAgentCertResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RevokeAgentCertResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTypes(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTypes
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTypes
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTypes
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTypes        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTypes          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTypes = fmt.Errorf("proto: unexpected end of group")
)
