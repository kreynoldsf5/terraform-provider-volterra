// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ves.io/schema/nginx/nms/agent_certs/public_customapi.proto

// Agent Certs
//
// x-displayName: "Agent Certs"
// Public Custom API definition for Agent Certs

package agent_certs

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/googleapis/google/api"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	golang_proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	_ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"
	_ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/vesenv"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

func init() {
	proto.RegisterFile("ves.io/schema/nginx/nms/agent_certs/public_customapi.proto", fileDescriptor_85557ff361ad7e19)
}
func init() {
	golang_proto.RegisterFile("ves.io/schema/nginx/nms/agent_certs/public_customapi.proto", fileDescriptor_85557ff361ad7e19)
}

var fileDescriptor_85557ff361ad7e19 = []byte{
	// 473 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0xbf, 0x6e, 0x13, 0x41,
	0x10, 0xc6, 0x6f, 0x13, 0x40, 0xc2, 0x0d, 0xc2, 0xa2, 0x88, 0x0c, 0xda, 0xe2, 0x10, 0x8d, 0xc5,
	0xed, 0x2a, 0xd0, 0x99, 0x3f, 0x52, 0x48, 0x81, 0xe8, 0x50, 0x3a, 0xd2, 0x44, 0x7b, 0x97, 0xc9,
	0x66, 0x15, 0xef, 0xce, 0xb2, 0xbb, 0x77, 0x24, 0x1d, 0x8a, 0x78, 0x00, 0xa4, 0xbc, 0x04, 0x8f,
	0x80, 0x94, 0x26, 0x1d, 0xae, 0x90, 0x25, 0x9a, 0x94, 0xf8, 0x4c, 0x41, 0x05, 0xa9, 0xa9, 0x50,
	0xd6, 0xb6, 0x64, 0x83, 0x84, 0x0e, 0x77, 0x33, 0x9a, 0xfd, 0xcd, 0xcc, 0x37, 0xfb, 0xb5, 0x7a,
	0x15, 0x78, 0xa6, 0x90, 0xfb, 0x62, 0x1f, 0xb4, 0xe0, 0x46, 0x2a, 0x73, 0xc8, 0x8d, 0xf6, 0x5c,
	0x48, 0x30, 0x61, 0xa7, 0x00, 0x17, 0x3c, 0xb7, 0x65, 0xde, 0x57, 0xc5, 0x4e, 0x51, 0xfa, 0x80,
	0x5a, 0x58, 0xc5, 0xac, 0xc3, 0x80, 0xed, 0xbb, 0x13, 0x96, 0x4d, 0x58, 0x16, 0x59, 0x66, 0xb4,
	0x67, 0x73, 0x6c, 0x27, 0x93, 0x2a, 0xec, 0x97, 0x39, 0x2b, 0x50, 0x73, 0x89, 0x12, 0x79, 0x64,
	0xf3, 0x72, 0x2f, 0x66, 0x31, 0x89, 0xd1, 0xa4, 0x67, 0xe7, 0x8e, 0x44, 0x94, 0x7d, 0xe0, 0xc2,
	0x2a, 0x2e, 0x8c, 0xc1, 0x20, 0x82, 0x42, 0xe3, 0xa7, 0x55, 0xde, 0x64, 0xdb, 0x70, 0x64, 0x61,
	0x06, 0xdc, 0x5e, 0x04, 0xd0, 0xce, 0x77, 0x4b, 0x17, 0x8b, 0x15, 0x78, 0x30, 0xd5, 0xe2, 0x9b,
	0x07, 0xef, 0xae, 0xb4, 0xae, 0x6f, 0x46, 0xdd, 0x1b, 0x2f, 0x5f, 0xb4, 0x7f, 0x90, 0xd6, 0xcd,
	0xe7, 0x60, 0xc0, 0x89, 0x00, 0x1b, 0x97, 0x23, 0x37, 0xc1, 0x85, 0xf6, 0x13, 0xd6, 0xe0, 0x10,
	0xec, 0x2f, 0x6e, 0x0b, 0x5e, 0x97, 0xe0, 0x43, 0xe7, 0xe9, 0xb2, 0xb8, 0xb7, 0x68, 0x3c, 0xa4,
	0xdb, 0x83, 0x8f, 0x2b, 0xa4, 0xfe, 0xb4, 0x96, 0x56, 0xd8, 0x0f, 0x05, 0x1a, 0x8f, 0x7d, 0xc8,
	0x62, 0x93, 0x4c, 0x4b, 0x1d, 0x32, 0x5f, 0xaa, 0x00, 0xd9, 0x1b, 0xa7, 0x02, 0x1c, 0x7f, 0xf9,
	0x76, 0xb2, 0xd2, 0x4d, 0xef, 0x4d, 0x7f, 0x94, 0x1b, 0xa1, 0xc1, 0x5b, 0x51, 0x80, 0xe7, 0xfe,
	0xc8, 0x07, 0xd0, 0x93, 0x43, 0x66, 0x71, 0x64, 0x8f, 0x74, 0xdb, 0x3f, 0x49, 0xeb, 0xc6, 0x16,
	0x54, 0x78, 0x30, 0x27, 0xf7, 0x51, 0xa3, 0x7d, 0xff, 0xa0, 0x66, 0x62, 0x1f, 0x2f, 0x07, 0x4f,
	0xa5, 0x8a, 0xff, 0x94, 0xba, 0x9e, 0xde, 0x6f, 0x24, 0x95, 0xbb, 0x38, 0xb0, 0x47, 0xba, 0x9d,
	0x5b, 0x67, 0xa7, 0x64, 0xf5, 0xd7, 0x29, 0xb9, 0xba, 0x0b, 0x1a, 0xd7, 0x8f, 0x3f, 0xaf, 0xad,
	0x0e, 0x08, 0x79, 0x76, 0x42, 0x86, 0x23, 0x9a, 0x9c, 0x8f, 0x68, 0x72, 0x31, 0xa2, 0xe4, 0x6d,
	0x4d, 0xc9, 0x87, 0x9a, 0x92, 0x41, 0x4d, 0xc9, 0xb0, 0xa6, 0xe4, 0x6b, 0x4d, 0xc9, 0xf7, 0x9a,
	0x26, 0x17, 0x35, 0x25, 0xef, 0xc7, 0x34, 0x39, 0x1b, 0x53, 0x32, 0x1c, 0xd3, 0xe4, 0x7c, 0x4c,
	0x93, 0xed, 0x57, 0x12, 0xed, 0x81, 0x64, 0x97, 0x1b, 0x83, 0x73, 0x82, 0x95, 0x9e, 0xc7, 0x60,
	0x0f, 0x9d, 0xce, 0xac, 0xc3, 0x4a, 0xed, 0x82, 0xcb, 0x66, 0x65, 0x6e, 0x73, 0x89, 0x1c, 0x0e,
	0xc3, 0xd4, 0x94, 0xff, 0x72, 0x7a, 0x7e, 0x2d, 0x7a, 0xf4, 0xe1, 0xef, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x71, 0x4f, 0x82, 0x31, 0xc5, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CustomAPIClient is the client API for CustomAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CustomAPIClient interface {
	// Generate Agent Cert
	//
	// x-displayName: "Generate Agent Cert"
	// Generate an Agent Cert
	GenerateAgentCert(ctx context.Context, in *GenerateAgentCertRequest, opts ...grpc.CallOption) (*GenerateAgentCertResponse, error)
	// Revoke Agent Cert
	//
	// x-displayName: "Revoke Agent Cert"
	// Revoke an Agent Cert
	RevokeAgentCert(ctx context.Context, in *RevokeAgentCertRequest, opts ...grpc.CallOption) (*RevokeAgentCertResponse, error)
}

type customAPIClient struct {
	cc *grpc.ClientConn
}

func NewCustomAPIClient(cc *grpc.ClientConn) CustomAPIClient {
	return &customAPIClient{cc}
}

func (c *customAPIClient) GenerateAgentCert(ctx context.Context, in *GenerateAgentCertRequest, opts ...grpc.CallOption) (*GenerateAgentCertResponse, error) {
	out := new(GenerateAgentCertResponse)
	err := c.cc.Invoke(ctx, "/ves.io.schema.nginx.nms.agent_certs.CustomAPI/GenerateAgentCert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customAPIClient) RevokeAgentCert(ctx context.Context, in *RevokeAgentCertRequest, opts ...grpc.CallOption) (*RevokeAgentCertResponse, error) {
	out := new(RevokeAgentCertResponse)
	err := c.cc.Invoke(ctx, "/ves.io.schema.nginx.nms.agent_certs.CustomAPI/RevokeAgentCert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CustomAPIServer is the server API for CustomAPI service.
type CustomAPIServer interface {
	// Generate Agent Cert
	//
	// x-displayName: "Generate Agent Cert"
	// Generate an Agent Cert
	GenerateAgentCert(context.Context, *GenerateAgentCertRequest) (*GenerateAgentCertResponse, error)
	// Revoke Agent Cert
	//
	// x-displayName: "Revoke Agent Cert"
	// Revoke an Agent Cert
	RevokeAgentCert(context.Context, *RevokeAgentCertRequest) (*RevokeAgentCertResponse, error)
}

// UnimplementedCustomAPIServer can be embedded to have forward compatible implementations.
type UnimplementedCustomAPIServer struct {
}

func (*UnimplementedCustomAPIServer) GenerateAgentCert(ctx context.Context, req *GenerateAgentCertRequest) (*GenerateAgentCertResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerateAgentCert not implemented")
}
func (*UnimplementedCustomAPIServer) RevokeAgentCert(ctx context.Context, req *RevokeAgentCertRequest) (*RevokeAgentCertResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RevokeAgentCert not implemented")
}

func RegisterCustomAPIServer(s *grpc.Server, srv CustomAPIServer) {
	s.RegisterService(&_CustomAPI_serviceDesc, srv)
}

func _CustomAPI_GenerateAgentCert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenerateAgentCertRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomAPIServer).GenerateAgentCert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.nginx.nms.agent_certs.CustomAPI/GenerateAgentCert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomAPIServer).GenerateAgentCert(ctx, req.(*GenerateAgentCertRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomAPI_RevokeAgentCert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RevokeAgentCertRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomAPIServer).RevokeAgentCert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.nginx.nms.agent_certs.CustomAPI/RevokeAgentCert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomAPIServer).RevokeAgentCert(ctx, req.(*RevokeAgentCertRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CustomAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ves.io.schema.nginx.nms.agent_certs.CustomAPI",
	HandlerType: (*CustomAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GenerateAgentCert",
			Handler:    _CustomAPI_GenerateAgentCert_Handler,
		},
		{
			MethodName: "RevokeAgentCert",
			Handler:    _CustomAPI_RevokeAgentCert_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ves.io/schema/nginx/nms/agent_certs/public_customapi.proto",
}
