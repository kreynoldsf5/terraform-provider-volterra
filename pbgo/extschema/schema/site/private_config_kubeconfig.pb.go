// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ves.io/schema/site/private_config_kubeconfig.proto

// Private Site KubeConfig custom API
//
// x-displayName: "Site"
// API for manage kube configs.

package site

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/googleapis/google/api"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/gogo/protobuf/types"
	golang_proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/httpbody"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	_ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"
	_ "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/vesenv"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

func init() {
	proto.RegisterFile("ves.io/schema/site/private_config_kubeconfig.proto", fileDescriptor_e15f0678def72b77)
}
func init() {
	golang_proto.RegisterFile("ves.io/schema/site/private_config_kubeconfig.proto", fileDescriptor_e15f0678def72b77)
}

var fileDescriptor_e15f0678def72b77 = []byte{
	// 470 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x51, 0x31, 0x6b, 0x14, 0x41,
	0x18, 0xdd, 0x39, 0xc4, 0x22, 0x95, 0xac, 0x08, 0xc9, 0x2a, 0x23, 0xa4, 0xb1, 0x71, 0x77, 0x20,
	0xfe, 0x82, 0x18, 0x44, 0xc5, 0xc2, 0x60, 0x69, 0xe1, 0x39, 0x33, 0xf7, 0xdd, 0xdc, 0x78, 0xbb,
	0xfb, 0x8d, 0x33, 0xb3, 0x8b, 0x41, 0x02, 0x72, 0xfe, 0x01, 0xc1, 0x3f, 0xe1, 0x4f, 0x10, 0xd2,
	0x5c, 0x67, 0x2a, 0x39, 0xb4, 0x49, 0xe9, 0xed, 0x59, 0x58, 0xa6, 0xb4, 0x94, 0x9b, 0xdd, 0x8b,
	0x77, 0x98, 0xc2, 0x66, 0x79, 0xb3, 0xef, 0x7d, 0x8f, 0xef, 0x7b, 0x6f, 0x6b, 0xaf, 0x06, 0x97,
	0x69, 0x64, 0x4e, 0x8e, 0xa0, 0xe0, 0xcc, 0x69, 0x0f, 0xcc, 0x58, 0x5d, 0x73, 0x0f, 0x7d, 0x89,
	0xe5, 0x50, 0xab, 0xfe, 0xb8, 0x12, 0xd0, 0xc2, 0xcc, 0x58, 0xf4, 0x18, 0xc7, 0xed, 0x4c, 0xd6,
	0xce, 0x64, 0xcb, 0x99, 0x24, 0x55, 0xda, 0x8f, 0x2a, 0x91, 0x49, 0x2c, 0x98, 0x42, 0x85, 0x2c,
	0x48, 0x45, 0x35, 0x0c, 0xaf, 0xf0, 0x08, 0xa8, 0xb5, 0x48, 0x6e, 0x29, 0x44, 0x95, 0x03, 0xe3,
	0x46, 0x33, 0x5e, 0x96, 0xe8, 0xb9, 0xd7, 0x58, 0xba, 0x8e, 0xdd, 0x59, 0x63, 0x47, 0xde, 0x1b,
	0x81, 0x83, 0xa3, 0x8e, 0xba, 0xdd, 0x51, 0x17, 0xf6, 0x5e, 0x17, 0xe0, 0x3c, 0x2f, 0x4c, 0x27,
	0xb8, 0xb9, 0x79, 0x10, 0x9a, 0x75, 0x63, 0x7a, 0xc9, 0xb5, 0xfe, 0xc8, 0xc0, 0x8a, 0xdf, 0xdd,
	0xe4, 0x6b, 0x70, 0x50, 0xd6, 0x9b, 0x1e, 0x7b, 0xd3, 0xde, 0x56, 0x72, 0xd8, 0x26, 0x74, 0x10,
	0x52, 0x79, 0x52, 0x89, 0x0e, 0xed, 0x1f, 0x3e, 0x8e, 0x7f, 0x93, 0xad, 0xeb, 0x0f, 0x73, 0x14,
	0x3c, 0xdf, 0x97, 0x12, 0x9c, 0x7b, 0x50, 0x72, 0x91, 0xc3, 0x20, 0xbe, 0x9b, 0xfd, 0x9b, 0x5a,
	0xb6, 0x2e, 0x3c, 0x18, 0x81, 0x1c, 0x3f, 0x83, 0xd7, 0x15, 0x38, 0x9f, 0xa4, 0xff, 0xa9, 0x76,
	0x06, 0x4b, 0x07, 0xbb, 0xef, 0xc9, 0xe9, 0xe7, 0x1e, 0x69, 0xbe, 0x6c, 0xdf, 0xa8, 0xc1, 0xa5,
	0x1a, 0x53, 0xcd, 0xb9, 0x4b, 0xe5, 0xf2, 0x63, 0x81, 0x0f, 0x26, 0xdf, 0x7f, 0x7e, 0xec, 0xbd,
	0x8c, 0x5f, 0xb0, 0x0d, 0x53, 0xa6, 0x4b, 0x6f, 0xd1, 0x19, 0x90, 0x9e, 0x2d, 0x55, 0xab, 0xde,
	0x59, 0xc9, 0x0b, 0x70, 0x86, 0x4b, 0x70, 0xec, 0xed, 0x05, 0x3e, 0x0e, 0x69, 0x75, 0x7f, 0x8e,
	0x99, 0x0a, 0xbb, 0xf4, 0x79, 0x58, 0xa6, 0x2f, 0x97, 0xdb, 0x24, 0x77, 0xa6, 0x27, 0xe4, 0xca,
	0xb7, 0x13, 0xb2, 0x73, 0xc9, 0xee, 0x4f, 0xc5, 0x2b, 0x90, 0x7e, 0xf2, 0x75, 0xbb, 0x77, 0x8d,
	0xdc, 0x9f, 0x90, 0xd9, 0x9c, 0x46, 0x67, 0x73, 0x1a, 0x9d, 0xcf, 0x29, 0x79, 0xd7, 0x50, 0xf2,
	0xa9, 0xa1, 0xe4, 0xb4, 0xa1, 0x64, 0xd6, 0x50, 0xf2, 0xa3, 0xa1, 0xe4, 0x57, 0x43, 0xa3, 0xf3,
	0x86, 0x92, 0x0f, 0x0b, 0x1a, 0x4d, 0x17, 0x94, 0xcc, 0x16, 0x34, 0x3a, 0x5b, 0xd0, 0xe8, 0xf9,
	0x23, 0x85, 0x66, 0xac, 0xb2, 0x1a, 0x73, 0x0f, 0xd6, 0xf2, 0xac, 0x72, 0x2c, 0x80, 0x21, 0xda,
	0x22, 0x35, 0x16, 0x6b, 0x3d, 0x00, 0x9b, 0xae, 0x68, 0x66, 0x84, 0x42, 0x06, 0x6f, 0xfc, 0xaa,
	0xf0, 0xbf, 0xbd, 0x8b, 0xab, 0xa1, 0xce, 0x7b, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x48, 0x53,
	0x77, 0x11, 0x02, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PrivateConfigKubeConfigAPIClient is the client API for PrivateConfigKubeConfigAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PrivateConfigKubeConfigAPIClient interface {
	// Check Global Accesss Enabled
	//
	// x-displayName: "Global Access Check"
	// API to check global access is enabled or not.
	GlobalAccessEnabled(ctx context.Context, in *GlobalAccessCheckRequest, opts ...grpc.CallOption) (*GlobalAccessCheckResponse, error)
}

type privateConfigKubeConfigAPIClient struct {
	cc *grpc.ClientConn
}

func NewPrivateConfigKubeConfigAPIClient(cc *grpc.ClientConn) PrivateConfigKubeConfigAPIClient {
	return &privateConfigKubeConfigAPIClient{cc}
}

func (c *privateConfigKubeConfigAPIClient) GlobalAccessEnabled(ctx context.Context, in *GlobalAccessCheckRequest, opts ...grpc.CallOption) (*GlobalAccessCheckResponse, error) {
	out := new(GlobalAccessCheckResponse)
	err := c.cc.Invoke(ctx, "/ves.io.schema.site.PrivateConfigKubeConfigAPI/GlobalAccessEnabled", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PrivateConfigKubeConfigAPIServer is the server API for PrivateConfigKubeConfigAPI service.
type PrivateConfigKubeConfigAPIServer interface {
	// Check Global Accesss Enabled
	//
	// x-displayName: "Global Access Check"
	// API to check global access is enabled or not.
	GlobalAccessEnabled(context.Context, *GlobalAccessCheckRequest) (*GlobalAccessCheckResponse, error)
}

// UnimplementedPrivateConfigKubeConfigAPIServer can be embedded to have forward compatible implementations.
type UnimplementedPrivateConfigKubeConfigAPIServer struct {
}

func (*UnimplementedPrivateConfigKubeConfigAPIServer) GlobalAccessEnabled(ctx context.Context, req *GlobalAccessCheckRequest) (*GlobalAccessCheckResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GlobalAccessEnabled not implemented")
}

func RegisterPrivateConfigKubeConfigAPIServer(s *grpc.Server, srv PrivateConfigKubeConfigAPIServer) {
	s.RegisterService(&_PrivateConfigKubeConfigAPI_serviceDesc, srv)
}

func _PrivateConfigKubeConfigAPI_GlobalAccessEnabled_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GlobalAccessCheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PrivateConfigKubeConfigAPIServer).GlobalAccessEnabled(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ves.io.schema.site.PrivateConfigKubeConfigAPI/GlobalAccessEnabled",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PrivateConfigKubeConfigAPIServer).GlobalAccessEnabled(ctx, req.(*GlobalAccessCheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PrivateConfigKubeConfigAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ves.io.schema.site.PrivateConfigKubeConfigAPI",
	HandlerType: (*PrivateConfigKubeConfigAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GlobalAccessEnabled",
			Handler:    _PrivateConfigKubeConfigAPI_GlobalAccessEnabled_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ves.io/schema/site/private_config_kubeconfig.proto",
}
