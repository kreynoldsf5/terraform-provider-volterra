// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ves.io/schema/views/api_inventory/types.proto

package api_inventory

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	golang_proto "github.com/golang/protobuf/proto"
	schema "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"
	views "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/views"
	api_definition "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/views/api_definition"
	app_api_group "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema/views/app_api_group"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strconv "strconv"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// ApiEndpointOrigin
//
// x-displayName: "API Endpoint Origin"
// The origin of an endpoint in the API Inventory.
type ApiEndpointOrigin int32

const (
	// x-displayName: "API Endpoint Origin Unknown"
	// ORIGIN UNKNOWN is the default origin for an endpoint in the API Inventory.
	ORIGIN_UNKNOWN ApiEndpointOrigin = 0
	// x-displayName: "API Endpoint Origin Swagger"
	// ORIGIN SWAGGER marks an endpoint which was imported from swagger.
	ORIGIN_SWAGGER ApiEndpointOrigin = 1
	// x-displayName: "API Endpoint Origin Discovered"
	// ORIGIN DISCOVERED marks an endpoint which was discovered.
	ORIGIN_DISCOVERED ApiEndpointOrigin = 2
)

var ApiEndpointOrigin_name = map[int32]string{
	0: "ORIGIN_UNKNOWN",
	1: "ORIGIN_SWAGGER",
	2: "ORIGIN_DISCOVERED",
}

var ApiEndpointOrigin_value = map[string]int32{
	"ORIGIN_UNKNOWN":    0,
	"ORIGIN_SWAGGER":    1,
	"ORIGIN_DISCOVERED": 2,
}

func (ApiEndpointOrigin) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a97fa5c4b65be4fc, []int{0}
}

// GlobalSpecType
//
// x-displayName: "Specification"
// x-required
// Shape of api_inventory in the storage backend.
type GlobalSpecType struct {
	// Internal API Groups Builders
	//
	// x-displayName: "Internal API Groups Builders"
	// API Groups builders define how to create API groups from a list of endpoints.
	// Note: the builders are managed via custom API.
	InternalApiGroupsBuilders []*api_definition.ApiGroupBuilder `protobuf:"bytes,1,rep,name=internal_api_groups_builders,json=internalApiGroupsBuilders,proto3" json:"internal_api_groups_builders,omitempty"`
	// API Definition
	//
	// x-displayName: "API Definition"
	// A reference to an API Definition object to be used as a source of user OpenAPI specifications
	ApiDefinitionRef *views.ObjectRefType `protobuf:"bytes,2,opt,name=api_definition_ref,json=apiDefinitionRef,proto3" json:"api_definition_ref,omitempty"`
	// view_internal
	//
	// x-displayName: "View Internal"
	// Reference to view internal object.
	ViewInternal *views.ObjectRefType `protobuf:"bytes,1000,opt,name=view_internal,json=viewInternal,proto3" json:"view_internal,omitempty"`
}

func (m *GlobalSpecType) Reset()      { *m = GlobalSpecType{} }
func (*GlobalSpecType) ProtoMessage() {}
func (*GlobalSpecType) Descriptor() ([]byte, []int) {
	return fileDescriptor_a97fa5c4b65be4fc, []int{0}
}
func (m *GlobalSpecType) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GlobalSpecType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *GlobalSpecType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GlobalSpecType.Merge(m, src)
}
func (m *GlobalSpecType) XXX_Size() int {
	return m.Size()
}
func (m *GlobalSpecType) XXX_DiscardUnknown() {
	xxx_messageInfo_GlobalSpecType.DiscardUnknown(m)
}

var xxx_messageInfo_GlobalSpecType proto.InternalMessageInfo

func (m *GlobalSpecType) GetInternalApiGroupsBuilders() []*api_definition.ApiGroupBuilder {
	if m != nil {
		return m.InternalApiGroupsBuilders
	}
	return nil
}

func (m *GlobalSpecType) GetApiDefinitionRef() *views.ObjectRefType {
	if m != nil {
		return m.ApiDefinitionRef
	}
	return nil
}

func (m *GlobalSpecType) GetViewInternal() *views.ObjectRefType {
	if m != nil {
		return m.ViewInternal
	}
	return nil
}

// Api Endpoint
//
// x-displayName: "API Endpoint"
// The API Endpoint is the item of the API Inventory
type ApiEndpoint struct {
	// method
	//
	// x-displayName: "HTTP Method"
	// x-required
	// x-example: 'POST'
	// Method to match the input request API method against.
	Method schema.HttpMethod `protobuf:"varint,1,opt,name=method,proto3,enum=ves.io.schema.HttpMethod" json:"method,omitempty"`
	// path
	//
	// x-displayName: "Path"
	// x-required
	// x-example: "/api/users/{userid}"
	// An endpoint path, as specified in OpenAPI, including parameters.
	// The path should comply with RFC 3986 and may have parameters according to OpenAPI specification
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	// origin
	//
	// x-displayName: "API Endpoint Origin"
	// x-example: 'ORIGIN_SWAGGER'
	// The origin of an endpoint in the API Inventory.
	Origin ApiEndpointOrigin `protobuf:"varint,3,opt,name=origin,proto3,enum=ves.io.schema.views.api_inventory.ApiEndpointOrigin" json:"origin,omitempty"`
}

func (m *ApiEndpoint) Reset()      { *m = ApiEndpoint{} }
func (*ApiEndpoint) ProtoMessage() {}
func (*ApiEndpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_a97fa5c4b65be4fc, []int{1}
}
func (m *ApiEndpoint) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ApiEndpoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ApiEndpoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApiEndpoint.Merge(m, src)
}
func (m *ApiEndpoint) XXX_Size() int {
	return m.Size()
}
func (m *ApiEndpoint) XXX_DiscardUnknown() {
	xxx_messageInfo_ApiEndpoint.DiscardUnknown(m)
}

var xxx_messageInfo_ApiEndpoint proto.InternalMessageInfo

func (m *ApiEndpoint) GetMethod() schema.HttpMethod {
	if m != nil {
		return m.Method
	}
	return schema.ANY
}

func (m *ApiEndpoint) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *ApiEndpoint) GetOrigin() ApiEndpointOrigin {
	if m != nil {
		return m.Origin
	}
	return ORIGIN_UNKNOWN
}

// Custom API Group
//
// x-displayName: "Custom API Group"
// The Custom API Group holds an API Group together with a builder
// which defines how the group is derived from the API Inventory.
type CustomApiGroup struct {
	// API Group Builder
	//
	// x-displayName: "API Group Builder"
	// An Api Group Builder of the API Inventory
	ApiGroupBuilder *api_definition.ApiGroupBuilder `protobuf:"bytes,1,opt,name=api_group_builder,json=apiGroupBuilder,proto3" json:"api_group_builder,omitempty"`
	// Api Group
	//
	// x-displayName: "Api Group"
	// An API Group defined by the API Group Builder
	ApiGroup *app_api_group.GlobalSpecType `protobuf:"bytes,2,opt,name=api_group,json=apiGroup,proto3" json:"api_group,omitempty"`
}

func (m *CustomApiGroup) Reset()      { *m = CustomApiGroup{} }
func (*CustomApiGroup) ProtoMessage() {}
func (*CustomApiGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_a97fa5c4b65be4fc, []int{2}
}
func (m *CustomApiGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CustomApiGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *CustomApiGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CustomApiGroup.Merge(m, src)
}
func (m *CustomApiGroup) XXX_Size() int {
	return m.Size()
}
func (m *CustomApiGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_CustomApiGroup.DiscardUnknown(m)
}

var xxx_messageInfo_CustomApiGroup proto.InternalMessageInfo

func (m *CustomApiGroup) GetApiGroupBuilder() *api_definition.ApiGroupBuilder {
	if m != nil {
		return m.ApiGroupBuilder
	}
	return nil
}

func (m *CustomApiGroup) GetApiGroup() *app_api_group.GlobalSpecType {
	if m != nil {
		return m.ApiGroup
	}
	return nil
}

func init() {
	proto.RegisterEnum("ves.io.schema.views.api_inventory.ApiEndpointOrigin", ApiEndpointOrigin_name, ApiEndpointOrigin_value)
	golang_proto.RegisterEnum("ves.io.schema.views.api_inventory.ApiEndpointOrigin", ApiEndpointOrigin_name, ApiEndpointOrigin_value)
	proto.RegisterType((*GlobalSpecType)(nil), "ves.io.schema.views.api_inventory.GlobalSpecType")
	golang_proto.RegisterType((*GlobalSpecType)(nil), "ves.io.schema.views.api_inventory.GlobalSpecType")
	proto.RegisterType((*ApiEndpoint)(nil), "ves.io.schema.views.api_inventory.ApiEndpoint")
	golang_proto.RegisterType((*ApiEndpoint)(nil), "ves.io.schema.views.api_inventory.ApiEndpoint")
	proto.RegisterType((*CustomApiGroup)(nil), "ves.io.schema.views.api_inventory.CustomApiGroup")
	golang_proto.RegisterType((*CustomApiGroup)(nil), "ves.io.schema.views.api_inventory.CustomApiGroup")
}

func init() {
	proto.RegisterFile("ves.io/schema/views/api_inventory/types.proto", fileDescriptor_a97fa5c4b65be4fc)
}
func init() {
	golang_proto.RegisterFile("ves.io/schema/views/api_inventory/types.proto", fileDescriptor_a97fa5c4b65be4fc)
}

var fileDescriptor_a97fa5c4b65be4fc = []byte{
	// 654 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0x4f, 0x6f, 0x12, 0x41,
	0x14, 0xdf, 0x29, 0xa6, 0x7f, 0xa6, 0x4a, 0xe9, 0xc6, 0x26, 0x14, 0x9b, 0x11, 0xf1, 0x42, 0x4c,
	0x98, 0x4d, 0x5b, 0xbf, 0x40, 0x69, 0x09, 0x12, 0x15, 0x92, 0xad, 0xda, 0xc4, 0x83, 0x9b, 0x5d,
	0x18, 0x96, 0x51, 0xd8, 0x99, 0xcc, 0x0e, 0x68, 0x0f, 0x24, 0xfd, 0x08, 0xbd, 0xf8, 0x1d, 0x4c,
	0xaf, 0xde, 0xf4, 0x52, 0x6f, 0x1e, 0x7b, 0xe4, 0x68, 0x97, 0x4b, 0xbd, 0xf5, 0x23, 0x18, 0x86,
	0x5d, 0xca, 0xb6, 0x25, 0x1a, 0x6f, 0x33, 0xef, 0xfd, 0xde, 0xef, 0xf7, 0x7b, 0xfb, 0xde, 0x2c,
	0x2c, 0xf4, 0x88, 0x8f, 0x29, 0x33, 0xfc, 0x7a, 0x8b, 0x74, 0x6c, 0xa3, 0x47, 0xc9, 0x47, 0xdf,
	0xb0, 0x39, 0xb5, 0xa8, 0xd7, 0x23, 0x9e, 0x64, 0xe2, 0xd0, 0x90, 0x87, 0x9c, 0xf8, 0x98, 0x0b,
	0x26, 0x99, 0xfe, 0x68, 0x0c, 0xc7, 0x63, 0x38, 0x56, 0x70, 0x1c, 0x83, 0x67, 0x0a, 0x2e, 0x95,
	0xad, 0xae, 0x83, 0xeb, 0xac, 0x63, 0xb8, 0xcc, 0x65, 0x86, 0xaa, 0x74, 0xba, 0x4d, 0x75, 0x53,
	0x17, 0x75, 0x1a, 0x33, 0x66, 0x1e, 0xc4, 0x0d, 0x30, 0x2e, 0x29, 0xf3, 0x42, 0xb9, 0xcc, 0x7a,
	0x3c, 0x39, 0xe5, 0x24, 0xb3, 0x71, 0xcd, 0xb8, 0xdd, 0xa6, 0x0d, 0x5b, 0x92, 0x30, 0x9b, 0xbd,
	0xd9, 0x96, 0x15, 0xa7, 0xc6, 0xb3, 0x1a, 0x6f, 0x90, 0x26, 0xf5, 0xe8, 0x08, 0x1a, 0xd3, 0x9b,
	0xf1, 0xa1, 0xb8, 0x35, 0xaa, 0x71, 0x05, 0xeb, 0xf2, 0x18, 0xfc, 0xe1, 0x6d, 0xf0, 0x29, 0x40,
	0x6e, 0x30, 0x07, 0x93, 0xe5, 0x36, 0x73, 0xec, 0xf6, 0x3e, 0x27, 0xf5, 0x57, 0x87, 0x9c, 0xe8,
	0x7d, 0xb8, 0x41, 0x3d, 0x49, 0x84, 0x67, 0xb7, 0xaf, 0x58, 0x7d, 0xcb, 0xe9, 0xd2, 0x76, 0x83,
	0x08, 0x3f, 0x0d, 0xb2, 0x89, 0xfc, 0xf2, 0xd6, 0x36, 0x9e, 0x35, 0x83, 0x2b, 0xe7, 0x78, 0x87,
	0xd3, 0xf2, 0xa8, 0xba, 0x38, 0xae, 0x2d, 0x2e, 0x0c, 0xfa, 0xe0, 0xe2, 0x3b, 0x00, 0xe6, 0x7a,
	0xa4, 0x10, 0x21, 0xfc, 0x10, 0xe2, 0xeb, 0x2e, 0xd4, 0xe3, 0x2c, 0x96, 0x20, 0xcd, 0xf4, 0x5c,
	0x16, 0xe4, 0x97, 0xb7, 0x72, 0xb7, 0x8a, 0xd6, 0x9c, 0xf7, 0xa4, 0x2e, 0x4d, 0xd2, 0x1c, 0xd9,
	0x2f, 0xae, 0x9d, 0xf4, 0x93, 0x71, 0x02, 0xa5, 0x98, 0xb2, 0x39, 0xdd, 0x9b, 0x84, 0x4c, 0xd2,
	0xd4, 0xdf, 0xc1, 0x7b, 0x6a, 0x20, 0x91, 0x95, 0xf4, 0xc5, 0xc2, 0x3f, 0x8b, 0xdc, 0x3f, 0xe9,
	0xc7, 0x8b, 0x95, 0xc6, 0xdd, 0x51, 0xa8, 0x12, 0x46, 0x72, 0x5f, 0x01, 0x5c, 0xde, 0xe1, 0xb4,
	0xe4, 0x35, 0x38, 0xa3, 0x9e, 0xd4, 0x37, 0xe1, 0x7c, 0x87, 0xc8, 0x16, 0x6b, 0xa4, 0x41, 0x16,
	0xe4, 0x93, 0x5b, 0xeb, 0xd7, 0x74, 0x9e, 0x49, 0xc9, 0x5f, 0x2a, 0x80, 0x19, 0x02, 0xf5, 0xc7,
	0xf0, 0x0e, 0xb7, 0x65, 0x4b, 0x75, 0xbf, 0x54, 0x5c, 0xf9, 0xf6, 0xfb, 0x34, 0x01, 0xc5, 0x62,
	0x16, 0xe4, 0x8f, 0x16, 0x8f, 0x13, 0xc0, 0x54, 0x49, 0xfd, 0x05, 0x9c, 0x67, 0x82, 0xba, 0xd4,
	0x4b, 0x27, 0x14, 0xef, 0x53, 0xfc, 0xd7, 0xd7, 0x81, 0xa7, 0x7c, 0xd5, 0x54, 0xad, 0x19, 0x72,
	0xe4, 0x7e, 0x00, 0x98, 0xdc, 0xed, 0xfa, 0x92, 0x75, 0xa2, 0xd1, 0xe8, 0x16, 0x5c, 0x9d, 0xec,
	0x41, 0xb4, 0x06, 0xaa, 0x87, 0xff, 0xdb, 0x02, 0x73, 0xc5, 0x8e, 0x07, 0xf4, 0x2a, 0x5c, 0x9a,
	0x08, 0x84, 0x93, 0xde, 0x9c, 0x41, 0x3c, 0xb5, 0xe8, 0x38, 0xbe, 0xb7, 0xe6, 0x62, 0x44, 0xfb,
	0xc4, 0x84, 0xab, 0x37, 0x1a, 0xd4, 0x75, 0x98, 0xac, 0x99, 0x95, 0x72, 0xa5, 0x6a, 0xbd, 0xae,
	0x3e, 0xaf, 0xd6, 0x0e, 0xaa, 0x29, 0x6d, 0x2a, 0xb6, 0x7f, 0xb0, 0x53, 0x2e, 0x97, 0xcc, 0x14,
	0xd0, 0xd7, 0xe0, 0x6a, 0x18, 0xdb, 0xab, 0xec, 0xef, 0xd6, 0xde, 0x94, 0xcc, 0xd2, 0x5e, 0x6a,
	0xae, 0xf8, 0x19, 0x9c, 0x9d, 0x23, 0x6d, 0x70, 0x8e, 0xb4, 0xcb, 0x73, 0x04, 0x8e, 0x02, 0x04,
	0xbe, 0x04, 0x08, 0xfc, 0x0c, 0x10, 0x38, 0x0b, 0x10, 0x18, 0x04, 0x08, 0xfc, 0x0a, 0x10, 0xb8,
	0x08, 0x90, 0x76, 0x19, 0x20, 0x70, 0x3c, 0x44, 0xda, 0xe9, 0x10, 0x81, 0xb3, 0x21, 0xd2, 0x06,
	0x43, 0xa4, 0xbd, 0x3d, 0x70, 0x19, 0xff, 0xe0, 0xe2, 0x1e, 0x6b, 0x4b, 0x22, 0x84, 0x8d, 0xbb,
	0xbe, 0xa1, 0x0e, 0x4d, 0x26, 0x3a, 0x05, 0x2e, 0x58, 0x8f, 0x36, 0x88, 0x28, 0x44, 0x69, 0x83,
	0x3b, 0x2e, 0x33, 0xc8, 0x27, 0x19, 0xbe, 0xdb, 0xd9, 0xbf, 0x45, 0x67, 0x5e, 0xbd, 0xe3, 0xed,
	0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x90, 0x55, 0x30, 0x20, 0x42, 0x05, 0x00, 0x00,
}

func (x ApiEndpointOrigin) String() string {
	s, ok := ApiEndpointOrigin_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (this *GlobalSpecType) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GlobalSpecType)
	if !ok {
		that2, ok := that.(GlobalSpecType)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.InternalApiGroupsBuilders) != len(that1.InternalApiGroupsBuilders) {
		return false
	}
	for i := range this.InternalApiGroupsBuilders {
		if !this.InternalApiGroupsBuilders[i].Equal(that1.InternalApiGroupsBuilders[i]) {
			return false
		}
	}
	if !this.ApiDefinitionRef.Equal(that1.ApiDefinitionRef) {
		return false
	}
	if !this.ViewInternal.Equal(that1.ViewInternal) {
		return false
	}
	return true
}
func (this *ApiEndpoint) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ApiEndpoint)
	if !ok {
		that2, ok := that.(ApiEndpoint)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Method != that1.Method {
		return false
	}
	if this.Path != that1.Path {
		return false
	}
	if this.Origin != that1.Origin {
		return false
	}
	return true
}
func (this *CustomApiGroup) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CustomApiGroup)
	if !ok {
		that2, ok := that.(CustomApiGroup)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.ApiGroupBuilder.Equal(that1.ApiGroupBuilder) {
		return false
	}
	if !this.ApiGroup.Equal(that1.ApiGroup) {
		return false
	}
	return true
}
func (this *GlobalSpecType) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&api_inventory.GlobalSpecType{")
	if this.InternalApiGroupsBuilders != nil {
		s = append(s, "InternalApiGroupsBuilders: "+fmt.Sprintf("%#v", this.InternalApiGroupsBuilders)+",\n")
	}
	if this.ApiDefinitionRef != nil {
		s = append(s, "ApiDefinitionRef: "+fmt.Sprintf("%#v", this.ApiDefinitionRef)+",\n")
	}
	if this.ViewInternal != nil {
		s = append(s, "ViewInternal: "+fmt.Sprintf("%#v", this.ViewInternal)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ApiEndpoint) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&api_inventory.ApiEndpoint{")
	s = append(s, "Method: "+fmt.Sprintf("%#v", this.Method)+",\n")
	s = append(s, "Path: "+fmt.Sprintf("%#v", this.Path)+",\n")
	s = append(s, "Origin: "+fmt.Sprintf("%#v", this.Origin)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *CustomApiGroup) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&api_inventory.CustomApiGroup{")
	if this.ApiGroupBuilder != nil {
		s = append(s, "ApiGroupBuilder: "+fmt.Sprintf("%#v", this.ApiGroupBuilder)+",\n")
	}
	if this.ApiGroup != nil {
		s = append(s, "ApiGroup: "+fmt.Sprintf("%#v", this.ApiGroup)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringTypes(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
func (m *GlobalSpecType) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GlobalSpecType) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GlobalSpecType) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ViewInternal != nil {
		{
			size, err := m.ViewInternal.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3e
		i--
		dAtA[i] = 0xc2
	}
	if m.ApiDefinitionRef != nil {
		{
			size, err := m.ApiDefinitionRef.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.InternalApiGroupsBuilders) > 0 {
		for iNdEx := len(m.InternalApiGroupsBuilders) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.InternalApiGroupsBuilders[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTypes(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *ApiEndpoint) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ApiEndpoint) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ApiEndpoint) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Origin != 0 {
		i = encodeVarintTypes(dAtA, i, uint64(m.Origin))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Path) > 0 {
		i -= len(m.Path)
		copy(dAtA[i:], m.Path)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.Path)))
		i--
		dAtA[i] = 0x12
	}
	if m.Method != 0 {
		i = encodeVarintTypes(dAtA, i, uint64(m.Method))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CustomApiGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CustomApiGroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CustomApiGroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ApiGroup != nil {
		{
			size, err := m.ApiGroup.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.ApiGroupBuilder != nil {
		{
			size, err := m.ApiGroupBuilder.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintTypes(dAtA []byte, offset int, v uint64) int {
	offset -= sovTypes(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *GlobalSpecType) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.InternalApiGroupsBuilders) > 0 {
		for _, e := range m.InternalApiGroupsBuilders {
			l = e.Size()
			n += 1 + l + sovTypes(uint64(l))
		}
	}
	if m.ApiDefinitionRef != nil {
		l = m.ApiDefinitionRef.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	if m.ViewInternal != nil {
		l = m.ViewInternal.Size()
		n += 2 + l + sovTypes(uint64(l))
	}
	return n
}

func (m *ApiEndpoint) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Method != 0 {
		n += 1 + sovTypes(uint64(m.Method))
	}
	l = len(m.Path)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	if m.Origin != 0 {
		n += 1 + sovTypes(uint64(m.Origin))
	}
	return n
}

func (m *CustomApiGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ApiGroupBuilder != nil {
		l = m.ApiGroupBuilder.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	if m.ApiGroup != nil {
		l = m.ApiGroup.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}

func sovTypes(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTypes(x uint64) (n int) {
	return sovTypes(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *GlobalSpecType) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForInternalApiGroupsBuilders := "[]*ApiGroupBuilder{"
	for _, f := range this.InternalApiGroupsBuilders {
		repeatedStringForInternalApiGroupsBuilders += strings.Replace(fmt.Sprintf("%v", f), "ApiGroupBuilder", "api_definition.ApiGroupBuilder", 1) + ","
	}
	repeatedStringForInternalApiGroupsBuilders += "}"
	s := strings.Join([]string{`&GlobalSpecType{`,
		`InternalApiGroupsBuilders:` + repeatedStringForInternalApiGroupsBuilders + `,`,
		`ApiDefinitionRef:` + strings.Replace(fmt.Sprintf("%v", this.ApiDefinitionRef), "ObjectRefType", "views.ObjectRefType", 1) + `,`,
		`ViewInternal:` + strings.Replace(fmt.Sprintf("%v", this.ViewInternal), "ObjectRefType", "views.ObjectRefType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ApiEndpoint) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ApiEndpoint{`,
		`Method:` + fmt.Sprintf("%v", this.Method) + `,`,
		`Path:` + fmt.Sprintf("%v", this.Path) + `,`,
		`Origin:` + fmt.Sprintf("%v", this.Origin) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CustomApiGroup) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CustomApiGroup{`,
		`ApiGroupBuilder:` + strings.Replace(fmt.Sprintf("%v", this.ApiGroupBuilder), "ApiGroupBuilder", "api_definition.ApiGroupBuilder", 1) + `,`,
		`ApiGroup:` + strings.Replace(fmt.Sprintf("%v", this.ApiGroup), "GlobalSpecType", "app_api_group.GlobalSpecType", 1) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringTypes(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *GlobalSpecType) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GlobalSpecType: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GlobalSpecType: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InternalApiGroupsBuilders", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InternalApiGroupsBuilders = append(m.InternalApiGroupsBuilders, &api_definition.ApiGroupBuilder{})
			if err := m.InternalApiGroupsBuilders[len(m.InternalApiGroupsBuilders)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiDefinitionRef", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ApiDefinitionRef == nil {
				m.ApiDefinitionRef = &views.ObjectRefType{}
			}
			if err := m.ApiDefinitionRef.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 1000:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ViewInternal", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ViewInternal == nil {
				m.ViewInternal = &views.ObjectRefType{}
			}
			if err := m.ViewInternal.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ApiEndpoint) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ApiEndpoint: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ApiEndpoint: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Method", wireType)
			}
			m.Method = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Method |= schema.HttpMethod(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Path", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Path = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Origin", wireType)
			}
			m.Origin = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Origin |= ApiEndpointOrigin(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CustomApiGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CustomApiGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CustomApiGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiGroupBuilder", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ApiGroupBuilder == nil {
				m.ApiGroupBuilder = &api_definition.ApiGroupBuilder{}
			}
			if err := m.ApiGroupBuilder.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiGroup", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ApiGroup == nil {
				m.ApiGroup = &app_api_group.GlobalSpecType{}
			}
			if err := m.ApiGroup.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTypes(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTypes
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTypes
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTypes
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTypes        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTypes          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTypes = fmt.Errorf("proto: unexpected end of group")
)
