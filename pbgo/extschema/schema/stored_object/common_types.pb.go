// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ves.io/schema/stored_object/common_types.proto

package stored_object

import (
	bytes "bytes"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	golang_proto "github.com/golang/protobuf/proto"
	schema "github.com/volterraedge/terraform-provider-volterra/pbgo/extschema/schema"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strconv "strconv"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// QueryType
//
// x-displayName: "Query Type"
// The type of search query needs to be performed. Could be EXACT_MATCH or PREFIX_MATCH.
// EXACT_MATCH returns the objects with exact match on the name filed, while PREFIX_MATCH returns the list of object having the 'name' as prefix. Default is EXACT_MATCH.
type QueryType int32

const (
	// EXACT_MATCH
	//
	// x-displayName: "EXACT MATCH"
	// Returns list of objects with exact match on the name filed.
	EXACT_MATCH QueryType = 0
	// PREFIX_MATCH
	//
	// x-displayName: "PREFIX MATCH"
	// Returns the list of object matching the 'name' prefix.
	PREFIX_MATCH QueryType = 1
)

var QueryType_name = map[int32]string{
	0: "EXACT_MATCH",
	1: "PREFIX_MATCH",
}

var QueryType_value = map[string]int32{
	"EXACT_MATCH":  0,
	"PREFIX_MATCH": 1,
}

func (QueryType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_26a4f37803eefdf5, []int{0}
}

// CreateObjectRequest
//
// x-displayName: "Create Object Request"
// Request message for CreateObject API
type CreateObjectRequest struct {
	// namespace
	//
	// x-displayName: "Namespace"
	// x-example: "system"
	// x-required
	// Namespace in which object is to be created
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// object_type
	//
	// x-displayName: "Object Type"
	// x-example: "swagger"
	// x-required
	// Type of the stored_object
	ObjectType string `protobuf:"bytes,2,opt,name=object_type,json=objectType,proto3" json:"object_type,omitempty"`
	// name
	//
	// x-displayName: "Name"
	// x-example: "volt-api-specs"
	// x-required
	// Name of the stored_object.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// contents
	//
	// x-displayName: "Object Contents"
	// contents of the stored object.
	//
	// Types that are valid to be assigned to Contents:
	//	*CreateObjectRequest_StringValue
	//	*CreateObjectRequest_BytesValue
	Contents isCreateObjectRequest_Contents `protobuf_oneof:"contents"`
	// content_format
	//
	// x-displayName: "Content Format"
	// x-example: "json, yaml"
	// The optional content format associated with object
	ContentFormat string `protobuf:"bytes,7,opt,name=content_format,json=contentFormat,proto3" json:"content_format,omitempty"`
	// description
	//
	// x-displayName: "Description"
	// x-example: "value"
	// The optional description associated with object
	Description string `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
}

func (m *CreateObjectRequest) Reset()      { *m = CreateObjectRequest{} }
func (*CreateObjectRequest) ProtoMessage() {}
func (*CreateObjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_26a4f37803eefdf5, []int{0}
}
func (m *CreateObjectRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateObjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *CreateObjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateObjectRequest.Merge(m, src)
}
func (m *CreateObjectRequest) XXX_Size() int {
	return m.Size()
}
func (m *CreateObjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateObjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateObjectRequest proto.InternalMessageInfo

type isCreateObjectRequest_Contents interface {
	isCreateObjectRequest_Contents()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type CreateObjectRequest_StringValue struct {
	StringValue string `protobuf:"bytes,4,opt,name=string_value,json=stringValue,proto3,oneof" json:"string_value,omitempty"`
}
type CreateObjectRequest_BytesValue struct {
	BytesValue []byte `protobuf:"bytes,5,opt,name=bytes_value,json=bytesValue,proto3,oneof" json:"bytes_value,omitempty"`
}

func (*CreateObjectRequest_StringValue) isCreateObjectRequest_Contents() {}
func (*CreateObjectRequest_BytesValue) isCreateObjectRequest_Contents()  {}

func (m *CreateObjectRequest) GetContents() isCreateObjectRequest_Contents {
	if m != nil {
		return m.Contents
	}
	return nil
}

func (m *CreateObjectRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *CreateObjectRequest) GetObjectType() string {
	if m != nil {
		return m.ObjectType
	}
	return ""
}

func (m *CreateObjectRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateObjectRequest) GetStringValue() string {
	if x, ok := m.GetContents().(*CreateObjectRequest_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (m *CreateObjectRequest) GetBytesValue() []byte {
	if x, ok := m.GetContents().(*CreateObjectRequest_BytesValue); ok {
		return x.BytesValue
	}
	return nil
}

func (m *CreateObjectRequest) GetContentFormat() string {
	if m != nil {
		return m.ContentFormat
	}
	return ""
}

func (m *CreateObjectRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*CreateObjectRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*CreateObjectRequest_StringValue)(nil),
		(*CreateObjectRequest_BytesValue)(nil),
	}
}

// CreateObjectResponse
//
// x-displayName: "Create Object Response"
// Response message for CreateObject API
type CreateObjectResponse struct {
	// metadata
	//
	// x-displayName: "Metadata"
	// Stored object metadata
	Metadata *StoredObjectDescriptor `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// additional info
	//
	// x-displayName: "Additional Info"
	// x-example: "value"
	// Additional Info for create response
	//
	// Types that are valid to be assigned to AdditionalInfo:
	//	*CreateObjectResponse_NoAdditionalInfo
	//	*CreateObjectResponse_PresignedUrl
	AdditionalInfo isCreateObjectResponse_AdditionalInfo `protobuf_oneof:"additional_info"`
}

func (m *CreateObjectResponse) Reset()      { *m = CreateObjectResponse{} }
func (*CreateObjectResponse) ProtoMessage() {}
func (*CreateObjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_26a4f37803eefdf5, []int{1}
}
func (m *CreateObjectResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateObjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *CreateObjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateObjectResponse.Merge(m, src)
}
func (m *CreateObjectResponse) XXX_Size() int {
	return m.Size()
}
func (m *CreateObjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateObjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateObjectResponse proto.InternalMessageInfo

type isCreateObjectResponse_AdditionalInfo interface {
	isCreateObjectResponse_AdditionalInfo()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type CreateObjectResponse_NoAdditionalInfo struct {
	NoAdditionalInfo *schema.Empty `protobuf:"bytes,4,opt,name=no_additional_info,json=noAdditionalInfo,proto3,oneof" json:"no_additional_info,omitempty"`
}
type CreateObjectResponse_PresignedUrl struct {
	PresignedUrl *PreSignedUrl `protobuf:"bytes,5,opt,name=presigned_url,json=presignedUrl,proto3,oneof" json:"presigned_url,omitempty"`
}

func (*CreateObjectResponse_NoAdditionalInfo) isCreateObjectResponse_AdditionalInfo() {}
func (*CreateObjectResponse_PresignedUrl) isCreateObjectResponse_AdditionalInfo()     {}

func (m *CreateObjectResponse) GetAdditionalInfo() isCreateObjectResponse_AdditionalInfo {
	if m != nil {
		return m.AdditionalInfo
	}
	return nil
}

func (m *CreateObjectResponse) GetMetadata() *StoredObjectDescriptor {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *CreateObjectResponse) GetNoAdditionalInfo() *schema.Empty {
	if x, ok := m.GetAdditionalInfo().(*CreateObjectResponse_NoAdditionalInfo); ok {
		return x.NoAdditionalInfo
	}
	return nil
}

func (m *CreateObjectResponse) GetPresignedUrl() *PreSignedUrl {
	if x, ok := m.GetAdditionalInfo().(*CreateObjectResponse_PresignedUrl); ok {
		return x.PresignedUrl
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*CreateObjectResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*CreateObjectResponse_NoAdditionalInfo)(nil),
		(*CreateObjectResponse_PresignedUrl)(nil),
	}
}

// GetObjectRequest
//
// x-displayName: "Get Object Request"
// Request message for GetObject API
type GetObjectRequest struct {
	// namespace
	//
	// x-displayName: "Namespace"
	// x-example: "system"
	// x-required
	// Namespace of the stored_object
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// object_type
	//
	// x-displayName: "Object Type"
	// x-example: "swagger"
	// x-required
	// Type of the stored_object
	ObjectType string `protobuf:"bytes,2,opt,name=object_type,json=objectType,proto3" json:"object_type,omitempty"`
	// name
	//
	// x-displayName: "Name"
	// x-example: "volt-api-specs"
	// x-required
	// Name of the stored_object
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// version
	//
	// x-displayName: "Version"
	// x-example: "v0-21-09-13"
	// Version of the stored_object in "v{n}-{YY}-{MM}-{DD}" formatted string, where n is version number and YY/MM/DD is year, month and date.
	Version string `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
}

func (m *GetObjectRequest) Reset()      { *m = GetObjectRequest{} }
func (*GetObjectRequest) ProtoMessage() {}
func (*GetObjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_26a4f37803eefdf5, []int{2}
}
func (m *GetObjectRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetObjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *GetObjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetObjectRequest.Merge(m, src)
}
func (m *GetObjectRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetObjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetObjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetObjectRequest proto.InternalMessageInfo

func (m *GetObjectRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *GetObjectRequest) GetObjectType() string {
	if m != nil {
		return m.ObjectType
	}
	return ""
}

func (m *GetObjectRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetObjectRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

// GetObjectResponse
//
// x-displayName: "Get Object Response"
// Response message for GetObject API
type GetObjectResponse struct {
	// metadata
	//
	// x-displayName: "Metadata"
	// Stored object metadata
	Metadata *StoredObjectDescriptor `protobuf:"bytes,6,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// contents
	//
	// x-displayName: "Contents"
	// x-example: "value"
	// Contents of uploaded file
	//
	// Types that are valid to be assigned to Contents:
	//	*GetObjectResponse_StringValue
	//	*GetObjectResponse_BytesValue
	//	*GetObjectResponse_PresignedUrl
	Contents isGetObjectResponse_Contents `protobuf_oneof:"contents"`
	// content_format
	//
	// x-displayName: "Content Format"
	// x-example: "json, yaml"
	// The optional content format associated with object
	ContentFormat string `protobuf:"bytes,4,opt,name=content_format,json=contentFormat,proto3" json:"content_format,omitempty"`
}

func (m *GetObjectResponse) Reset()      { *m = GetObjectResponse{} }
func (*GetObjectResponse) ProtoMessage() {}
func (*GetObjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_26a4f37803eefdf5, []int{3}
}
func (m *GetObjectResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetObjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *GetObjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetObjectResponse.Merge(m, src)
}
func (m *GetObjectResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetObjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetObjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetObjectResponse proto.InternalMessageInfo

type isGetObjectResponse_Contents interface {
	isGetObjectResponse_Contents()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type GetObjectResponse_StringValue struct {
	StringValue string `protobuf:"bytes,1,opt,name=string_value,json=stringValue,proto3,oneof" json:"string_value,omitempty"`
}
type GetObjectResponse_BytesValue struct {
	BytesValue []byte `protobuf:"bytes,2,opt,name=bytes_value,json=bytesValue,proto3,oneof" json:"bytes_value,omitempty"`
}
type GetObjectResponse_PresignedUrl struct {
	PresignedUrl *PreSignedUrl `protobuf:"bytes,5,opt,name=presigned_url,json=presignedUrl,proto3,oneof" json:"presigned_url,omitempty"`
}

func (*GetObjectResponse_StringValue) isGetObjectResponse_Contents()  {}
func (*GetObjectResponse_BytesValue) isGetObjectResponse_Contents()   {}
func (*GetObjectResponse_PresignedUrl) isGetObjectResponse_Contents() {}

func (m *GetObjectResponse) GetContents() isGetObjectResponse_Contents {
	if m != nil {
		return m.Contents
	}
	return nil
}

func (m *GetObjectResponse) GetMetadata() *StoredObjectDescriptor {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *GetObjectResponse) GetStringValue() string {
	if x, ok := m.GetContents().(*GetObjectResponse_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (m *GetObjectResponse) GetBytesValue() []byte {
	if x, ok := m.GetContents().(*GetObjectResponse_BytesValue); ok {
		return x.BytesValue
	}
	return nil
}

func (m *GetObjectResponse) GetPresignedUrl() *PreSignedUrl {
	if x, ok := m.GetContents().(*GetObjectResponse_PresignedUrl); ok {
		return x.PresignedUrl
	}
	return nil
}

func (m *GetObjectResponse) GetContentFormat() string {
	if m != nil {
		return m.ContentFormat
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*GetObjectResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*GetObjectResponse_StringValue)(nil),
		(*GetObjectResponse_BytesValue)(nil),
		(*GetObjectResponse_PresignedUrl)(nil),
	}
}

// PreSignedUrl
//
// x-displayName: "Pre Signed Url"
// Pre signed url
type PreSignedUrl struct {
	// storage_provider_choice
	//
	// x-displayName: "storage_provider_choice"
	// x-example: "value"
	// Storage provider choice and relevant data
	//
	// Types that are valid to be assigned to StorageProviderChoice:
	//	*PreSignedUrl_Aws
	StorageProviderChoice isPreSignedUrl_StorageProviderChoice `protobuf_oneof:"storage_provider_choice"`
}

func (m *PreSignedUrl) Reset()      { *m = PreSignedUrl{} }
func (*PreSignedUrl) ProtoMessage() {}
func (*PreSignedUrl) Descriptor() ([]byte, []int) {
	return fileDescriptor_26a4f37803eefdf5, []int{4}
}
func (m *PreSignedUrl) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PreSignedUrl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *PreSignedUrl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PreSignedUrl.Merge(m, src)
}
func (m *PreSignedUrl) XXX_Size() int {
	return m.Size()
}
func (m *PreSignedUrl) XXX_DiscardUnknown() {
	xxx_messageInfo_PreSignedUrl.DiscardUnknown(m)
}

var xxx_messageInfo_PreSignedUrl proto.InternalMessageInfo

type isPreSignedUrl_StorageProviderChoice interface {
	isPreSignedUrl_StorageProviderChoice()
	Equal(interface{}) bool
	MarshalTo([]byte) (int, error)
	Size() int
}

type PreSignedUrl_Aws struct {
	Aws *PresignedUrlData `protobuf:"bytes,2,opt,name=aws,proto3,oneof" json:"aws,omitempty"`
}

func (*PreSignedUrl_Aws) isPreSignedUrl_StorageProviderChoice() {}

func (m *PreSignedUrl) GetStorageProviderChoice() isPreSignedUrl_StorageProviderChoice {
	if m != nil {
		return m.StorageProviderChoice
	}
	return nil
}

func (m *PreSignedUrl) GetAws() *PresignedUrlData {
	if x, ok := m.GetStorageProviderChoice().(*PreSignedUrl_Aws); ok {
		return x.Aws
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*PreSignedUrl) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*PreSignedUrl_Aws)(nil),
	}
}

// PresignedUrlData
//
// x-displayName: "Pre Signed Url Data"
// Pre signed url data
type PresignedUrlData struct {
	// url
	//
	// x-displayName: "url"
	// The url to upload or download the resource
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// method
	//
	// x-displayName: "method"
	// The method of the request matched to that url
	Method schema.HttpMethod `protobuf:"varint,2,opt,name=method,proto3,enum=ves.io.schema.HttpMethod" json:"method,omitempty"`
}

func (m *PresignedUrlData) Reset()      { *m = PresignedUrlData{} }
func (*PresignedUrlData) ProtoMessage() {}
func (*PresignedUrlData) Descriptor() ([]byte, []int) {
	return fileDescriptor_26a4f37803eefdf5, []int{5}
}
func (m *PresignedUrlData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PresignedUrlData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *PresignedUrlData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PresignedUrlData.Merge(m, src)
}
func (m *PresignedUrlData) XXX_Size() int {
	return m.Size()
}
func (m *PresignedUrlData) XXX_DiscardUnknown() {
	xxx_messageInfo_PresignedUrlData.DiscardUnknown(m)
}

var xxx_messageInfo_PresignedUrlData proto.InternalMessageInfo

func (m *PresignedUrlData) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *PresignedUrlData) GetMethod() schema.HttpMethod {
	if m != nil {
		return m.Method
	}
	return schema.ANY
}

// ListOfObjectsRequest
//
// x-displayName: "List Objects Request"
// Request for GetListOfObjects API
type ListObjectsRequest struct {
	// namespace
	//
	// x-displayName: "Namespace"
	// x-example: "system"
	// x-required
	// Namespace of the stored_object
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// object_type
	//
	// x-displayName: "Object Type"
	// x-example: "swagger"
	// Optional query parameter. Type of the stored_object
	ObjectType string `protobuf:"bytes,2,opt,name=object_type,json=objectType,proto3" json:"object_type,omitempty"`
	// name
	//
	// x-displayName: "Name"
	// x-example: "volt-api-specs"
	// Optional query parameter. Name of the stored_object
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// query_type
	//
	// x-displayName: "Query Type"
	// Optional query parameter. The type of search query needs to be performed. Could be EXACT_MATCH or PREFIX_MATCH.
	// EXACT_MATCH returns the objects with exact match on the name filed, while PREFIX_MATCH returns the list of object matching the 'name' prefix. Default is EXACT_MATCH.
	QueryType QueryType `protobuf:"varint,4,opt,name=query_type,json=queryType,proto3,enum=ves.io.schema.stored_object.QueryType" json:"query_type,omitempty"`
	// latest_version_only
	//
	// x-displayName: "Latest Versions Only"
	// Optional query parameter. If passed, returns only latest version of the objects.
	LatestVersionOnly bool `protobuf:"varint,5,opt,name=latest_version_only,json=latestVersionOnly,proto3" json:"latest_version_only,omitempty"`
}

func (m *ListObjectsRequest) Reset()      { *m = ListObjectsRequest{} }
func (*ListObjectsRequest) ProtoMessage() {}
func (*ListObjectsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_26a4f37803eefdf5, []int{6}
}
func (m *ListObjectsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListObjectsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ListObjectsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListObjectsRequest.Merge(m, src)
}
func (m *ListObjectsRequest) XXX_Size() int {
	return m.Size()
}
func (m *ListObjectsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListObjectsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListObjectsRequest proto.InternalMessageInfo

func (m *ListObjectsRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *ListObjectsRequest) GetObjectType() string {
	if m != nil {
		return m.ObjectType
	}
	return ""
}

func (m *ListObjectsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListObjectsRequest) GetQueryType() QueryType {
	if m != nil {
		return m.QueryType
	}
	return EXACT_MATCH
}

func (m *ListObjectsRequest) GetLatestVersionOnly() bool {
	if m != nil {
		return m.LatestVersionOnly
	}
	return false
}

// ListOfObjectsResponse
//
// x-displayName: "List Objects Response"
// Response for GetListOfObjects API
type StoredObjectDescriptor struct {
	// url
	//
	// x-displayName: "Url"
	// x-required
	// Url of the stored object
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// description
	//
	// x-displayName: "description"
	// Optional field, the Description for the object
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// creation_timestamp
	//
	// x-displayName: "Creation Timestamp"
	// x-required
	// Creation date & time for the object
	CreationTimestamp *types.Timestamp `protobuf:"bytes,3,opt,name=creation_timestamp,json=creationTimestamp,proto3" json:"creation_timestamp,omitempty"`
}

func (m *StoredObjectDescriptor) Reset()      { *m = StoredObjectDescriptor{} }
func (*StoredObjectDescriptor) ProtoMessage() {}
func (*StoredObjectDescriptor) Descriptor() ([]byte, []int) {
	return fileDescriptor_26a4f37803eefdf5, []int{7}
}
func (m *StoredObjectDescriptor) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StoredObjectDescriptor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *StoredObjectDescriptor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoredObjectDescriptor.Merge(m, src)
}
func (m *StoredObjectDescriptor) XXX_Size() int {
	return m.Size()
}
func (m *StoredObjectDescriptor) XXX_DiscardUnknown() {
	xxx_messageInfo_StoredObjectDescriptor.DiscardUnknown(m)
}

var xxx_messageInfo_StoredObjectDescriptor proto.InternalMessageInfo

func (m *StoredObjectDescriptor) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *StoredObjectDescriptor) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *StoredObjectDescriptor) GetCreationTimestamp() *types.Timestamp {
	if m != nil {
		return m.CreationTimestamp
	}
	return nil
}

// VersionDescriptor
//
// x-displayName: "Version Descriptor"
// Descriptor for store object version.
type VersionDescriptor struct {
	// version
	//
	// x-displayName: "Version"
	// Version of the stored object.
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// description
	//
	// x-displayName: "description"
	// Optional field, the Description for the object
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// creation_timestamp
	//
	// x-displayName: "Creation Timestamp"
	// x-required
	// Creation date & time for the object
	CreationTimestamp *types.Timestamp `protobuf:"bytes,3,opt,name=creation_timestamp,json=creationTimestamp,proto3" json:"creation_timestamp,omitempty"`
	// url
	//
	// x-displayName: "Url"
	// x-required
	// Url of the stored object
	Url string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	// latest_version
	//
	// x-displayName: "Latest Version"
	// A tag representing if this is the latest version for the object.
	LatestVersion bool `protobuf:"varint,5,opt,name=latest_version,json=latestVersion,proto3" json:"latest_version,omitempty"`
}

func (m *VersionDescriptor) Reset()      { *m = VersionDescriptor{} }
func (*VersionDescriptor) ProtoMessage() {}
func (*VersionDescriptor) Descriptor() ([]byte, []int) {
	return fileDescriptor_26a4f37803eefdf5, []int{8}
}
func (m *VersionDescriptor) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VersionDescriptor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *VersionDescriptor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionDescriptor.Merge(m, src)
}
func (m *VersionDescriptor) XXX_Size() int {
	return m.Size()
}
func (m *VersionDescriptor) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionDescriptor.DiscardUnknown(m)
}

var xxx_messageInfo_VersionDescriptor proto.InternalMessageInfo

func (m *VersionDescriptor) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *VersionDescriptor) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *VersionDescriptor) GetCreationTimestamp() *types.Timestamp {
	if m != nil {
		return m.CreationTimestamp
	}
	return nil
}

func (m *VersionDescriptor) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *VersionDescriptor) GetLatestVersion() bool {
	if m != nil {
		return m.LatestVersion
	}
	return false
}

// ListItemDescriptor
//
// x-displayName: "List Item Descriptor"
// A descriptor for list response item.
type ListItemDescriptor struct {
	// tenant
	//
	// x-displayName: "Tenant"
	// x-example: "acmecorp"
	// Tenant to which this object belongs.
	Tenant string `protobuf:"bytes,3,opt,name=tenant,proto3" json:"tenant,omitempty"`
	// name
	//
	// x-displayName: "Object Name"
	// Name of the stored object.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// versions
	//
	// x-displayName: "Versions"
	// Available versions for the stored object.
	Versions []*VersionDescriptor `protobuf:"bytes,2,rep,name=versions,proto3" json:"versions,omitempty"`
}

func (m *ListItemDescriptor) Reset()      { *m = ListItemDescriptor{} }
func (*ListItemDescriptor) ProtoMessage() {}
func (*ListItemDescriptor) Descriptor() ([]byte, []int) {
	return fileDescriptor_26a4f37803eefdf5, []int{9}
}
func (m *ListItemDescriptor) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListItemDescriptor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ListItemDescriptor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListItemDescriptor.Merge(m, src)
}
func (m *ListItemDescriptor) XXX_Size() int {
	return m.Size()
}
func (m *ListItemDescriptor) XXX_DiscardUnknown() {
	xxx_messageInfo_ListItemDescriptor.DiscardUnknown(m)
}

var xxx_messageInfo_ListItemDescriptor proto.InternalMessageInfo

func (m *ListItemDescriptor) GetTenant() string {
	if m != nil {
		return m.Tenant
	}
	return ""
}

func (m *ListItemDescriptor) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListItemDescriptor) GetVersions() []*VersionDescriptor {
	if m != nil {
		return m.Versions
	}
	return nil
}

// ListObjectsResponse
//
// x-displayName: "List Objects Response"
// Response for GetListOfObjects API
type ListObjectsResponse struct {
	// list of store object descriptors
	//
	// x-displayName: "Stored Object Descriptors"
	// Stored object names and available versions for each object.
	Items []*ListItemDescriptor `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (m *ListObjectsResponse) Reset()      { *m = ListObjectsResponse{} }
func (*ListObjectsResponse) ProtoMessage() {}
func (*ListObjectsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_26a4f37803eefdf5, []int{10}
}
func (m *ListObjectsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListObjectsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ListObjectsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListObjectsResponse.Merge(m, src)
}
func (m *ListObjectsResponse) XXX_Size() int {
	return m.Size()
}
func (m *ListObjectsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListObjectsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListObjectsResponse proto.InternalMessageInfo

func (m *ListObjectsResponse) GetItems() []*ListItemDescriptor {
	if m != nil {
		return m.Items
	}
	return nil
}

// DeleteObjectsRequest
//
// x-displayName: "Delete Objects Request"
// Request for DeleteObjects API
type DeleteObjectRequest struct {
	// namespace
	//
	// x-displayName: "Namespace"
	// x-example: "system"
	// x-required
	// Namespace of the stored_object
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// object_type
	//
	// x-displayName: "Object Type"
	// x-example: "swagger"
	// x-required
	// Type of the stored_object
	ObjectType string `protobuf:"bytes,2,opt,name=object_type,json=objectType,proto3" json:"object_type,omitempty"`
	// name
	//
	// x-displayName: "Name"
	// x-example: "volt-api-specs"
	// x-required
	// Name of the stored_object
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// version
	//
	// x-displayName: "Version"
	// x-example: "v1-21-01-12"
	// Version of the stored_object in "v{n}-{YY}-{MM}-{DD}" formatted string, where n is version number and YY/MM/DD is year, month and date.
	Version string `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	// force_delete
	//
	// x-displayName: "Force Delete"
	// x-example: "value"
	// Optional query parameter. If provided will delete all the versions of the specified object.
	ForceDelete bool `protobuf:"varint,5,opt,name=force_delete,json=forceDelete,proto3" json:"force_delete,omitempty"`
}

func (m *DeleteObjectRequest) Reset()      { *m = DeleteObjectRequest{} }
func (*DeleteObjectRequest) ProtoMessage() {}
func (*DeleteObjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_26a4f37803eefdf5, []int{11}
}
func (m *DeleteObjectRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeleteObjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *DeleteObjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteObjectRequest.Merge(m, src)
}
func (m *DeleteObjectRequest) XXX_Size() int {
	return m.Size()
}
func (m *DeleteObjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteObjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteObjectRequest proto.InternalMessageInfo

func (m *DeleteObjectRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *DeleteObjectRequest) GetObjectType() string {
	if m != nil {
		return m.ObjectType
	}
	return ""
}

func (m *DeleteObjectRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeleteObjectRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *DeleteObjectRequest) GetForceDelete() bool {
	if m != nil {
		return m.ForceDelete
	}
	return false
}

// DeleteObjectResponse
//
// x-displayName: "Delete Objects Response"
// Response for DeleteObjects API
type DeleteObjectResponse struct {
	// deleted_objects
	//
	// x-displayName: "Deleted Object Names"
	// x-example: "value"
	// Names of Deleted Object
	DeletedObjects []string `protobuf:"bytes,1,rep,name=deleted_objects,json=deletedObjects,proto3" json:"deleted_objects,omitempty"`
}

func (m *DeleteObjectResponse) Reset()      { *m = DeleteObjectResponse{} }
func (*DeleteObjectResponse) ProtoMessage() {}
func (*DeleteObjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_26a4f37803eefdf5, []int{12}
}
func (m *DeleteObjectResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeleteObjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *DeleteObjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteObjectResponse.Merge(m, src)
}
func (m *DeleteObjectResponse) XXX_Size() int {
	return m.Size()
}
func (m *DeleteObjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteObjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteObjectResponse proto.InternalMessageInfo

func (m *DeleteObjectResponse) GetDeletedObjects() []string {
	if m != nil {
		return m.DeletedObjects
	}
	return nil
}

func init() {
	proto.RegisterEnum("ves.io.schema.stored_object.QueryType", QueryType_name, QueryType_value)
	golang_proto.RegisterEnum("ves.io.schema.stored_object.QueryType", QueryType_name, QueryType_value)
	proto.RegisterType((*CreateObjectRequest)(nil), "ves.io.schema.stored_object.CreateObjectRequest")
	golang_proto.RegisterType((*CreateObjectRequest)(nil), "ves.io.schema.stored_object.CreateObjectRequest")
	proto.RegisterType((*CreateObjectResponse)(nil), "ves.io.schema.stored_object.CreateObjectResponse")
	golang_proto.RegisterType((*CreateObjectResponse)(nil), "ves.io.schema.stored_object.CreateObjectResponse")
	proto.RegisterType((*GetObjectRequest)(nil), "ves.io.schema.stored_object.GetObjectRequest")
	golang_proto.RegisterType((*GetObjectRequest)(nil), "ves.io.schema.stored_object.GetObjectRequest")
	proto.RegisterType((*GetObjectResponse)(nil), "ves.io.schema.stored_object.GetObjectResponse")
	golang_proto.RegisterType((*GetObjectResponse)(nil), "ves.io.schema.stored_object.GetObjectResponse")
	proto.RegisterType((*PreSignedUrl)(nil), "ves.io.schema.stored_object.PreSignedUrl")
	golang_proto.RegisterType((*PreSignedUrl)(nil), "ves.io.schema.stored_object.PreSignedUrl")
	proto.RegisterType((*PresignedUrlData)(nil), "ves.io.schema.stored_object.PresignedUrlData")
	golang_proto.RegisterType((*PresignedUrlData)(nil), "ves.io.schema.stored_object.PresignedUrlData")
	proto.RegisterType((*ListObjectsRequest)(nil), "ves.io.schema.stored_object.ListObjectsRequest")
	golang_proto.RegisterType((*ListObjectsRequest)(nil), "ves.io.schema.stored_object.ListObjectsRequest")
	proto.RegisterType((*StoredObjectDescriptor)(nil), "ves.io.schema.stored_object.StoredObjectDescriptor")
	golang_proto.RegisterType((*StoredObjectDescriptor)(nil), "ves.io.schema.stored_object.StoredObjectDescriptor")
	proto.RegisterType((*VersionDescriptor)(nil), "ves.io.schema.stored_object.VersionDescriptor")
	golang_proto.RegisterType((*VersionDescriptor)(nil), "ves.io.schema.stored_object.VersionDescriptor")
	proto.RegisterType((*ListItemDescriptor)(nil), "ves.io.schema.stored_object.ListItemDescriptor")
	golang_proto.RegisterType((*ListItemDescriptor)(nil), "ves.io.schema.stored_object.ListItemDescriptor")
	proto.RegisterType((*ListObjectsResponse)(nil), "ves.io.schema.stored_object.ListObjectsResponse")
	golang_proto.RegisterType((*ListObjectsResponse)(nil), "ves.io.schema.stored_object.ListObjectsResponse")
	proto.RegisterType((*DeleteObjectRequest)(nil), "ves.io.schema.stored_object.DeleteObjectRequest")
	golang_proto.RegisterType((*DeleteObjectRequest)(nil), "ves.io.schema.stored_object.DeleteObjectRequest")
	proto.RegisterType((*DeleteObjectResponse)(nil), "ves.io.schema.stored_object.DeleteObjectResponse")
	golang_proto.RegisterType((*DeleteObjectResponse)(nil), "ves.io.schema.stored_object.DeleteObjectResponse")
}

func init() {
	proto.RegisterFile("ves.io/schema/stored_object/common_types.proto", fileDescriptor_26a4f37803eefdf5)
}
func init() {
	golang_proto.RegisterFile("ves.io/schema/stored_object/common_types.proto", fileDescriptor_26a4f37803eefdf5)
}

var fileDescriptor_26a4f37803eefdf5 = []byte{
	// 1298 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x57, 0xcd, 0x6e, 0x13, 0x47,
	0x1c, 0xf7, 0xd8, 0x26, 0x38, 0xb3, 0x21, 0x71, 0x26, 0x11, 0x35, 0x09, 0x2c, 0xee, 0x36, 0x80,
	0x53, 0xe2, 0x35, 0x38, 0x95, 0xfa, 0x71, 0x68, 0x9b, 0x90, 0xd0, 0x24, 0x2a, 0x05, 0x96, 0x40,
	0x51, 0x11, 0xac, 0xd6, 0xf6, 0x64, 0xb3, 0x74, 0x77, 0x67, 0x99, 0x1d, 0x1b, 0x5c, 0x40, 0xca,
	0x03, 0x54, 0x6a, 0x1f, 0xa0, 0x87, 0x4a, 0x5c, 0x78, 0x86, 0xe6, 0x82, 0x7a, 0xe2, 0x98, 0x23,
	0x52, 0x0f, 0x2d, 0xce, 0xa1, 0xed, 0x0d, 0xa9, 0x2f, 0x50, 0xed, 0xcc, 0xac, 0x9d, 0x75, 0x52,
	0xf7, 0x82, 0x84, 0x38, 0xed, 0xcc, 0xfc, 0x3f, 0xe6, 0xff, 0xf1, 0xfb, 0xcd, 0xcc, 0x42, 0xbd,
	0x85, 0x43, 0xdd, 0x21, 0x95, 0xb0, 0xbe, 0x89, 0x3d, 0xab, 0x12, 0x32, 0x42, 0x71, 0xc3, 0x24,
	0xb5, 0xbb, 0xb8, 0xce, 0x2a, 0x75, 0xe2, 0x79, 0xc4, 0x37, 0x59, 0x3b, 0xc0, 0xa1, 0x1e, 0x50,
	0xc2, 0x08, 0x9a, 0x16, 0xfa, 0xba, 0xd0, 0xd7, 0x13, 0xfa, 0x53, 0x65, 0xdb, 0x61, 0x9b, 0xcd,
	0x9a, 0x5e, 0x27, 0x5e, 0xc5, 0x26, 0x36, 0xa9, 0x70, 0x9b, 0x5a, 0x73, 0x83, 0xcf, 0xf8, 0x84,
	0x8f, 0x84, 0xaf, 0xa9, 0x93, 0x36, 0x21, 0xb6, 0x8b, 0x7b, 0x5a, 0xcc, 0xf1, 0x70, 0xc8, 0x2c,
	0x2f, 0x90, 0x0a, 0xd3, 0xc9, 0xe0, 0x48, 0xc0, 0x1c, 0xe2, 0xcb, 0x48, 0xa6, 0x8e, 0x25, 0x85,
	0x7b, 0x82, 0x9c, 0x3a, 0x9e, 0x14, 0xb5, 0x2c, 0xd7, 0x69, 0x58, 0x0c, 0x4b, 0x69, 0xb1, 0x4f,
	0xea, 0xe0, 0xfb, 0x66, 0xc2, 0xb5, 0xf6, 0x67, 0x06, 0x4e, 0x5c, 0xa0, 0xd8, 0x62, 0xf8, 0x32,
	0x4f, 0xcc, 0xc0, 0xf7, 0x9a, 0x38, 0x64, 0xe8, 0x38, 0x1c, 0xf6, 0x2d, 0x0f, 0x87, 0x81, 0x55,
	0xc7, 0x05, 0x50, 0x04, 0xa5, 0x61, 0xa3, 0xb7, 0x80, 0xbe, 0x82, 0x8a, 0xa8, 0x03, 0x2f, 0x58,
	0x21, 0x1d, 0xc9, 0x17, 0xcb, 0xbf, 0xfc, 0xfd, 0x2c, 0x53, 0xa2, 0xa7, 0x8d, 0x99, 0x5b, 0x5a,
	0x78, 0xdf, 0xb2, 0x6d, 0x4c, 0xb5, 0xb9, 0xa2, 0x66, 0x63, 0x1f, 0x53, 0xa7, 0x1e, 0x0d, 0x6b,
	0x8e, 0x5d, 0x16, 0x76, 0xda, 0x6d, 0x03, 0x8a, 0xd1, 0x7a, 0x3b, 0xc0, 0xe8, 0x3c, 0xcc, 0x46,
	0xce, 0x0b, 0x19, 0xee, 0xe8, 0x44, 0xe4, 0xe8, 0x10, 0xcd, 0x14, 0xb6, 0xb2, 0xd1, 0x28, 0x4b,
	0xd3, 0x79, 0x20, 0x97, 0x7e, 0x4e, 0x03, 0x83, 0xab, 0xa2, 0x79, 0x38, 0x12, 0x32, 0xea, 0xf8,
	0xb6, 0xd9, 0xb2, 0xdc, 0x26, 0x2e, 0x64, 0xb9, 0xe9, 0xe8, 0xf3, 0xc7, 0x5c, 0x75, 0x88, 0x66,
	0x0b, 0x5b, 0x5b, 0x9f, 0xaf, 0xa4, 0x0c, 0x45, 0x68, 0xdd, 0x88, 0x94, 0xd0, 0x79, 0xa8, 0xd4,
	0xda, 0x0c, 0x87, 0xd2, 0xe6, 0x50, 0x11, 0x94, 0x46, 0x7a, 0x36, 0xdf, 0xc5, 0x36, 0x90, 0x2b,
	0x09, 0x13, 0x03, 0x8e, 0xd6, 0x89, 0xcf, 0xb0, 0xcf, 0xcc, 0x0d, 0x42, 0x3d, 0x8b, 0x15, 0x0e,
	0xf3, 0x9d, 0xce, 0x46, 0x26, 0xa7, 0xe9, 0x8c, 0xa1, 0xdd, 0xd2, 0xa2, 0xdc, 0xee, 0x86, 0xc4,
	0x8f, 0xbe, 0x6d, 0xcb, 0x73, 0xa3, 0x2f, 0x7b, 0xc0, 0x44, 0xca, 0xbe, 0x76, 0xdb, 0x38, 0x22,
	0x5d, 0x5c, 0xe4, 0x1e, 0xd0, 0x1c, 0x54, 0x1a, 0x38, 0xac, 0x53, 0x87, 0xb7, 0xa2, 0x90, 0xe3,
	0x0e, 0x61, 0x2f, 0x6b, 0x63, 0xaf, 0xf8, 0x93, 0xd9, 0x5f, 0xb7, 0xc1, 0x29, 0x38, 0x06, 0x73,
	0x97, 0x30, 0xb3, 0x1a, 0x16, 0xb3, 0x50, 0x66, 0x7e, 0xee, 0x23, 0x88, 0xa0, 0x72, 0x3d, 0x70,
	0x89, 0xd5, 0x28, 0x5e, 0x74, 0x5c, 0x8c, 0x32, 0x1f, 0xcc, 0x7d, 0xb8, 0x38, 0x09, 0x73, 0x72,
	0xa7, 0x10, 0xe5, 0x9e, 0x6d, 0x83, 0xec, 0xce, 0x36, 0x18, 0x5a, 0xcb, 0xe6, 0x86, 0xf2, 0x87,
	0xb5, 0xa7, 0x69, 0x38, 0x99, 0xec, 0x74, 0x18, 0x10, 0x3f, 0xc4, 0xe8, 0x32, 0xcc, 0x79, 0xd2,
	0x33, 0xef, 0xa4, 0x52, 0x9d, 0xd7, 0x07, 0x40, 0x5f, 0xbf, 0xc6, 0x67, 0xc2, 0xc9, 0x92, 0x8c,
	0x93, 0x50, 0xa3, 0xeb, 0x04, 0x2d, 0x41, 0xe4, 0x13, 0xd3, 0x6a, 0x34, 0x9c, 0x28, 0x7e, 0xcb,
	0x35, 0x1d, 0x7f, 0x83, 0xf0, 0x06, 0x29, 0xd5, 0xc9, 0x3e, 0xd7, 0xcb, 0x5e, 0xc0, 0xda, 0x2b,
	0x29, 0x23, 0xef, 0x93, 0x85, 0xae, 0xc1, 0xaa, 0xbf, 0x41, 0xd0, 0x15, 0x78, 0x24, 0xa0, 0x38,
	0x74, 0x6c, 0x1f, 0x37, 0xcc, 0x26, 0x75, 0x79, 0xb7, 0x94, 0xea, 0xec, 0xc0, 0xd8, 0xae, 0x50,
	0x7c, 0x8d, 0x5b, 0x5c, 0xa7, 0xee, 0x4a, 0xca, 0x18, 0xe9, 0x7a, 0xb8, 0x4e, 0xdd, 0xc5, 0x69,
	0x38, 0xd6, 0x17, 0x54, 0xb7, 0x48, 0x99, 0xb5, 0x6c, 0x0e, 0xe4, 0xd3, 0x6b, 0xd9, 0x5c, 0x26,
	0x9f, 0xd5, 0xfe, 0x01, 0x30, 0xff, 0x05, 0x66, 0x6f, 0x19, 0x23, 0x3e, 0x85, 0x87, 0x5b, 0x98,
	0x86, 0x11, 0xa2, 0x04, 0x19, 0x66, 0x22, 0x95, 0x93, 0xf4, 0x44, 0x75, 0xfa, 0x4e, 0xa9, 0xf5,
	0xe8, 0xc6, 0xec, 0xad, 0x73, 0xe5, 0x8f, 0x6f, 0x9f, 0x2d, 0x95, 0xf9, 0xf7, 0x61, 0xf5, 0xf1,
	0xec, 0xc3, 0xf9, 0xc7, 0x33, 0x46, 0x6c, 0xa4, 0xfd, 0x96, 0x86, 0xe3, 0x7b, 0xb2, 0x3e, 0x00,
	0x1d, 0x43, 0xaf, 0x03, 0x1d, 0xe7, 0xfa, 0x88, 0xcb, 0x4b, 0xb9, 0xa8, 0x0c, 0x60, 0xad, 0x9e,
	0x64, 0x6d, 0x9a, 0xb3, 0x56, 0xf9, 0x6f, 0xca, 0xbe, 0x76, 0xe4, 0xa0, 0x53, 0xfb, 0x0e, 0x01,
	0x5e, 0xe1, 0x3e, 0x5e, 0xef, 0xa3, 0x1f, 0x90, 0xc8, 0x8a, 0x30, 0xf5, 0x08, 0x8e, 0xec, 0xdd,
	0x02, 0x2d, 0xc0, 0x8c, 0x75, 0x3f, 0x94, 0x84, 0x2b, 0xff, 0x5f, 0x68, 0xdd, 0x50, 0x96, 0x2c,
	0x66, 0xad, 0xa4, 0x8c, 0xc8, 0x76, 0xf1, 0x3d, 0xf8, 0x4e, 0xa4, 0x68, 0xd9, 0xd8, 0x0c, 0x28,
	0x69, 0x39, 0x0d, 0x4c, 0xcd, 0xfa, 0x26, 0x71, 0xea, 0x98, 0xef, 0x9e, 0xde, 0xd9, 0x06, 0x40,
	0xe0, 0x5a, 0xfb, 0x1a, 0xe6, 0xfb, 0xbd, 0xa0, 0x3c, 0xcc, 0x44, 0xc5, 0x11, 0x50, 0x8e, 0x86,
	0xe8, 0x3c, 0x1c, 0xf2, 0x30, 0xdb, 0x24, 0x0d, 0x1e, 0xd6, 0x68, 0xf5, 0x58, 0x5f, 0x58, 0x2b,
	0x8c, 0x05, 0x97, 0xb8, 0x82, 0x21, 0x15, 0xb5, 0x27, 0x69, 0x88, 0xbe, 0x74, 0x42, 0x89, 0x9a,
	0xf0, 0xcd, 0x90, 0xa5, 0x94, 0x20, 0xcb, 0x64, 0x92, 0x2c, 0x09, 0x8e, 0x2c, 0x43, 0x78, 0xaf,
	0x89, 0x69, 0x5b, 0x6c, 0x9c, 0xe5, 0x59, 0x9e, 0x1e, 0x58, 0xfc, 0xab, 0x91, 0x7a, 0xb4, 0x8b,
	0x31, 0x7c, 0x2f, 0x1e, 0x22, 0x1d, 0x4e, 0xb8, 0x16, 0xc3, 0x21, 0x33, 0x25, 0x79, 0x4c, 0xe2,
	0xbb, 0x6d, 0x8e, 0xb3, 0x9c, 0x31, 0x2e, 0x44, 0x37, 0x84, 0xe4, 0xb2, 0xef, 0xb6, 0xb5, 0x27,
	0x00, 0x1e, 0x3d, 0x98, 0x18, 0x07, 0x74, 0xa1, 0xef, 0x76, 0x48, 0x0f, 0xbc, 0x1d, 0xd0, 0x2a,
	0x44, 0xf5, 0xe8, 0x54, 0x8f, 0x82, 0xe8, 0x3e, 0x2a, 0x78, 0x25, 0x94, 0xea, 0x94, 0x2e, 0x9e,
	0x1d, 0x7a, 0xfc, 0xec, 0xd0, 0xd7, 0x63, 0x0d, 0x63, 0x3c, 0xb6, 0xea, 0x2e, 0x69, 0xbf, 0x03,
	0x38, 0x2e, 0xa3, 0xde, 0x13, 0x60, 0xa1, 0x77, 0xac, 0x88, 0x20, 0xe3, 0xe9, 0x1b, 0x0b, 0x34,
	0xae, 0x59, 0xb6, 0x57, 0xb3, 0x53, 0x70, 0x34, 0xd9, 0x10, 0xd9, 0x8b, 0x23, 0x89, 0x5e, 0x68,
	0xdf, 0x03, 0x81, 0xd6, 0x55, 0x86, 0xbd, 0x3d, 0x29, 0x1e, 0x85, 0x43, 0x0c, 0xfb, 0x96, 0xcf,
	0x04, 0x82, 0x0c, 0x39, 0x43, 0x48, 0xe2, 0x4a, 0xe4, 0x2d, 0x10, 0xb4, 0x06, 0x73, 0x72, 0x8b,
	0x88, 0xbc, 0x99, 0x92, 0x52, 0xd5, 0x07, 0xe2, 0x67, 0x5f, 0x41, 0x8d, 0xae, 0xbd, 0x56, 0x83,
	0x13, 0x09, 0xee, 0xc8, 0x23, 0x77, 0x19, 0x1e, 0x72, 0x18, 0xf6, 0x62, 0xff, 0x95, 0x81, 0xfe,
	0xf7, 0xa7, 0x63, 0x08, 0x6b, 0xc9, 0xfc, 0x9f, 0xd2, 0x70, 0x62, 0x09, 0xbb, 0xf8, 0xad, 0x7b,
	0xe0, 0x2d, 0xf4, 0x5f, 0x67, 0x67, 0x22, 0x15, 0x8d, 0x16, 0xab, 0xea, 0x80, 0xeb, 0xec, 0xd1,
	0x9d, 0xde, 0x8d, 0x86, 0xde, 0x85, 0x23, 0x1b, 0x84, 0xd6, 0xb1, 0xd9, 0xe0, 0x05, 0x90, 0x98,
	0x50, 0xf8, 0x9a, 0xa8, 0x89, 0xf6, 0x19, 0x9c, 0x4c, 0x56, 0x47, 0xf6, 0xe0, 0x0c, 0x1c, 0x13,
	0x46, 0x71, 0xa1, 0xc3, 0x02, 0x28, 0x66, 0x4a, 0xc3, 0xc6, 0xa8, 0x5c, 0x96, 0x4d, 0x7b, 0x5f,
	0x87, 0xc3, 0xdd, 0x23, 0x02, 0x8d, 0x41, 0x65, 0xf9, 0xe6, 0xc2, 0x85, 0x75, 0xf3, 0xd2, 0xc2,
	0xfa, 0x85, 0x95, 0x7c, 0x0a, 0xe5, 0xe1, 0xc8, 0x15, 0x63, 0xf9, 0xe2, 0xea, 0x4d, 0xb9, 0x02,
	0x16, 0x7f, 0x00, 0x3b, 0x2f, 0xd5, 0xd4, 0x8b, 0x97, 0x6a, 0xea, 0xd5, 0x4b, 0x15, 0x6c, 0x75,
	0x54, 0xf0, 0xb4, 0xa3, 0x82, 0xe7, 0x1d, 0x15, 0xec, 0x74, 0x54, 0xf0, 0xa2, 0xa3, 0x82, 0x3f,
	0x3a, 0x2a, 0xf8, 0xab, 0xa3, 0xa6, 0x5e, 0x75, 0x54, 0xf0, 0xe3, 0xae, 0x9a, 0x7a, 0xb6, 0xab,
	0x82, 0x9d, 0x5d, 0x35, 0xf5, 0x62, 0x57, 0x4d, 0x7d, 0x73, 0xd5, 0x26, 0xc1, 0xb7, 0xb6, 0xde,
	0x22, 0x2e, 0xc3, 0x94, 0x5a, 0x7a, 0x33, 0xac, 0xf0, 0x41, 0x74, 0x2d, 0x95, 0xe3, 0x5b, 0xa0,
	0x1c, 0x8b, 0x2b, 0x41, 0xcd, 0x26, 0x15, 0xfc, 0x80, 0xc5, 0xff, 0x3c, 0x07, 0xfc, 0xfa, 0xd4,
	0x86, 0x38, 0xe9, 0xe6, 0xff, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x0f, 0x1e, 0x3b, 0x84, 0x20, 0x0d,
	0x00, 0x00,
}

func (x QueryType) String() string {
	s, ok := QueryType_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (this *CreateObjectRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateObjectRequest)
	if !ok {
		that2, ok := that.(CreateObjectRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Namespace != that1.Namespace {
		return false
	}
	if this.ObjectType != that1.ObjectType {
		return false
	}
	if this.Name != that1.Name {
		return false
	}
	if that1.Contents == nil {
		if this.Contents != nil {
			return false
		}
	} else if this.Contents == nil {
		return false
	} else if !this.Contents.Equal(that1.Contents) {
		return false
	}
	if this.ContentFormat != that1.ContentFormat {
		return false
	}
	if this.Description != that1.Description {
		return false
	}
	return true
}
func (this *CreateObjectRequest_StringValue) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateObjectRequest_StringValue)
	if !ok {
		that2, ok := that.(CreateObjectRequest_StringValue)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.StringValue != that1.StringValue {
		return false
	}
	return true
}
func (this *CreateObjectRequest_BytesValue) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateObjectRequest_BytesValue)
	if !ok {
		that2, ok := that.(CreateObjectRequest_BytesValue)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !bytes.Equal(this.BytesValue, that1.BytesValue) {
		return false
	}
	return true
}
func (this *CreateObjectResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateObjectResponse)
	if !ok {
		that2, ok := that.(CreateObjectResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Metadata.Equal(that1.Metadata) {
		return false
	}
	if that1.AdditionalInfo == nil {
		if this.AdditionalInfo != nil {
			return false
		}
	} else if this.AdditionalInfo == nil {
		return false
	} else if !this.AdditionalInfo.Equal(that1.AdditionalInfo) {
		return false
	}
	return true
}
func (this *CreateObjectResponse_NoAdditionalInfo) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateObjectResponse_NoAdditionalInfo)
	if !ok {
		that2, ok := that.(CreateObjectResponse_NoAdditionalInfo)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.NoAdditionalInfo.Equal(that1.NoAdditionalInfo) {
		return false
	}
	return true
}
func (this *CreateObjectResponse_PresignedUrl) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateObjectResponse_PresignedUrl)
	if !ok {
		that2, ok := that.(CreateObjectResponse_PresignedUrl)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.PresignedUrl.Equal(that1.PresignedUrl) {
		return false
	}
	return true
}
func (this *GetObjectRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetObjectRequest)
	if !ok {
		that2, ok := that.(GetObjectRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Namespace != that1.Namespace {
		return false
	}
	if this.ObjectType != that1.ObjectType {
		return false
	}
	if this.Name != that1.Name {
		return false
	}
	if this.Version != that1.Version {
		return false
	}
	return true
}
func (this *GetObjectResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetObjectResponse)
	if !ok {
		that2, ok := that.(GetObjectResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Metadata.Equal(that1.Metadata) {
		return false
	}
	if that1.Contents == nil {
		if this.Contents != nil {
			return false
		}
	} else if this.Contents == nil {
		return false
	} else if !this.Contents.Equal(that1.Contents) {
		return false
	}
	if this.ContentFormat != that1.ContentFormat {
		return false
	}
	return true
}
func (this *GetObjectResponse_StringValue) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetObjectResponse_StringValue)
	if !ok {
		that2, ok := that.(GetObjectResponse_StringValue)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.StringValue != that1.StringValue {
		return false
	}
	return true
}
func (this *GetObjectResponse_BytesValue) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetObjectResponse_BytesValue)
	if !ok {
		that2, ok := that.(GetObjectResponse_BytesValue)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !bytes.Equal(this.BytesValue, that1.BytesValue) {
		return false
	}
	return true
}
func (this *GetObjectResponse_PresignedUrl) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*GetObjectResponse_PresignedUrl)
	if !ok {
		that2, ok := that.(GetObjectResponse_PresignedUrl)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.PresignedUrl.Equal(that1.PresignedUrl) {
		return false
	}
	return true
}
func (this *PreSignedUrl) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*PreSignedUrl)
	if !ok {
		that2, ok := that.(PreSignedUrl)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if that1.StorageProviderChoice == nil {
		if this.StorageProviderChoice != nil {
			return false
		}
	} else if this.StorageProviderChoice == nil {
		return false
	} else if !this.StorageProviderChoice.Equal(that1.StorageProviderChoice) {
		return false
	}
	return true
}
func (this *PreSignedUrl_Aws) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*PreSignedUrl_Aws)
	if !ok {
		that2, ok := that.(PreSignedUrl_Aws)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Aws.Equal(that1.Aws) {
		return false
	}
	return true
}
func (this *PresignedUrlData) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*PresignedUrlData)
	if !ok {
		that2, ok := that.(PresignedUrlData)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Url != that1.Url {
		return false
	}
	if this.Method != that1.Method {
		return false
	}
	return true
}
func (this *ListObjectsRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ListObjectsRequest)
	if !ok {
		that2, ok := that.(ListObjectsRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Namespace != that1.Namespace {
		return false
	}
	if this.ObjectType != that1.ObjectType {
		return false
	}
	if this.Name != that1.Name {
		return false
	}
	if this.QueryType != that1.QueryType {
		return false
	}
	if this.LatestVersionOnly != that1.LatestVersionOnly {
		return false
	}
	return true
}
func (this *StoredObjectDescriptor) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*StoredObjectDescriptor)
	if !ok {
		that2, ok := that.(StoredObjectDescriptor)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Url != that1.Url {
		return false
	}
	if this.Description != that1.Description {
		return false
	}
	if !this.CreationTimestamp.Equal(that1.CreationTimestamp) {
		return false
	}
	return true
}
func (this *VersionDescriptor) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*VersionDescriptor)
	if !ok {
		that2, ok := that.(VersionDescriptor)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Version != that1.Version {
		return false
	}
	if this.Description != that1.Description {
		return false
	}
	if !this.CreationTimestamp.Equal(that1.CreationTimestamp) {
		return false
	}
	if this.Url != that1.Url {
		return false
	}
	if this.LatestVersion != that1.LatestVersion {
		return false
	}
	return true
}
func (this *ListItemDescriptor) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ListItemDescriptor)
	if !ok {
		that2, ok := that.(ListItemDescriptor)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Tenant != that1.Tenant {
		return false
	}
	if this.Name != that1.Name {
		return false
	}
	if len(this.Versions) != len(that1.Versions) {
		return false
	}
	for i := range this.Versions {
		if !this.Versions[i].Equal(that1.Versions[i]) {
			return false
		}
	}
	return true
}
func (this *ListObjectsResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ListObjectsResponse)
	if !ok {
		that2, ok := that.(ListObjectsResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Items) != len(that1.Items) {
		return false
	}
	for i := range this.Items {
		if !this.Items[i].Equal(that1.Items[i]) {
			return false
		}
	}
	return true
}
func (this *DeleteObjectRequest) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DeleteObjectRequest)
	if !ok {
		that2, ok := that.(DeleteObjectRequest)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Namespace != that1.Namespace {
		return false
	}
	if this.ObjectType != that1.ObjectType {
		return false
	}
	if this.Name != that1.Name {
		return false
	}
	if this.Version != that1.Version {
		return false
	}
	if this.ForceDelete != that1.ForceDelete {
		return false
	}
	return true
}
func (this *DeleteObjectResponse) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DeleteObjectResponse)
	if !ok {
		that2, ok := that.(DeleteObjectResponse)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.DeletedObjects) != len(that1.DeletedObjects) {
		return false
	}
	for i := range this.DeletedObjects {
		if this.DeletedObjects[i] != that1.DeletedObjects[i] {
			return false
		}
	}
	return true
}
func (this *CreateObjectRequest) goString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 11)
	s = append(s, "&stored_object.CreateObjectRequest{")
	s = append(s, "Namespace: "+fmt.Sprintf("%#v", this.Namespace)+",\n")
	s = append(s, "ObjectType: "+fmt.Sprintf("%#v", this.ObjectType)+",\n")
	s = append(s, "Name: "+fmt.Sprintf("%#v", this.Name)+",\n")
	if this.Contents != nil {
		s = append(s, "Contents: "+fmt.Sprintf("%#v", this.Contents)+",\n")
	}
	s = append(s, "ContentFormat: "+fmt.Sprintf("%#v", this.ContentFormat)+",\n")
	s = append(s, "Description: "+fmt.Sprintf("%#v", this.Description)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *CreateObjectRequest_StringValue) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&stored_object.CreateObjectRequest_StringValue{` +
		`StringValue:` + fmt.Sprintf("%#v", this.StringValue) + `}`}, ", ")
	return s
}
func (this *CreateObjectRequest_BytesValue) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&stored_object.CreateObjectRequest_BytesValue{` +
		`BytesValue:` + fmt.Sprintf("%#v", this.BytesValue) + `}`}, ", ")
	return s
}
func (this *CreateObjectResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&stored_object.CreateObjectResponse{")
	if this.Metadata != nil {
		s = append(s, "Metadata: "+fmt.Sprintf("%#v", this.Metadata)+",\n")
	}
	if this.AdditionalInfo != nil {
		s = append(s, "AdditionalInfo: "+fmt.Sprintf("%#v", this.AdditionalInfo)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *CreateObjectResponse_NoAdditionalInfo) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&stored_object.CreateObjectResponse_NoAdditionalInfo{` +
		`NoAdditionalInfo:` + fmt.Sprintf("%#v", this.NoAdditionalInfo) + `}`}, ", ")
	return s
}
func (this *CreateObjectResponse_PresignedUrl) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&stored_object.CreateObjectResponse_PresignedUrl{` +
		`PresignedUrl:` + fmt.Sprintf("%#v", this.PresignedUrl) + `}`}, ", ")
	return s
}
func (this *GetObjectRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&stored_object.GetObjectRequest{")
	s = append(s, "Namespace: "+fmt.Sprintf("%#v", this.Namespace)+",\n")
	s = append(s, "ObjectType: "+fmt.Sprintf("%#v", this.ObjectType)+",\n")
	s = append(s, "Name: "+fmt.Sprintf("%#v", this.Name)+",\n")
	s = append(s, "Version: "+fmt.Sprintf("%#v", this.Version)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetObjectResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&stored_object.GetObjectResponse{")
	if this.Metadata != nil {
		s = append(s, "Metadata: "+fmt.Sprintf("%#v", this.Metadata)+",\n")
	}
	if this.Contents != nil {
		s = append(s, "Contents: "+fmt.Sprintf("%#v", this.Contents)+",\n")
	}
	s = append(s, "ContentFormat: "+fmt.Sprintf("%#v", this.ContentFormat)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *GetObjectResponse_StringValue) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&stored_object.GetObjectResponse_StringValue{` +
		`StringValue:` + fmt.Sprintf("%#v", this.StringValue) + `}`}, ", ")
	return s
}
func (this *GetObjectResponse_BytesValue) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&stored_object.GetObjectResponse_BytesValue{` +
		`BytesValue:` + fmt.Sprintf("%#v", this.BytesValue) + `}`}, ", ")
	return s
}
func (this *GetObjectResponse_PresignedUrl) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&stored_object.GetObjectResponse_PresignedUrl{` +
		`PresignedUrl:` + fmt.Sprintf("%#v", this.PresignedUrl) + `}`}, ", ")
	return s
}
func (this *PreSignedUrl) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&stored_object.PreSignedUrl{")
	if this.StorageProviderChoice != nil {
		s = append(s, "StorageProviderChoice: "+fmt.Sprintf("%#v", this.StorageProviderChoice)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *PreSignedUrl_Aws) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&stored_object.PreSignedUrl_Aws{` +
		`Aws:` + fmt.Sprintf("%#v", this.Aws) + `}`}, ", ")
	return s
}
func (this *PresignedUrlData) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&stored_object.PresignedUrlData{")
	s = append(s, "Url: "+fmt.Sprintf("%#v", this.Url)+",\n")
	s = append(s, "Method: "+fmt.Sprintf("%#v", this.Method)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ListObjectsRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&stored_object.ListObjectsRequest{")
	s = append(s, "Namespace: "+fmt.Sprintf("%#v", this.Namespace)+",\n")
	s = append(s, "ObjectType: "+fmt.Sprintf("%#v", this.ObjectType)+",\n")
	s = append(s, "Name: "+fmt.Sprintf("%#v", this.Name)+",\n")
	s = append(s, "QueryType: "+fmt.Sprintf("%#v", this.QueryType)+",\n")
	s = append(s, "LatestVersionOnly: "+fmt.Sprintf("%#v", this.LatestVersionOnly)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *StoredObjectDescriptor) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&stored_object.StoredObjectDescriptor{")
	s = append(s, "Url: "+fmt.Sprintf("%#v", this.Url)+",\n")
	s = append(s, "Description: "+fmt.Sprintf("%#v", this.Description)+",\n")
	if this.CreationTimestamp != nil {
		s = append(s, "CreationTimestamp: "+fmt.Sprintf("%#v", this.CreationTimestamp)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *VersionDescriptor) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&stored_object.VersionDescriptor{")
	s = append(s, "Version: "+fmt.Sprintf("%#v", this.Version)+",\n")
	s = append(s, "Description: "+fmt.Sprintf("%#v", this.Description)+",\n")
	if this.CreationTimestamp != nil {
		s = append(s, "CreationTimestamp: "+fmt.Sprintf("%#v", this.CreationTimestamp)+",\n")
	}
	s = append(s, "Url: "+fmt.Sprintf("%#v", this.Url)+",\n")
	s = append(s, "LatestVersion: "+fmt.Sprintf("%#v", this.LatestVersion)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ListItemDescriptor) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&stored_object.ListItemDescriptor{")
	s = append(s, "Tenant: "+fmt.Sprintf("%#v", this.Tenant)+",\n")
	s = append(s, "Name: "+fmt.Sprintf("%#v", this.Name)+",\n")
	if this.Versions != nil {
		s = append(s, "Versions: "+fmt.Sprintf("%#v", this.Versions)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ListObjectsResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&stored_object.ListObjectsResponse{")
	if this.Items != nil {
		s = append(s, "Items: "+fmt.Sprintf("%#v", this.Items)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *DeleteObjectRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&stored_object.DeleteObjectRequest{")
	s = append(s, "Namespace: "+fmt.Sprintf("%#v", this.Namespace)+",\n")
	s = append(s, "ObjectType: "+fmt.Sprintf("%#v", this.ObjectType)+",\n")
	s = append(s, "Name: "+fmt.Sprintf("%#v", this.Name)+",\n")
	s = append(s, "Version: "+fmt.Sprintf("%#v", this.Version)+",\n")
	s = append(s, "ForceDelete: "+fmt.Sprintf("%#v", this.ForceDelete)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *DeleteObjectResponse) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&stored_object.DeleteObjectResponse{")
	s = append(s, "DeletedObjects: "+fmt.Sprintf("%#v", this.DeletedObjects)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringCommonTypes(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
func (m *CreateObjectRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateObjectRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateObjectRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintCommonTypes(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.ContentFormat) > 0 {
		i -= len(m.ContentFormat)
		copy(dAtA[i:], m.ContentFormat)
		i = encodeVarintCommonTypes(dAtA, i, uint64(len(m.ContentFormat)))
		i--
		dAtA[i] = 0x3a
	}
	if m.Contents != nil {
		{
			size := m.Contents.Size()
			i -= size
			if _, err := m.Contents.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintCommonTypes(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ObjectType) > 0 {
		i -= len(m.ObjectType)
		copy(dAtA[i:], m.ObjectType)
		i = encodeVarintCommonTypes(dAtA, i, uint64(len(m.ObjectType)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Namespace) > 0 {
		i -= len(m.Namespace)
		copy(dAtA[i:], m.Namespace)
		i = encodeVarintCommonTypes(dAtA, i, uint64(len(m.Namespace)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CreateObjectRequest_StringValue) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateObjectRequest_StringValue) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i -= len(m.StringValue)
	copy(dAtA[i:], m.StringValue)
	i = encodeVarintCommonTypes(dAtA, i, uint64(len(m.StringValue)))
	i--
	dAtA[i] = 0x22
	return len(dAtA) - i, nil
}
func (m *CreateObjectRequest_BytesValue) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateObjectRequest_BytesValue) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.BytesValue != nil {
		i -= len(m.BytesValue)
		copy(dAtA[i:], m.BytesValue)
		i = encodeVarintCommonTypes(dAtA, i, uint64(len(m.BytesValue)))
		i--
		dAtA[i] = 0x2a
	}
	return len(dAtA) - i, nil
}
func (m *CreateObjectResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateObjectResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateObjectResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AdditionalInfo != nil {
		{
			size := m.AdditionalInfo.Size()
			i -= size
			if _, err := m.AdditionalInfo.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.Metadata != nil {
		{
			size, err := m.Metadata.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCommonTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}

func (m *CreateObjectResponse_NoAdditionalInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateObjectResponse_NoAdditionalInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.NoAdditionalInfo != nil {
		{
			size, err := m.NoAdditionalInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCommonTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	return len(dAtA) - i, nil
}
func (m *CreateObjectResponse_PresignedUrl) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateObjectResponse_PresignedUrl) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.PresignedUrl != nil {
		{
			size, err := m.PresignedUrl.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCommonTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	return len(dAtA) - i, nil
}
func (m *GetObjectRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetObjectRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetObjectRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Version) > 0 {
		i -= len(m.Version)
		copy(dAtA[i:], m.Version)
		i = encodeVarintCommonTypes(dAtA, i, uint64(len(m.Version)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintCommonTypes(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ObjectType) > 0 {
		i -= len(m.ObjectType)
		copy(dAtA[i:], m.ObjectType)
		i = encodeVarintCommonTypes(dAtA, i, uint64(len(m.ObjectType)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Namespace) > 0 {
		i -= len(m.Namespace)
		copy(dAtA[i:], m.Namespace)
		i = encodeVarintCommonTypes(dAtA, i, uint64(len(m.Namespace)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetObjectResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetObjectResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetObjectResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Metadata != nil {
		{
			size, err := m.Metadata.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCommonTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.Contents != nil {
		{
			size := m.Contents.Size()
			i -= size
			if _, err := m.Contents.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if len(m.ContentFormat) > 0 {
		i -= len(m.ContentFormat)
		copy(dAtA[i:], m.ContentFormat)
		i = encodeVarintCommonTypes(dAtA, i, uint64(len(m.ContentFormat)))
		i--
		dAtA[i] = 0x22
	}
	return len(dAtA) - i, nil
}

func (m *GetObjectResponse_StringValue) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetObjectResponse_StringValue) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i -= len(m.StringValue)
	copy(dAtA[i:], m.StringValue)
	i = encodeVarintCommonTypes(dAtA, i, uint64(len(m.StringValue)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}
func (m *GetObjectResponse_BytesValue) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetObjectResponse_BytesValue) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.BytesValue != nil {
		i -= len(m.BytesValue)
		copy(dAtA[i:], m.BytesValue)
		i = encodeVarintCommonTypes(dAtA, i, uint64(len(m.BytesValue)))
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *GetObjectResponse_PresignedUrl) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetObjectResponse_PresignedUrl) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.PresignedUrl != nil {
		{
			size, err := m.PresignedUrl.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCommonTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	return len(dAtA) - i, nil
}
func (m *PreSignedUrl) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PreSignedUrl) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PreSignedUrl) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.StorageProviderChoice != nil {
		{
			size := m.StorageProviderChoice.Size()
			i -= size
			if _, err := m.StorageProviderChoice.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	return len(dAtA) - i, nil
}

func (m *PreSignedUrl_Aws) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PreSignedUrl_Aws) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Aws != nil {
		{
			size, err := m.Aws.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCommonTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *PresignedUrlData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PresignedUrlData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PresignedUrlData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Method != 0 {
		i = encodeVarintCommonTypes(dAtA, i, uint64(m.Method))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintCommonTypes(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ListObjectsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListObjectsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListObjectsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.LatestVersionOnly {
		i--
		if m.LatestVersionOnly {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.QueryType != 0 {
		i = encodeVarintCommonTypes(dAtA, i, uint64(m.QueryType))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintCommonTypes(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ObjectType) > 0 {
		i -= len(m.ObjectType)
		copy(dAtA[i:], m.ObjectType)
		i = encodeVarintCommonTypes(dAtA, i, uint64(len(m.ObjectType)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Namespace) > 0 {
		i -= len(m.Namespace)
		copy(dAtA[i:], m.Namespace)
		i = encodeVarintCommonTypes(dAtA, i, uint64(len(m.Namespace)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *StoredObjectDescriptor) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StoredObjectDescriptor) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StoredObjectDescriptor) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CreationTimestamp != nil {
		{
			size, err := m.CreationTimestamp.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCommonTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintCommonTypes(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintCommonTypes(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *VersionDescriptor) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VersionDescriptor) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VersionDescriptor) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.LatestVersion {
		i--
		if m.LatestVersion {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintCommonTypes(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x22
	}
	if m.CreationTimestamp != nil {
		{
			size, err := m.CreationTimestamp.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCommonTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintCommonTypes(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Version) > 0 {
		i -= len(m.Version)
		copy(dAtA[i:], m.Version)
		i = encodeVarintCommonTypes(dAtA, i, uint64(len(m.Version)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ListItemDescriptor) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListItemDescriptor) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListItemDescriptor) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Tenant) > 0 {
		i -= len(m.Tenant)
		copy(dAtA[i:], m.Tenant)
		i = encodeVarintCommonTypes(dAtA, i, uint64(len(m.Tenant)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Versions) > 0 {
		for iNdEx := len(m.Versions) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Versions[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintCommonTypes(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintCommonTypes(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ListObjectsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListObjectsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListObjectsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintCommonTypes(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	return len(dAtA) - i, nil
}

func (m *DeleteObjectRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeleteObjectRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeleteObjectRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ForceDelete {
		i--
		if m.ForceDelete {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if len(m.Version) > 0 {
		i -= len(m.Version)
		copy(dAtA[i:], m.Version)
		i = encodeVarintCommonTypes(dAtA, i, uint64(len(m.Version)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintCommonTypes(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ObjectType) > 0 {
		i -= len(m.ObjectType)
		copy(dAtA[i:], m.ObjectType)
		i = encodeVarintCommonTypes(dAtA, i, uint64(len(m.ObjectType)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Namespace) > 0 {
		i -= len(m.Namespace)
		copy(dAtA[i:], m.Namespace)
		i = encodeVarintCommonTypes(dAtA, i, uint64(len(m.Namespace)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DeleteObjectResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeleteObjectResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeleteObjectResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.DeletedObjects) > 0 {
		for iNdEx := len(m.DeletedObjects) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.DeletedObjects[iNdEx])
			copy(dAtA[i:], m.DeletedObjects[iNdEx])
			i = encodeVarintCommonTypes(dAtA, i, uint64(len(m.DeletedObjects[iNdEx])))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintCommonTypes(dAtA []byte, offset int, v uint64) int {
	offset -= sovCommonTypes(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *CreateObjectRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovCommonTypes(uint64(l))
	}
	l = len(m.ObjectType)
	if l > 0 {
		n += 1 + l + sovCommonTypes(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovCommonTypes(uint64(l))
	}
	if m.Contents != nil {
		n += m.Contents.Size()
	}
	l = len(m.ContentFormat)
	if l > 0 {
		n += 1 + l + sovCommonTypes(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovCommonTypes(uint64(l))
	}
	return n
}

func (m *CreateObjectRequest_StringValue) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.StringValue)
	n += 1 + l + sovCommonTypes(uint64(l))
	return n
}
func (m *CreateObjectRequest_BytesValue) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.BytesValue != nil {
		l = len(m.BytesValue)
		n += 1 + l + sovCommonTypes(uint64(l))
	}
	return n
}
func (m *CreateObjectResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Metadata != nil {
		l = m.Metadata.Size()
		n += 1 + l + sovCommonTypes(uint64(l))
	}
	if m.AdditionalInfo != nil {
		n += m.AdditionalInfo.Size()
	}
	return n
}

func (m *CreateObjectResponse_NoAdditionalInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.NoAdditionalInfo != nil {
		l = m.NoAdditionalInfo.Size()
		n += 1 + l + sovCommonTypes(uint64(l))
	}
	return n
}
func (m *CreateObjectResponse_PresignedUrl) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PresignedUrl != nil {
		l = m.PresignedUrl.Size()
		n += 1 + l + sovCommonTypes(uint64(l))
	}
	return n
}
func (m *GetObjectRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovCommonTypes(uint64(l))
	}
	l = len(m.ObjectType)
	if l > 0 {
		n += 1 + l + sovCommonTypes(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovCommonTypes(uint64(l))
	}
	l = len(m.Version)
	if l > 0 {
		n += 1 + l + sovCommonTypes(uint64(l))
	}
	return n
}

func (m *GetObjectResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Contents != nil {
		n += m.Contents.Size()
	}
	l = len(m.ContentFormat)
	if l > 0 {
		n += 1 + l + sovCommonTypes(uint64(l))
	}
	if m.Metadata != nil {
		l = m.Metadata.Size()
		n += 1 + l + sovCommonTypes(uint64(l))
	}
	return n
}

func (m *GetObjectResponse_StringValue) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.StringValue)
	n += 1 + l + sovCommonTypes(uint64(l))
	return n
}
func (m *GetObjectResponse_BytesValue) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.BytesValue != nil {
		l = len(m.BytesValue)
		n += 1 + l + sovCommonTypes(uint64(l))
	}
	return n
}
func (m *GetObjectResponse_PresignedUrl) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PresignedUrl != nil {
		l = m.PresignedUrl.Size()
		n += 1 + l + sovCommonTypes(uint64(l))
	}
	return n
}
func (m *PreSignedUrl) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.StorageProviderChoice != nil {
		n += m.StorageProviderChoice.Size()
	}
	return n
}

func (m *PreSignedUrl_Aws) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Aws != nil {
		l = m.Aws.Size()
		n += 1 + l + sovCommonTypes(uint64(l))
	}
	return n
}
func (m *PresignedUrlData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovCommonTypes(uint64(l))
	}
	if m.Method != 0 {
		n += 1 + sovCommonTypes(uint64(m.Method))
	}
	return n
}

func (m *ListObjectsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovCommonTypes(uint64(l))
	}
	l = len(m.ObjectType)
	if l > 0 {
		n += 1 + l + sovCommonTypes(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovCommonTypes(uint64(l))
	}
	if m.QueryType != 0 {
		n += 1 + sovCommonTypes(uint64(m.QueryType))
	}
	if m.LatestVersionOnly {
		n += 2
	}
	return n
}

func (m *StoredObjectDescriptor) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovCommonTypes(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovCommonTypes(uint64(l))
	}
	if m.CreationTimestamp != nil {
		l = m.CreationTimestamp.Size()
		n += 1 + l + sovCommonTypes(uint64(l))
	}
	return n
}

func (m *VersionDescriptor) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Version)
	if l > 0 {
		n += 1 + l + sovCommonTypes(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovCommonTypes(uint64(l))
	}
	if m.CreationTimestamp != nil {
		l = m.CreationTimestamp.Size()
		n += 1 + l + sovCommonTypes(uint64(l))
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovCommonTypes(uint64(l))
	}
	if m.LatestVersion {
		n += 2
	}
	return n
}

func (m *ListItemDescriptor) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovCommonTypes(uint64(l))
	}
	if len(m.Versions) > 0 {
		for _, e := range m.Versions {
			l = e.Size()
			n += 1 + l + sovCommonTypes(uint64(l))
		}
	}
	l = len(m.Tenant)
	if l > 0 {
		n += 1 + l + sovCommonTypes(uint64(l))
	}
	return n
}

func (m *ListObjectsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovCommonTypes(uint64(l))
		}
	}
	return n
}

func (m *DeleteObjectRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovCommonTypes(uint64(l))
	}
	l = len(m.ObjectType)
	if l > 0 {
		n += 1 + l + sovCommonTypes(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovCommonTypes(uint64(l))
	}
	l = len(m.Version)
	if l > 0 {
		n += 1 + l + sovCommonTypes(uint64(l))
	}
	if m.ForceDelete {
		n += 2
	}
	return n
}

func (m *DeleteObjectResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.DeletedObjects) > 0 {
		for _, s := range m.DeletedObjects {
			l = len(s)
			n += 1 + l + sovCommonTypes(uint64(l))
		}
	}
	return n
}

func sovCommonTypes(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozCommonTypes(x uint64) (n int) {
	return sovCommonTypes(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *CreateObjectRequest) string() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateObjectRequest{`,
		`Namespace:` + fmt.Sprintf("%v", this.Namespace) + `,`,
		`ObjectType:` + fmt.Sprintf("%v", this.ObjectType) + `,`,
		`Name:` + fmt.Sprintf("%v", this.Name) + `,`,
		`Contents:` + fmt.Sprintf("%v", this.Contents) + `,`,
		`ContentFormat:` + fmt.Sprintf("%v", this.ContentFormat) + `,`,
		`Description:` + fmt.Sprintf("%v", this.Description) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateObjectRequest_StringValue) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateObjectRequest_StringValue{`,
		`StringValue:` + fmt.Sprintf("%v", this.StringValue) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateObjectRequest_BytesValue) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateObjectRequest_BytesValue{`,
		`BytesValue:` + fmt.Sprintf("%v", this.BytesValue) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateObjectResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateObjectResponse{`,
		`Metadata:` + strings.Replace(this.Metadata.String(), "StoredObjectDescriptor", "StoredObjectDescriptor", 1) + `,`,
		`AdditionalInfo:` + fmt.Sprintf("%v", this.AdditionalInfo) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateObjectResponse_NoAdditionalInfo) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateObjectResponse_NoAdditionalInfo{`,
		`NoAdditionalInfo:` + strings.Replace(fmt.Sprintf("%v", this.NoAdditionalInfo), "Empty", "schema.Empty", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateObjectResponse_PresignedUrl) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateObjectResponse_PresignedUrl{`,
		`PresignedUrl:` + strings.Replace(fmt.Sprintf("%v", this.PresignedUrl), "PreSignedUrl", "PreSignedUrl", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetObjectRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetObjectRequest{`,
		`Namespace:` + fmt.Sprintf("%v", this.Namespace) + `,`,
		`ObjectType:` + fmt.Sprintf("%v", this.ObjectType) + `,`,
		`Name:` + fmt.Sprintf("%v", this.Name) + `,`,
		`Version:` + fmt.Sprintf("%v", this.Version) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetObjectResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetObjectResponse{`,
		`Contents:` + fmt.Sprintf("%v", this.Contents) + `,`,
		`ContentFormat:` + fmt.Sprintf("%v", this.ContentFormat) + `,`,
		`Metadata:` + strings.Replace(this.Metadata.String(), "StoredObjectDescriptor", "StoredObjectDescriptor", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetObjectResponse_StringValue) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetObjectResponse_StringValue{`,
		`StringValue:` + fmt.Sprintf("%v", this.StringValue) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetObjectResponse_BytesValue) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetObjectResponse_BytesValue{`,
		`BytesValue:` + fmt.Sprintf("%v", this.BytesValue) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetObjectResponse_PresignedUrl) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetObjectResponse_PresignedUrl{`,
		`PresignedUrl:` + strings.Replace(fmt.Sprintf("%v", this.PresignedUrl), "PreSignedUrl", "PreSignedUrl", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *PreSignedUrl) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&PreSignedUrl{`,
		`StorageProviderChoice:` + fmt.Sprintf("%v", this.StorageProviderChoice) + `,`,
		`}`,
	}, "")
	return s
}
func (this *PreSignedUrl_Aws) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&PreSignedUrl_Aws{`,
		`Aws:` + strings.Replace(fmt.Sprintf("%v", this.Aws), "PresignedUrlData", "PresignedUrlData", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *PresignedUrlData) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&PresignedUrlData{`,
		`Url:` + fmt.Sprintf("%v", this.Url) + `,`,
		`Method:` + fmt.Sprintf("%v", this.Method) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ListObjectsRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ListObjectsRequest{`,
		`Namespace:` + fmt.Sprintf("%v", this.Namespace) + `,`,
		`ObjectType:` + fmt.Sprintf("%v", this.ObjectType) + `,`,
		`Name:` + fmt.Sprintf("%v", this.Name) + `,`,
		`QueryType:` + fmt.Sprintf("%v", this.QueryType) + `,`,
		`LatestVersionOnly:` + fmt.Sprintf("%v", this.LatestVersionOnly) + `,`,
		`}`,
	}, "")
	return s
}
func (this *StoredObjectDescriptor) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&StoredObjectDescriptor{`,
		`Url:` + fmt.Sprintf("%v", this.Url) + `,`,
		`Description:` + fmt.Sprintf("%v", this.Description) + `,`,
		`CreationTimestamp:` + strings.Replace(fmt.Sprintf("%v", this.CreationTimestamp), "Timestamp", "types.Timestamp", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *VersionDescriptor) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&VersionDescriptor{`,
		`Version:` + fmt.Sprintf("%v", this.Version) + `,`,
		`Description:` + fmt.Sprintf("%v", this.Description) + `,`,
		`CreationTimestamp:` + strings.Replace(fmt.Sprintf("%v", this.CreationTimestamp), "Timestamp", "types.Timestamp", 1) + `,`,
		`Url:` + fmt.Sprintf("%v", this.Url) + `,`,
		`LatestVersion:` + fmt.Sprintf("%v", this.LatestVersion) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ListItemDescriptor) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForVersions := "[]*VersionDescriptor{"
	for _, f := range this.Versions {
		repeatedStringForVersions += strings.Replace(f.String(), "VersionDescriptor", "VersionDescriptor", 1) + ","
	}
	repeatedStringForVersions += "}"
	s := strings.Join([]string{`&ListItemDescriptor{`,
		`Name:` + fmt.Sprintf("%v", this.Name) + `,`,
		`Versions:` + repeatedStringForVersions + `,`,
		`Tenant:` + fmt.Sprintf("%v", this.Tenant) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ListObjectsResponse) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForItems := "[]*ListItemDescriptor{"
	for _, f := range this.Items {
		repeatedStringForItems += strings.Replace(f.String(), "ListItemDescriptor", "ListItemDescriptor", 1) + ","
	}
	repeatedStringForItems += "}"
	s := strings.Join([]string{`&ListObjectsResponse{`,
		`Items:` + repeatedStringForItems + `,`,
		`}`,
	}, "")
	return s
}
func (this *DeleteObjectRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&DeleteObjectRequest{`,
		`Namespace:` + fmt.Sprintf("%v", this.Namespace) + `,`,
		`ObjectType:` + fmt.Sprintf("%v", this.ObjectType) + `,`,
		`Name:` + fmt.Sprintf("%v", this.Name) + `,`,
		`Version:` + fmt.Sprintf("%v", this.Version) + `,`,
		`ForceDelete:` + fmt.Sprintf("%v", this.ForceDelete) + `,`,
		`}`,
	}, "")
	return s
}
func (this *DeleteObjectResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&DeleteObjectResponse{`,
		`DeletedObjects:` + fmt.Sprintf("%v", this.DeletedObjects) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringCommonTypes(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *CreateObjectRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCommonTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateObjectRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateObjectRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommonTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommonTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ObjectType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommonTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommonTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ObjectType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommonTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommonTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StringValue", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommonTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommonTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Contents = &CreateObjectRequest_StringValue{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BytesValue", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommonTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthCommonTypes
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := make([]byte, postIndex-iNdEx)
			copy(v, dAtA[iNdEx:postIndex])
			m.Contents = &CreateObjectRequest_BytesValue{v}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContentFormat", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommonTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommonTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ContentFormat = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommonTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommonTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCommonTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateObjectResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCommonTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateObjectResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateObjectResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Metadata", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommonTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCommonTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Metadata == nil {
				m.Metadata = &StoredObjectDescriptor{}
			}
			if err := m.Metadata.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoAdditionalInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommonTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCommonTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &schema.Empty{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.AdditionalInfo = &CreateObjectResponse_NoAdditionalInfo{v}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PresignedUrl", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommonTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCommonTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &PreSignedUrl{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.AdditionalInfo = &CreateObjectResponse_PresignedUrl{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCommonTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetObjectRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCommonTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetObjectRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetObjectRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommonTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommonTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ObjectType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommonTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommonTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ObjectType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommonTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommonTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommonTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommonTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Version = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCommonTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetObjectResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCommonTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetObjectResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetObjectResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StringValue", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommonTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommonTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Contents = &GetObjectResponse_StringValue{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BytesValue", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommonTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthCommonTypes
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := make([]byte, postIndex-iNdEx)
			copy(v, dAtA[iNdEx:postIndex])
			m.Contents = &GetObjectResponse_BytesValue{v}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContentFormat", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommonTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommonTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ContentFormat = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PresignedUrl", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommonTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCommonTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &PreSignedUrl{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Contents = &GetObjectResponse_PresignedUrl{v}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Metadata", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommonTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCommonTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Metadata == nil {
				m.Metadata = &StoredObjectDescriptor{}
			}
			if err := m.Metadata.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCommonTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PreSignedUrl) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCommonTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PreSignedUrl: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PreSignedUrl: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Aws", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommonTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCommonTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &PresignedUrlData{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.StorageProviderChoice = &PreSignedUrl_Aws{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCommonTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PresignedUrlData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCommonTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PresignedUrlData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PresignedUrlData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommonTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommonTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Method", wireType)
			}
			m.Method = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommonTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Method |= schema.HttpMethod(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipCommonTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListObjectsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCommonTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListObjectsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListObjectsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommonTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommonTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ObjectType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommonTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommonTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ObjectType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommonTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommonTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field QueryType", wireType)
			}
			m.QueryType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommonTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.QueryType |= QueryType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LatestVersionOnly", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommonTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.LatestVersionOnly = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipCommonTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StoredObjectDescriptor) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCommonTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StoredObjectDescriptor: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StoredObjectDescriptor: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommonTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommonTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommonTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommonTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreationTimestamp", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommonTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCommonTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreationTimestamp == nil {
				m.CreationTimestamp = &types.Timestamp{}
			}
			if err := m.CreationTimestamp.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCommonTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *VersionDescriptor) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCommonTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VersionDescriptor: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VersionDescriptor: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommonTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommonTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Version = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommonTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommonTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreationTimestamp", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommonTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCommonTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreationTimestamp == nil {
				m.CreationTimestamp = &types.Timestamp{}
			}
			if err := m.CreationTimestamp.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommonTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommonTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LatestVersion", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommonTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.LatestVersion = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipCommonTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListItemDescriptor) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCommonTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListItemDescriptor: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListItemDescriptor: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommonTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommonTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Versions", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommonTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCommonTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Versions = append(m.Versions, &VersionDescriptor{})
			if err := m.Versions[len(m.Versions)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tenant", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommonTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommonTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tenant = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCommonTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListObjectsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCommonTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListObjectsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListObjectsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommonTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCommonTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &ListItemDescriptor{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCommonTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeleteObjectRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCommonTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteObjectRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteObjectRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommonTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommonTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ObjectType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommonTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommonTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ObjectType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommonTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommonTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommonTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommonTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Version = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForceDelete", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommonTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ForceDelete = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipCommonTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeleteObjectResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCommonTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteObjectResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteObjectResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeletedObjects", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCommonTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCommonTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DeletedObjects = append(m.DeletedObjects, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCommonTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCommonTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipCommonTypes(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowCommonTypes
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCommonTypes
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCommonTypes
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthCommonTypes
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupCommonTypes
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthCommonTypes
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthCommonTypes        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowCommonTypes          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupCommonTypes = fmt.Errorf("proto: unexpected end of group")
)
